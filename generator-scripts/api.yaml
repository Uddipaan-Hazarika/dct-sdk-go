openapi: 3.0.0
info:
  title: Delphix DCT API
  version: 2.0.0
  description: Delphix DCT API
  contact:
    name: Delphix Support
    url: https://support.delphix.com
    email: support@delphix.com
servers:
- url: /v2
paths:
  /connectivity/check:
    post:
      tags:
      - Connectivity
      summary: Checks connectivity between an engine and a remote host machine on
        a given port.
      operationId: connectivity_check
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: connectivity_check
              $ref: '#/components/schemas/ConnectivityCheckParameters'
        description: The api to check connectivity of engine and a remote host on
          given port.
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ConnectivityCheckResponse'
  /bookmarks:
    get:
      summary: List all bookmarks.
      operationId: get_bookmarks
      tags:
      - Bookmarks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListBookmarksResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bookmark'
                  errors:
                    $ref: '#/components/schemas/Errors'
    post:
      tags:
      - Bookmarks
      summary: Create a bookmark at the current time.
      operationId: create_bookmark
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: bookmark
              $ref: '#/components/schemas/Bookmark'
        description: The parameters to create a bookmark.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: CreateBookmarkResponse
                properties:
                  bookmark:
                    $ref: '#/components/schemas/Bookmark'
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /bookmarks/{bookmarkId}:
    parameters:
    - in: path
      name: bookmarkId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the bookmark.
    get:
      summary: Get a bookmark by ID.
      operationId: get_bookmark_by_id
      tags:
      - Bookmarks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookmark'
    delete:
      summary: Delete a bookmark.
      operationId: delete_bookmark
      tags:
      - Bookmarks
      responses:
        '204':
          description: No Content
  /bookmarks/{bookmarkId}/vdb-groups:
    parameters:
    - in: path
      name: bookmarkId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the bookmark.
    get:
      summary: List VDB Groups compatible with this bookmark.
      operationId: get_vdb_groups_by_bookmark
      tags:
      - Bookmarks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListVDBGroupsByBookmarkResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VDBGroup'
  /sources:
    get:
      summary: List all sources.
      operationId: get_sources
      tags:
      - Sources
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListSourcesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Source'
                  errors:
                    $ref: '#/components/schemas/Errors'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /sources/{sourceId}:
    parameters:
    - in: path
      name: sourceId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the source.
    get:
      summary: Get a source by ID.
      operationId: get_source_by_id
      tags:
      - Sources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
  /dsources:
    get:
      summary: List all dSources.
      operationId: get_dsources
      tags:
      - DSources
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListDSourcesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DSource'
                  errors:
                    $ref: '#/components/schemas/Errors'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /dsources/search:
    x-internal: false
    post:
      summary: Search for DSources.
      operationId: search_dsources
      tags:
      - DSources
      x-filterable:
        description: DSource fields which can be used in filter expressions.
        fields:
        - id
        - data_uuid
        - database_type
        - name
        - database_version
        - storage_size
        - plugin_version
        - creation_date
        - group_name
        - enabled
        - engine_id
        - source_id
        - status
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchDSourcesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DSource'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /dsources/{dsourceId}:
    parameters:
    - $ref: '#/components/parameters/dsourceIdParam'
    get:
      summary: Get a dSource by ID.
      operationId: get_dsource_by_id
      tags:
      - DSources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DSource'
  /dsources/{dsourceId}/snapshots:
    parameters:
    - $ref: '#/components/parameters/dsourceIdParam'
    get:
      summary: List Snapshots for a dSource.
      operationId: get_dsource_snapshots
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      tags:
      - DSources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ListSnapshotsResponse'
    post:
      summary: Snapshot a DSource.
      operationId: snapshot_dsource
      tags:
      - DSources
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: dsource_tags
              $ref: '#/components/schemas/DSourceSnapshotParameters'
            examples:
              default_values:
                description: |
                  This request example does not set any property and will thus use the default behavior.
                summary: Using default Values
                value: {
                  }
              oracle_custom:
                description: |
                  This request examples customizes the snapshot process for an Oracle dSource.
                summary: Oracle customized
                value:
                  skip_space_check: true
                  force_full_backup: dsource-name
                  double_sync: true
              mssql_specific_backup:
                description: |
                  This request examples demonstrates how to specify a custom backup set UUID for an MSSql dSource.
                summary: MSSql specific backup
                value:
                  mssql_backup_uuid: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
                  sync_strategy: specific_backup
              ase_specific_backup:
                description: |
                  This request examples demonstrates how to specify a custom backup for an ASE dSource.
                summary: ASE specific backup
                value:
                  ase_backup_files:
                  - backup_file_stripe_1
                  - backup_file_stripe_2
                  sync_strategy: specific_backup
        description: Optional parameters to snapshot a DSource.
        required: false
      responses:
        '200':
          description: DSource snapshot initiated.
          content:
            application/json:
              schema:
                type: object
                title: SnapshotDSourceResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /dsources/{dsourceId}/tags:
    parameters:
    - $ref: '#/components/parameters/dsourceIdParam'
    post:
      tags:
      - DSources
      summary: Create tags for a dSource.
      operationId: create_tags_dsource
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: dsource_tags
              $ref: '#/components/schemas/TagsRequest'
        description: Tags information for DSource.
        required: true
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/TagsResponse'
    get:
      tags:
      - DSources
      summary: Get tags for a dSource.
      operationId: get_tags_dsource
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/TagsResponse'
  /dsources/{dsourceId}/tags/delete:
    parameters:
    - $ref: '#/components/parameters/dsourceIdParam'
    post:
      tags:
      - DSources
      summary: Delete tags for a dSource.
      operationId: delete_tags_dsource
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
        required: false
      responses:
        '200':
          description: OK
  /vdbs:
    get:
      summary: List all vdbs.
      operationId: get_vdbs
      tags:
      - VDBs
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListVDBsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VDB'
                  errors:
                    $ref: '#/components/schemas/Errors'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /vdbs/search:
    post:
      summary: Search for VDBs.
      operationId: search_vdbs
      tags:
      - VDBs
      x-filterable:
        description: VDB fields which can be used in filter expressions.
        fields:
        - id
        - database_type
        - name
        - database_version
        - size
        - engine_id
        - status
        - environment_id
        - ip_address
        - fqdn
        - parent_id
        - group_name
        - creation_date
        - tags
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchVDBsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VDB'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /vdbs/{vdbId}:
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
    get:
      summary: Get a VDB by ID.
      operationId: get_vdb_by_id
      tags:
      - VDBs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VDB'
    patch:
      tags:
      - VDBs
      summary: Update values of a VDB
      operationId: update_vdb_by_id
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_vdb_parameter
              $ref: '#/components/schemas/UpdateVDBParameters'
        description: The new data to update a VDB.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UpdateVDBResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/snapshots:
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
    get:
      summary: List Snapshots for a dSource.
      operationId: get_vdb_snapshots
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      tags:
      - VDBs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ListSnapshotsResponse'
    post:
      summary: Snapshot a VDB.
      operationId: snapshot_vdb
      tags:
      - VDBs
      responses:
        '200':
          description: VDB snapshot initiated.
          content:
            application/json:
              schema:
                type: object
                title: SnapshotVDBResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/tags:
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
    post:
      tags:
      - VDBs
      summary: Create tags for a VDB.
      operationId: create_vdb_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: vdb_tags
              $ref: '#/components/schemas/TagsRequest'
        description: Tags information for VDB.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/TagsResponse'
    get:
      tags:
      - VDBs
      summary: Get tags for a VDB.
      operationId: get_tags_vdb
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/TagsResponse'
  /vdbs/{vdbId}/tags/delete:
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
    post:
      tags:
      - VDBs
      summary: Delete tags for a VDB.
      operationId: delete_vdb_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
        required: false
      responses:
        '200':
          description: OK
  /vdbs/{vdbId}/start:
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Start a VDB.
      tags:
      - VDBs
      operationId: start_vdb
      responses:
        '200':
          description: VDB start initiated.
          content:
            application/json:
              schema:
                type: object
                title: StartVDBResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/stop:
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Stop a VDB.
      tags:
      - VDBs
      operationId: stop_vdb
      responses:
        '200':
          description: VDB stop initiated.
          content:
            application/json:
              schema:
                type: object
                title: StopVDBResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/enable:
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Enable a VDB.
      tags:
      - VDBs
      operationId: enable_vdb
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: enable_vdb_parameter
              $ref: '#/components/schemas/EnableVDBParameters'
        description: The parameters to enable a VDB.
      responses:
        '200':
          description: VDB enable initiated.
          content:
            application/json:
              schema:
                type: object
                title: EnableVDBResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/disable:
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Disable a VDB.
      tags:
      - VDBs
      operationId: disable_vdb
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: disable_vdb_parameter
              $ref: '#/components/schemas/DisableVDBParameters'
        description: The parameters to disable a VDB.
      responses:
        '200':
          description: VDB disable initiated.
          content:
            application/json:
              schema:
                type: object
                title: DisableVDBResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/delete:
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Delete a VDB.
      tags:
      - VDBs
      operationId: delete_vdb
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: delete_vdb_parameter
              $ref: '#/components/schemas/DeleteVDBParameters'
        description: The parameters to delete a VDB.
      responses:
        '200':
          description: VDB delete initiated.
          content:
            application/json:
              schema:
                type: object
                title: DeleteVDBResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/rollback_by_timestamp:
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Rollback a VDB by timestamp.
      tags:
      - VDBs
      operationId: rollback_vdb_by_timestamp
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: rollback_vdb_parameter
              $ref: '#/components/schemas/RollbackVDBByTimestampParameters'
        description: The parameters to rollback a VDB.
      responses:
        '200':
          description: VDB rollback initiated.
          content:
            application/json:
              schema:
                type: object
                title: RollbackVDBByTimestampResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/rollback_by_snapshot:
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Rollback a VDB by snapshot.
      tags:
      - VDBs
      operationId: rollback_vdb_by_snapshot
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: rollback_vdb_parameter
              $ref: '#/components/schemas/RollbackVDBBySnapshotParameters'
        description: The parameters to rollback a VDB.
      responses:
        '200':
          description: VDB rollback initiated.
          content:
            application/json:
              schema:
                type: object
                title: RollbackVDBBySnapshotResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/rollback_from_bookmark:
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Rollback a VDB from a bookmark with only the same VDB.
      tags:
      - VDBs
      operationId: rollback_vdb_from_bookmark
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: rollback_vdb_parameter
              $ref: '#/components/schemas/RollbackVDBFromBookmarkParameters'
        description: The parameters to rollback a VDB.
      responses:
        '200':
          description: VDB rollback initiated.
          content:
            application/json:
              schema:
                type: object
                title: RollbackVDBFromBookmarkResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/refresh_by_timestamp:
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Refresh a VDB by timestamp.
      tags:
      - VDBs
      operationId: refresh_vdb_by_timestamp
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: refresh_vdb_parameter
              $ref: '#/components/schemas/RefreshVDBByTimestampParameters'
        description: The parameters to refresh a VDB.
      responses:
        '200':
          description: VDB refresh initiated.
          content:
            application/json:
              schema:
                type: object
                title: RefreshVDBByTimestampResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/refresh_by_snapshot:
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Refresh a VDB by snapshot.
      tags:
      - VDBs
      operationId: refresh_vdb_by_snapshot
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: refresh_vdb_parameter
              $ref: '#/components/schemas/RefreshVDBBySnapshotParameters'
        description: The parameters to refresh a VDB.
      responses:
        '200':
          description: VDB refresh initiated.
          content:
            application/json:
              schema:
                type: object
                title: RefreshVDBBySnapshotResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/refresh_from_bookmark:
    parameters:
    - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Refresh a VDB from bookmark with a single VDB.
      tags:
      - VDBs
      operationId: refresh_vdb_from_bookmark
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: refresh_vdb_parameter
              $ref: '#/components/schemas/RefreshVDBFromBookmarkParameters'
        description: The parameters to refresh a VDB.
      responses:
        '200':
          description: VDB refresh initiated.
          content:
            application/json:
              schema:
                type: object
                title: RefreshVDBFromBookmarkResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/provision_by_timestamp:
    post:
      summary: Provision a new VDB by timestamp.
      tags:
      - VDBs
      operationId: provision_vdb_by_timestamp
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: provision_vdb_parameter
              $ref: '#/components/schemas/ProvisionVDBByTimestampParameters'
        description: The parameters to provision a VDB.
        required: true
      responses:
        '200':
          description: VDB provisioning initiated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionVDBResponse'
  /vdbs/provision_by_snapshot:
    post:
      summary: Provision a new VDB by snapshot.
      tags:
      - VDBs
      operationId: provision_vdb_by_snapshot
      requestBody:
        $ref: '#/components/requestBodies/ProvisionBySnapshot'
      responses:
        '200':
          description: VDB provisioning initiated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionVDBResponse'
  /vdbs/provision_from_bookmark:
    post:
      summary: Provision a new VDB from a bookmark with a single VDB.
      tags:
      - VDBs
      operationId: provision_vdb_from_bookmark
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: provision_vdb_parameter
              $ref: '#/components/schemas/ProvisionVDBFromBookmarkParameters'
        description: The parameters to provision a VDB.
        required: true
      responses:
        '200':
          description: VDB provisioning initiated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionVDBResponse'
  /vdb-groups:
    get:
      summary: List all VDBGroups.
      operationId: get_vdb_groups
      tags:
      - VDBGroups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListVDBGroupsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VDBGroup'
                  errors:
                    $ref: '#/components/schemas/Errors'
    post:
      summary: Create a new VDBGroup.
      tags:
      - VDBGroups
      operationId: create_vdb_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: CreateVDBGroupRequest
              required:
              - name
              - vdb_ids
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 256
                vdb_ids:
                  type: array
                  items:
                    type: string
                    minLength: 1
                    maxLength: 256
                  minItems: 1
        description: The parameters to create a VDBGroup.
        required: true
      responses:
        '201':
          description: VDBGroup Created.
          content:
            application/json:
              schema:
                type: object
                title: CreateVDBGroupResponse
                properties:
                  vdb_group:
                    $ref: '#/components/schemas/VDBGroup'
  /vdb-groups/provision_from_bookmark:
    post:
      summary: Provision a new VDB Group from a Bookmark.
      tags:
      - VDBGroups
      operationId: provision_vdb_group_from_bookmark
      requestBody:
        $ref: '#/components/requestBodies/ProvisionVDBGroupFromBookmark'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ProvisionVDBGroupFromBookmarkResponse
                properties:
                  vdb_group:
                    $ref: '#/components/schemas/VDBGroup'
                  job:
                    $ref: '#/components/schemas/Job'
                    description: Initiated job.
  /vdb-groups/{vdbGroupId}:
    parameters:
    - $ref: '#/components/parameters/vdbGroupIdParam'
    get:
      summary: Get a VDBGroup by name.
      operationId: get_vdb_group
      tags:
      - VDBGroups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VDBGroup'
    patch:
      tags:
      - VDBGroups
      summary: Update values of a VDB group.
      operationId: update_vdb_group_by_id
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_vdb_group_parameter
              $ref: '#/components/schemas/UpdateVDBGroupParameters'
        description: The new data to update a VDB group.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VDBGroup'
    delete:
      summary: Delete a VDBGoup.
      operationId: delete_vdb_group
      tags:
      - VDBGroups
      responses:
        '200':
          description: OK
  /vdb-groups/{vdbGroupId}/refresh:
    parameters:
    - $ref: '#/components/parameters/vdbGroupIdParam'
    post:
      summary: Refresh a VDBGroup.
      tags:
      - VDBGroups
      operationId: refresh_vdb_group
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: refresh_vdb_group_parameters
              $ref: '#/components/schemas/RefreshVDBGroupParameters'
        description: The parameters to refresh a VDBGroup.
      responses:
        '200':
          description: VDBGroup refresh initiated.
          content:
            application/json:
              schema:
                type: object
                title: RefreshVDBGroupResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdb-groups/{vdbGroupId}/rollback:
    parameters:
    - $ref: '#/components/parameters/vdbGroupIdParam'
    post:
      summary: Rollback a VDBGroup.
      tags:
      - VDBGroups
      operationId: rollback_vdb_group
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: rollback_vdb_group_parameters
              $ref: '#/components/schemas/RollbackVDBGroupParameters'
        description: The parameters to rollback a VDBGroup.
      responses:
        '200':
          description: VDBGroup rollback initiated.
          content:
            application/json:
              schema:
                type: object
                title: RollbackVDBGroupResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdb-groups/{vdbGroupId}/bookmarks:
    parameters:
    - $ref: '#/components/parameters/vdbGroupIdParam'
    get:
      summary: List bookmarks compatible with this VDB Group.
      operationId: get_bookmarks_by_vdb_group
      tags:
      - VDBGroups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListBookmarksByVDBGroupsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bookmark'
  /snapshots/{snapshotId}:
    parameters:
    - in: path
      name: snapshotId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the snaphost.
    get:
      summary: Get a Snapshot by ID.
      operationId: get_snapshot_by_id
      tags:
      - Snapshots
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
  /environments:
    get:
      summary: List all environments.
      operationId: get_environments
      tags:
      - Environments
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListEnvironmentsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Environment'
                  errors:
                    $ref: '#/components/schemas/Errors'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
    post:
      tags:
      - Environments
      summary: Create an environment.
      operationId: create_environments
      requestBody:
        $ref: '#/components/requestBodies/CreateEnvironments'
      responses:
        '200':
          description: Environment creation initiated
          content:
            application/json:
              schema:
                type: object
                title: CreateEnvironmentResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
                  environment_id:
                    type: string
                    description: The id of environment created.
                    example: host-environment-1
  /environments/{environmentId}/tags:
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
    post:
      tags:
      - Environments
      summary: Create tags for an Environment.
      operationId: create_environment_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: environment_tags
              $ref: '#/components/schemas/TagsRequest'
        description: Tags information for Environment.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/TagsResponse'
    get:
      tags:
      - Environments
      summary: Get tags for an Environment.
      operationId: get_tags_environment
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/TagsResponse'
  /environments/{environmentId}/tags/delete:
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
    post:
      tags:
      - Environments
      summary: Delete tags for an Environment.
      operationId: delete_environment_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
        required: false
      responses:
        '200':
          description: Ok
  /environments/{environmentId}:
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
    get:
      summary: Returns an environment by ID.
      operationId: get_environment_by_id
      tags:
      - Environments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
    delete:
      summary: Delete an environment by ID.
      operationId: delete_environment
      tags:
      - Environments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: DeleteEnvironmentResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
    put:
      summary: Update an environment by ID.
      operationId: update_environment
      tags:
      - Environments
      requestBody:
        $ref: '#/components/requestBodies/UpdateEnvironment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UpdateEnvironmentResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /environments/search:
    post:
      summary: Search for environments.
      operationId: search_environments
      tags:
      - Environments
      x-filterable:
        description: environments fields which can be used in filter expressions.
        fields:
        - name
        - namespace
        - is_cluster
        - enabled
        - hosts
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/envSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchEnvironmentsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Environment'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /environments/{environmentId}/enable:
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
    put:
      tags:
      - Environments
      summary: Enable a disabled environment.
      operationId: enable_environment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: EnableEnvironmentResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /environments/{environmentId}/disable:
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
    put:
      tags:
      - Environments
      summary: Disable environment.
      operationId: disable_environment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: DisableEnvironmentResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /environments/{environmentId}/refresh:
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
    put:
      tags:
      - Environments
      summary: Refresh environment.
      operationId: refresh_environment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: RefreshEnvironmentResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /environments/{environmentId}/users:
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
    post:
      tags:
      - Environments
      summary: Create environment user.
      operationId: create_environment_user
      requestBody:
        $ref: '#/components/requestBodies/CreateEnvironmentUserBody'
      responses:
        '201':
          description: Environment user created
          content:
            application/json:
              schema:
                type: object
                title: CreateEnvironmentUserResponse
                properties:
                  user_ref:
                    type: string
                    description: The reference of the created environment user
                    example: user-reference-1
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
    get:
      tags:
      - Environments
      summary: List environment users.
      operationId: list_environment_users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ListEnvironmentUsers'
  /environments/{environmentId}/users/{userRef}:
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
    - $ref: '#/components/parameters/userRefParam'
    put:
      tags:
      - Environments
      summary: Update environment user.
      operationId: update_environment_user
      requestBody:
        $ref: '#/components/requestBodies/CreateEnvironmentUserBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UpdateEnvironmentUserResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
    delete:
      tags:
      - Environments
      summary: Delete environment user.
      operationId: delete_environment_user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: DeleteEnvironmentUserResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /environments/{environmentId}/users/{userRef}/primary:
    parameters:
    - $ref: '#/components/parameters/environmentIdParam'
    - $ref: '#/components/parameters/userRefParam'
    put:
      tags:
      - Environments
      summary: Set primary environment user.
      operationId: primary_environment_user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: PrimaryEnvironmentUserResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /management/engines:
    post:
      tags:
      - Management
      summary: Register an engine.
      operationId: register_engine
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: registered_engine
              $ref: '#/components/schemas/EngineRegistrationParameter'
        description: The parameters to register an engine.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/RegisteredEngine'
    get:
      tags:
      - Management
      summary: Returns a list of registered engines.
      operationId: get_registered_engines
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListRegisteredEnginesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/RegisteredEngine'
  /jobs/{jobId}:
    parameters:
    - in: path
      name: jobId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the job.
    get:
      summary: Returns a job by ID.
      operationId: get_job_by_id
      tags:
      - Jobs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
  /jobs/{jobId}/abandon:
    parameters:
    - in: path
      name: jobId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the job.
    post:
      summary: Abandons a job.
      description: |
        Abandoning a job means that the system will no longer track ongoing progress. The system will not attempt to stop the process in any way. The job will be moved to the ABANDONED terminal state.
      operationId: abandon_job
      tags:
      - Jobs
      responses:
        '204':
          description: No Content
  /management/engines/{engineId}:
    parameters:
    - $ref: '#/components/parameters/engineIdParam'
    get:
      tags:
      - Management
      summary: Returns a registered engine by ID.
      operationId: get_registered_engine
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/RegisteredEngine'
    put:
      tags:
      - Management
      summary: Update a registered engine.
      operationId: update_registered_engine
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: registered_engine
              $ref: '#/components/schemas/RegisteredEngine'
        description: The updated registration engine information.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/RegisteredEngine'
    delete:
      tags:
      - Management
      summary: Unregister an engine.
      operationId: unregister_engine
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: DeleteEngineResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /management/engines/search:
    post:
      summary: Search for engines.
      operationId: search_engines
      tags:
      - Management
      x-filterable:
        description: Engine fields which can be used in filter expressions.
        fields:
        - id
        - uuid
        - type
        - version
        - name
        - hostname
        - cpu_core_count
        - memory_size
        - data_storage_capacity
        - data_storage_used
        - insecure_ssl
        - unsafe_ssl_hostname_check
        - truststore_filename
        - status
        - username
        - hashicorp_vault_id
        - tags
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/engineSortParam'
      requestBody:
        $ref: '#/components/requestBodies/SearchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchEnginesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/RegisteredEngine'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
  /management/engines/{engineId}/tags:
    parameters:
    - $ref: '#/components/parameters/engineIdParam'
    post:
      tags:
      - Management
      summary: Create tags for a engine.
      operationId: create_engine_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: engine_tags
              $ref: '#/components/schemas/TagsRequest'
        description: Tags information for Engine.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/TagsResponse'
    get:
      tags:
      - Management
      summary: Get tags for a Engine.
      operationId: get_engine_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/TagsResponse'
  /management/engines/{engineId}/tags/delete:
    parameters:
    - $ref: '#/components/parameters/engineIdParam'
    post:
      tags:
      - Management
      summary: Delete tags for an Engine.
      operationId: delete_engine_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
        required: false
      responses:
        '200':
          description: Ok
  /management/vaults/hashicorp:
    get:
      tags:
      - Management
      summary: Returns a list of configured Hashicorp vaults.
      operationId: get_hashicorp_vaults
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HashicorpVault'
    post:
      tags:
      - Management
      summary: Configure a new Hashicorp Vault
      operationId: create_hashicorp_vault
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: hashicorp_vault
              $ref: '#/components/schemas/HashicorpVault'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/HashicorpVault'
  /management/vaults/hashicorp/{vaultId}:
    parameters:
    - in: path
      name: vaultId
      schema:
        type: integer
        format: int64
      required: true
      description: Numeric ID of the Hashicorp vault
    get:
      tags:
      - Management
      summary: Get a Hashicorp vault by id
      operationId: get_hashicorp_vault
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/HashicorpVault'
    delete:
      tags:
      - Management
      summary: Delete a Hashicorp vault by id
      operationId: delete_hashicorp_vault
      responses:
        '200':
          description: OK
  /management/api-clients:
    get:
      summary: Returns a list of API clients.
      operationId: get_api_clients
      tags:
      - ApiClients
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListApiClientsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApiClient'
    post:
      tags:
      - ApiClients
      summary: |
        Create a new API Client.
      operationId: create_api_client
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: api_client
              $ref: '#/components/schemas/ApiClientCreateParameter'
        required: true
      responses:
        '201':
          description: The created API client id and if requested the generated API
            key token.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ApiClientCreateResponse'
  /management/api-clients/{id}:
    parameters:
    - in: path
      name: id
      schema:
        type: integer
        format: int64
      required: true
      description: Numeric ID of the Api client
    get:
      tags:
      - ApiClients
      summary: Get an API client by id
      operationId: get_api_client
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ApiClient'
    put:
      summary: |
        Update an Api client.
      tags:
      - ApiClients
      operationId: update_api_client
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: api_client
              $ref: '#/components/schemas/ApiClient'
        required: true
      responses:
        '200':
          description: Updated Api Client
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ApiClient'
    delete:
      tags:
      - ApiClients
      summary: Delete an API client
      operationId: delete_api_client
      responses:
        '200':
          description: OK
  /management/smtp:
    get:
      tags:
      - Management
      summary: Returns the SMTP configuration
      operationId: get_smtp_config
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SMTPConfigParams'
    put:
      tags:
      - Management
      summary: Update SMTP Config.
      operationId: update_smtp_config
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: smtp_config
              $ref: '#/components/schemas/SMTPConfigParams'
        description: The parameters to update the SMTP config.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SMTPConfigParams'
  /management/smtp/validate:
    post:
      tags:
      - Management
      summary: Validate SMTP Config.
      operationId: validate_smtp_config
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: validate_smtp_config
              $ref: '#/components/schemas/SMTPConfigValidate'
        description: The parameters to validate the SMTP config.
        required: true
      responses:
        '200':
          description: OK
  /reporting/virtualization-storage-summary-report:
    get:
      summary: Gets the storage summary report for virtualization engines.
      tags:
      - Reporting
      operationId: get_virtualization_storage_summary_report
      responses:
        '200':
          description: Returns a list of storage summary data of virtualization engines.
          content:
            application/json:
              schema:
                type: object
                title: VirtualizationStorageSummaryReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VirtualizationStorageSummaryData'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
            text/csv:
              schema:
                type: string
                example: |
                  engine_id,engine_name,engine_hostname,total_capacity,free_storage,used_storage,used_percentage,dsource_count,vdb_count,total_object_count
                  1,my-engine,"eng01.dev.delphix.com",23404216320,20896169984,2508046336,10.71,5,25,30
  /reporting/vdb-inventory-report:
    get:
      summary: Gets the inventory report for virtualization engine VDBs.
      tags:
      - Reporting
      parameters:
      - $ref: '#/components/parameters/limitExtendedParam'
      - $ref: '#/components/parameters/cursor'
      operationId: get_vdb_inventory_report
      responses:
        '200':
          description: Returns a list of inventory data of VDBs.
          content:
            application/json:
              schema:
                type: object
                title: VDBInventoryReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VDBInventoryData'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
            text/csv:
              schema:
                type: string
                example: |
                  engine_name,name,type,version,parent_name,parent_id,creation_date,parent_timeflow_location,parent_timeflow_timestamp,parent_timeflow_timezone,enabled,status
                  engine1,VDB-1,Oracle,10.2.0.5,dSource 1,1-Container-1,2022-01-07T12:06:59.157Z,54321,2022-02-07T12:03:15.821Z,"America/New_York",EDT-0400,true,Running
  /reporting/dsource-usage-report:
    get:
      summary: Gets the usage report for virtualization engine dSources.
      tags:
      - Reporting
      parameters:
      - $ref: '#/components/parameters/limitExtendedParam'
      - $ref: '#/components/parameters/cursor'
      operationId: get_dsource_usage_report
      responses:
        '200':
          description: Returns a list of dSource usage data.
          content:
            application/json:
              schema:
                type: object
                title: DSourceUsageReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DSourceUsageData'
                  response_metadata:
                    $ref: '#/components/schemas/PaginatedResponseMetadata'
            text/csv:
              schema:
                type: string
                example: |
                  engine_name,name,unvirtualized_space,actual_space,dependant_vdbs
                  engine1,prod01,1849457664,607240704,0
                  engine2,test03,1696232960,1290392576,2
  /reporting/schedule:
    post:
      tags:
      - Reporting
      summary: Create a new report schedule.
      operationId: create_reporting_schedule
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: create_reporting_schedule_param
              $ref: '#/components/schemas/ReportingSchedule'
        required: true
      responses:
        '200':
          description: Returns the newly created schedule for a report.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ReportingSchedule'
    get:
      tags:
      - Reporting
      summary: List all report schedules.
      operationId: get_reporting_schedules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListReportingScheduleResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReportingSchedule'
  /reporting/schedule/{reportId}:
    parameters:
    - $ref: '#/components/parameters/reportIdParam'
    get:
      summary: Returns a report schedule by ID.
      operationId: get_reporting_schedule_by_id
      tags:
      - Reporting
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportingSchedule'
    delete:
      summary: Delete report schedule by ID.
      operationId: delete_reporting_schedule
      tags:
      - Reporting
      responses:
        '200':
          description: OK
    put:
      summary: Update a reporting schedule by ID.
      operationId: update_reporting_schedule
      tags:
      - Reporting
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_reporting_schedule_param
              $ref: '#/components/schemas/ReportingSchedule'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportingSchedule'
  /reporting/product_info:
    get:
      tags:
      - Reporting
      summary: Returns the DCT Product Information.
      operationId: get_product_info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ProductInfo'
components:
  parameters:
    limit:
      name: limit
      in: query
      description: Maximum number of objects to return per query. The value must be
        between 1 and 1000. Default is 100.
      example: 50
      schema:
        type: integer
        minimum: 1
        maximum: 1000
        default: 100
    limitExtendedParam:
      name: limit
      in: query
      description: Maximum number of objects to return per query. The value must be
        between 1 and 1000. Default is 10000.
      example: 100
      schema:
        type: integer
        minimum: 1
        maximum: 10000
        default: 10000
    cursor:
      name: cursor
      in: query
      description: Cursor to fetch the next or previous page of results. The value
        of this property must be extracted from the 'prev_cursor' or 'next_cursor'
        property of a PaginatedResponseMetadata which is contained in the response
        of list and search API endpoints.
      schema:
        type: string
        minLength: 1
        maxLength: 4096
    envSortParam:
      name: sort
      in: query
      description: A property name with a prepended '-' signifies descending order.
      example: key
      required: false
      schema:
        type: string
        enum:
        - name
        - -name
        - namespace
        - -namespace
        - is_cluster
        - -is_cluster
        - enabled
        - -enabled
        nullable: true
        example: name
    engineSortParam:
      name: sort
      in: query
      description: A property name with a prepended '-' signifies descending order.
      example: key
      required: false
      schema:
        type: string
        enum:
        - id
        - -id
        - uuid
        - -uuid
        - type
        - -type
        - version
        - -version
        - name
        - -name
        - hostname
        - -hostname
        - cpu_core_count
        - -cpu_core_count
        - memory_size
        - -memory_size
        - data_storage_capacity
        - -data_storage_capacity
        - data_storage_used
        - -data_storage_used
        - username
        - -username
        - hashicorp_vault_id
        - -hashicorp_vault_id
        nullable: true
        example: name
    vdbIdParam:
      in: path
      name: vdbId
      required: true
      schema:
        type: string
        minLength: 1
      description: The ID of the VDB.
    vdbGroupIdParam:
      in: path
      name: vdbGroupId
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 256
      description: The ID or name of the VDBGroup.
    engineIdParam:
      in: path
      name: engineId
      schema:
        type: integer
        format: int64
        minimum: 1
      required: true
      description: Numeric ID of the registered engine.
    dsourceIdParam:
      in: path
      name: dsourceId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the dSource.
    environmentIdParam:
      in: path
      name: environmentId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the environment.
    userRefParam:
      in: path
      name: userRef
      schema:
        type: string
        minLength: 1
      required: true
      description: Environment user reference.
    reportIdParam:
      in: path
      name: reportId
      schema:
        type: integer
      required: true
      description: The ID of the report schedule.
  schemas:
    Source:
      description: The Delphix representation of the source database (not typically
        managed by Delphix).
      type: object
      properties:
        id:
          description: The Source object entity ID.
          type: string
        database_type:
          description: The type of this source database.
          type: string
          nullable: true
        name:
          description: The name of this source database.
          type: string
          nullable: true
        database_version:
          description: The version of this source database.
          type: string
          nullable: true
        environment_id:
          description: A reference to the Environment that hosts this source database.
          type: string
          nullable: true
        data_uuid:
          description: A universal ID that uniquely identifies this source database.
          type: string
          nullable: true
        ip_address:
          description: The IP address of the source's host.
          type: string
          nullable: true
        fqdn:
          description: The FQDN of the source's host.
          type: string
          nullable: true
        size:
          description: The total size of this source database, in bytes.
          type: integer
          format: int64
          nullable: true
        jdbc_connection_string:
          description: The JDBC connection URL for this source database.
          type: string
          nullable: true
        plugin_version:
          description: The version of the plugin associated with this source database.
          type: string
          nullable: true
      example:
        id: source-123
        database_type: Oracle
        name: production01
        database_version: 11.1.0.7.0
        environment_id: environment-123
        data_uuid: 1734315df891991101eb96963535afa0
        ip_address: 192.0.2.0
        fqdn: prod01.myhost.com
        size: 856981504
        jdbc_connection_string: jdbc:oracle:thin:@(DESCRIPTION=(ENABLE=broken)(ADDRESS=(PROTOCOL=tcp)(HOST=10.43.47.94)(PORT=1521))(CONNECT_DATA=(UR=A)(SID=production01)))
        plugin_version: '1.0'
    DSource:
      description: The Delphix storage-based copy of the source databse including
        its history.
      type: object
      properties:
        id:
          description: The dSource object entity ID.
          type: string
        database_type:
          description: The database type of this dSource.
          type: string
          nullable: true
        name:
          description: The container name of this dSource.
          type: string
          nullable: true
        database_version:
          description: The database version of this dSource.
          type: string
          nullable: true
        data_uuid:
          description: A universal ID that uniquely identifies the dSource database.
          type: string
          nullable: true
        storage_size:
          description: The actual space used by this dSource, in bytes.
          type: integer
          format: int64
          nullable: true
        plugin_version:
          description: The version of the plugin associated with this source database.
          type: string
          nullable: true
        creation_date:
          description: The date this dSource was created.
          type: string
          format: date-time
          nullable: true
        group_name:
          description: The name of the group containing this dSource.
          type: string
          nullable: true
        enabled:
          description: A value indicating whether this dSource is enabled.
          type: boolean
          nullable: true
        engine_id:
          description: A reference to the Engine that this dSource belongs to.
          type: string
        source_id:
          description: A reference to the Source associated with this dSource.
          type: string
          nullable: true
        status:
          description: The runtime status of the dSource. 'Unknown' if all attempts
            to connect to the source failed.
          type: string
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      example:
        id: dsource-123
        database_type: Oracle
        name: prod01-main
        database_version: 10.2.0.5.0
        data_uuid: 1734315df891991101eb96963535afa0
        storage_size: 339292672
        plugin_version: '1.0'
        creation_date: '2021-05-01T08:51:34.148000+00:00'
        group_name: DSources
        enabled: true
        engine_id: engine-123
        source_id: source-123
        status: RUNNING
    VDB:
      description: A Delphix virtual database or dataset.
      type: object
      properties:
        id:
          description: The VDB object entity ID.
          type: string
        database_type:
          description: The database type of this VDB.
          type: string
          nullable: true
        name:
          description: The container name of this VDB.
          type: string
          nullable: true
        database_version:
          description: The database version of this VDB.
          type: string
          nullable: true
        size:
          description: The total size of this VDB, in bytes.
          type: integer
          format: int64
          nullable: true
        engine_id:
          description: A reference to the Engine that this VDB belongs to.
          type: string
        status:
          description: The runtime status of the VDB. 'Unknown' if all attempts to
            connect to the dataset failed.
          type: string
          nullable: true
        environment_id:
          description: A reference to the Environment that hosts this VDB.
          type: string
          nullable: true
        ip_address:
          description: The IP address of the VDB's host.
          type: string
          nullable: true
        fqdn:
          description: The FQDN of the VDB's host.
          type: string
          nullable: true
        parent_id:
          description: A reference to the parent dataset of this VDB.
          type: string
          nullable: true
        group_name:
          description: The name of the group containing this VDB.
          type: string
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        creation_date:
          description: The date this VDB was created.
          type: string
          format: date-time
          nullable: true
        hooks:
          $ref: '#/components/schemas/VirtualDatasetHooks'
      example:
        id: vdb-123
        database_type: Oracle
        name: prod01-copy01
        database_version: 10.2.0.5.0
        size: 339292672
        engine_id: engine-123
        status: RUNNING
        environment_id: environment-123
        ip_address: 192.0.2.0
        fqdn: virtual-dbs.myhost.com
        parent_id: vdb-122
        group_name: VDBs
        tags:
        - key: key1
          value: value1
        - key: key2
          value: value2
        creation_date: '2021-05-01T08:51:34.148000+00:00'
        hooks:
          pre_refresh:
          - name: Print the current user
            command: whoami
            shell: bash
            element_id: '0'
    VDBGroup:
      description: A collection of virtual databases and datesets.
      type: object
      required:
      - id
      - name
      - vdb_ids
      properties:
        id:
          description: A unique identifier for the entity.
          type: string
          minLength: 1
          maxLength: 256
          readOnly: true
          example: '123'
        name:
          description: A unique name for the entity.
          type: string
          minLength: 1
          maxLength: 256
          example: my-first-vdb-group
        vdb_ids:
          description: The list of VDB IDs in this VDBGroup.
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 256
          example:
          - vdb-123
          - vdb-456
    Bookmark:
      description: A Data Control Tower object that references points in time for
        one or more datasets.
      type: object
      required:
      - name
      - vdb_ids
      properties:
        id:
          description: The Bookmark object entity ID.
          type: string
          readOnly: true
          example: bookmark-123
        name:
          description: The user-defined name of this bookmark.
          type: string
          minLength: 1
          maxLength: 256
          example: my-bookmark-123
        creation_date:
          description: The date and time that this bookmark was created.
          type: string
          format: date-time
          readOnly: true
          example: '2021-07-04T08:51:34.148000+00:00'
        vdb_ids:
          description: The list of VDB IDs associated with this bookmark.
          type: array
          items:
            type: string
          example:
          - vdb-123
          - vdb-456
        retention:
          description: The retention policy for this bookmark, in days. A value of
            -1 indicates the bookmark should be kept forever.
          type: integer
          format: int64
          example: 365
        status:
          description: A message with details about operation progress or state of
            this bookmark.
          type: string
          nullable: true
          readOnly: true
          example: RESTORED
    Engine:
      description: A Delphix Virtualization or Masking Engine.
      type: object
      properties:
        id:
          description: The Engine object entity ID.
          type: string
        uuid:
          description: The unique identifier generated by this engine.
          type: string
          nullable: true
        type:
          description: The type of this engine.
          type: string
          enum:
          - VIRTUALIZATION
          - MASKING
          - BOTH
          - UNSET
          nullable: true
        version:
          description: The engine version.
          type: string
          nullable: true
        name:
          description: The name of this engine.
          type: string
        hostname:
          description: The hostname of this engine.
          type: string
        registration_status:
          description: The registration status of this engine.
          type: string
          enum:
          - CONNECTED
          - PENDING
          nullable: true
        connection_status:
          description: The connection status of this engine.
          type: string
          enum:
          - ONLINE
          - OFFLINE
          nullable: true
        last_connection_time:
          description: The last time a connection was established with this engine.
          type: string
          format: date-time
          nullable: true
        boot_storage_capacity:
          description: The total amount of storage allocated to the engine's boot
            partition, in bytes.
          type: integer
          format: int64
          nullable: true
        cpu_core_count:
          description: The total number of CPU cores on this engine.
          type: integer
          format: int32
          nullable: true
        cpu_type:
          description: The model of the processors on this engine.
          type: string
          nullable: true
        memory_size:
          description: The total amount of memory on this engine, in bytes.
          type: integer
          format: int64
          nullable: true
        data_storage_capacity:
          description: The total amount of storage allocated for engine objects and
            system metadata, in bytes.
          type: integer
          format: int64
          nullable: true
        data_storage_used:
          description: The amount of storage used by engine objects and system metadata,
            in bytes.
          type: integer
          format: int64
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      example:
        id: engine-123
        uuid: 54290b71-58cd-463d-bd62-7219d4c4d2d5
        type: VIRTUALIZATION
        version: 6.0.7.0
        name: My Favorite Engine
        hostname: eng09.dev.delphix.com
        registration_status: CONNECTED
        connection_status: ONLINE
        last_connection_time: '2021-03-29T15:10:00.976Z'
        boot_storage_capacity: 96000000000
        cpu_core_count: 4
        cpu_type: Intel(R) Xeon(R) CPU E5-2690 v3 @ 2.60GHz
        memory_size: 16000000000
        data_storage_capacity: 100000000000
        data_storage_used: 85000000000
    Environment:
      description: A grouping of a single host or a cluster of hosts.
      type: object
      properties:
        id:
          description: The Environment object entity ID.
          type: string
          example: environment-123
        name:
          description: The name of this environment.
          type: string
          example: Linux Test Host
        namespace:
          description: The namespace of this environment for replicated and restored
            objects.
          type: string
          nullable: true
          example: NAMESPACE-1
        engine_id:
          description: A reference to the Engine that this Environment connection
            is associated with.
          type: integer
          format: int64
          example: engine-123
        enabled:
          description: True if this environment is enabled.
          type: boolean
          example: true
        is_cluster:
          description: True if this environment is a cluster of hosts.
          type: boolean
          example: false
        hosts:
          description: The hosts that are part of this environment.
          type: array
          items:
            $ref: '#/components/schemas/Host'
        tags:
          description: The tags to be created for this environment.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        repositories:
          description: Repositories associated with this environment. A Repository
            typically corresponds to a database installation.
          type: array
          items:
            $ref: '#/components/schemas/Repository'
    EnvironmentCreateParameters:
      type: object
      required:
      - engine_id
      - os_name
      - hostname
      properties:
        name:
          type: string
          description: The name of the environment.
          minLength: 1
          maxLength: 256
          example: oracle-environment
        engine_id:
          type: integer
          format: int64
          description: The ID of the Engine onto which to create the environment.
          example: 12
        os_name:
          type: string
          description: Operating system type of the environment.
          enum:
          - UNIX
          - WINDOWS
          example: UNIX
        is_cluster:
          type: boolean
          description: Whether the environment to be created is a cluster.
          default: false
          example: true
        cluster_home:
          type: string
          description: Absolute path to cluster home drectory. This parameter is mandatory
            for UNIX cluster environments.
          minLength: 1
          maxLength: 256
          example: /u01/app/19.0.0.0/grid
        hostname:
          type: string
          description: host address of the machine.
          minLength: 1
          maxLength: 256
          example: db.host.com
        staging_environment:
          type: string
          description: Id of the connector environment which is used to connect to
            this source environment. This is mandatory parameter when creating Windows
            source environments.
          minLength: 1
          maxLength: 256
          example: 1-WINDOWS_HOST-1
        connector_port:
          type: integer
          format: int32
          description: Specify port on which Delphix connector will run. This is mandatory
            parameter when creating Windows target environments.
          minimum: 1
          maximum: 65535
          example: 9100
        is_target:
          type: boolean
          description: Whether the environment to be created is a target cluster environment.
            This property is used only when creating Windows cluster environments.
          example: true
        ssh_port:
          type: integer
          format: int64
          description: ssh port of the host.
          minimum: 1
          maximum: 65535
          default: 22
          example: 22
        toolkit_path:
          type: string
          description: The path for the toolkit that resides on the host.
          minLength: 1
          maxLength: 256
          example: /work
        username:
          type: string
          description: Username of the OS.
          minLength: 1
          maxLength: 256
          example: oracle
        password:
          type: string
          description: Password of the OS.
          minLength: 1
          maxLength: 256
          example: oracle
        vault:
          type: string
          description: The name or reference of the vault from which to read the host
            credentials.
          minLength: 1
          maxLength: 256
          example: my-vault
        hashicorp_vault_engine:
          type: string
          description: Vault engine name where the credential is stored.
          minLength: 1
          maxLength: 256
          example: kv
        hashicorp_vault_secret_path:
          type: string
          description: Path in the vault engine where the credential is stored.
          minLength: 1
          maxLength: 256
          example: oracle-env
        hashicorp_vault_username_key:
          type: string
          description: Key for the username in the key-value store.
          minLength: 1
          maxLength: 256
          example: username
        hashicorp_vault_secret_key:
          type: string
          description: Key for the password in the key-value store.
          minLength: 1
          maxLength: 256
          example: secret
        cyberark_vault_query_string:
          type: string
          description: Query to find a credential in the CyberArk vault.
          minLength: 1
          maxLength: 256
          example: Safe=Test;Folder=Test;Object=Test
        use_kerberos_authentication:
          type: boolean
          description: Whether to use kerberos authentication.
          example: true
        use_engine_public_key:
          type: boolean
          description: Whether to use public key authentication.
          example: true
        nfs_addresses:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 256
          description: array of ip address or hostnames
          example:
          - 192.168.10.2
        ase_db_username:
          type: string
          description: username of the SAP ASE database.
          minLength: 1
          maxLength: 256
          example: user-123
        ase_db_password:
          type: string
          description: password of the SAP ASE database.
          minLength: 1
          maxLength: 256
          example: test
        ase_db_vault:
          type: string
          description: The name or reference of the vault from which to read the ASE
            database credentials.
          minLength: 1
          maxLength: 256
          example: my-vault
        ase_db_hashicorp_vault_engine:
          type: string
          description: Vault engine name where the credential is stored.
          minLength: 1
          maxLength: 256
          example: kv
        ase_db_hashicorp_vault_secret_path:
          type: string
          description: Path in the vault engine where the credential is stored.
          minLength: 1
          maxLength: 256
          example: oracle-env
        ase_db_hashicorp_vault_username_key:
          type: string
          description: Key for the username in the key-value store.
          minLength: 1
          maxLength: 256
          example: username
        ase_db_hashicorp_vault_secret_key:
          type: string
          description: Key for the password in the key-value store.
          minLength: 1
          maxLength: 256
          example: secret
        ase_db_cyberark_vault_query_string:
          type: string
          description: Query to find a credential in the CyberArk vault.
          minLength: 1
          maxLength: 256
          example: Safe=Test;Folder=Test;Object=Test
        ase_db_use_kerberos_authentication:
          type: boolean
          description: Whether to use kerberos authentication for ASE DB discovery.
          example: true
        java_home:
          type: string
          description: The path to the user managed Java Development Kit (JDK). If
            not specified, then the OpenJDK will be used.
          minLength: 1
          maxLength: 256
          example: /Library/Java/JavaVirtualMachines/jdk/Contents/Home
        dsp_keystore_path:
          type: string
          description: DSP keystore path.
          minLength: 1
          maxLength: 256
          example: /tmp/keystore.keystore
        dsp_keystore_password:
          type: string
          description: DSP keystore password.
          minLength: 1
          maxLength: 256
          example: temp123
        dsp_keystore_alias:
          type: string
          description: DSP keystore alias.
          minLength: 1
          maxLength: 256
          example: oracle-src
        dsp_truststore_path:
          type: string
          description: DSP truststore path.
          minLength: 1
          maxLength: 256
          example: /tmp/truststore.keystore
        dsp_truststore_password:
          type: string
          description: DSP truststore password.
          minLength: 1
          maxLength: 256
          example: truststore123
        description:
          type: string
          description: The environment description.
          minLength: 1
          maxLength: 1024
          example: Unix Orcale source host
        tags:
          type: array
          maxItems: 1000
          description: The tags to be created for this environment.
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 1
    EnvironmentUpdateParameters:
      type: object
      properties:
        name:
          type: string
          description: The name of the environment.
          minLength: 1
          maxLength: 256
          example: oracle-environment
        hostname:
          type: string
          description: host address of the machine.
          minLength: 1
          maxLength: 256
          example: db.host.com
        staging_environment:
          type: string
          description: Id of the connector environment which is used to connect to
            this source environment.
          minLength: 1
          maxLength: 256
          example: 1-WINDOWS_HOST-1
        connector_port:
          type: integer
          format: int32
          description: Specify port on which Delphix connector will run.
          minimum: 1
          maximum: 65535
          example: 9100
        cluster_address:
          type: string
          description: Address of the cluster. This property can be modified for Windows
            cluster only.
          minLength: 1
          maxLength: 256
          example: db.host.com
        cluster_home:
          type: string
          description: Absolute path to cluster home drectory. This parameter is for
            UNIX cluster environments.
          minLength: 1
          maxLength: 256
          example: /u01/app/19.0.0.0/grid
        cluster_node_address:
          type: string
          description: Address/hostname of one of the host in this environment for
            which parameteres are being modified. This property is used in case of
            cluster environments only.
          minLength: 1
          maxLength: 256
          example: db1.host.com
        nfs_addresses:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 256
          description: array of ip addresses or hostnames
          example:
          - 192.168.10.2
        ssh_port:
          type: integer
          format: int64
          description: ssh port of the host.
          minimum: 1
          maximum: 65535
          example: 22
        toolkit_path:
          type: string
          description: The path for the toolkit that resides on the host.
          minLength: 1
          maxLength: 256
          example: /work
        ase_db_username:
          type: string
          description: username of the SAP ASE database.
          minLength: 1
          maxLength: 256
          example: user-123
        ase_db_password:
          type: string
          description: password of the SAP ASE database.
          minLength: 1
          maxLength: 256
          example: test
        ase_db_vault:
          type: string
          description: The name or reference of the vault from which to read the ASE
            database credentials.
          minLength: 1
          maxLength: 256
          example: my-vault
        ase_db_hashicorp_vault_engine:
          type: string
          description: Vault engine name where the credential is stored.
          minLength: 1
          maxLength: 256
          example: kv
        ase_db_hashicorp_vault_secret_path:
          type: string
          description: Path in the vault engine where the credential is stored.
          minLength: 1
          maxLength: 256
          example: oracle-env
        ase_db_hashicorp_vault_username_key:
          type: string
          description: Key for the username in the key-value store.
          minLength: 1
          maxLength: 256
          example: username
        ase_db_hashicorp_vault_secret_key:
          type: string
          description: Key for the password in the key-value store.
          minLength: 1
          maxLength: 256
          example: secret
        ase_db_cyberark_vault_query_string:
          type: string
          description: Query to find a credential in the CyberArk vault.
          minLength: 1
          maxLength: 256
          example: Safe=Test;Folder=Test;Object=Test
        ase_db_use_kerberos_authentication:
          type: boolean
          description: Whether to use kerberos authentication for ASE DB discovery.
          example: true
        java_home:
          type: string
          description: The path to the user managed Java Development Kit (JDK). If
            not specified, then the OpenJDK will be used.
          minLength: 1
          maxLength: 256
          example: /Library/Java/JavaVirtualMachines/jdk/Contents/Home
        dsp_keystore_path:
          type: string
          description: DSP keystore path.
          minLength: 1
          maxLength: 256
          example: /tmp/keystore.keystore
        dsp_keystore_password:
          type: string
          description: DSP keystore password.
          minLength: 1
          maxLength: 256
          example: temp123
        dsp_keystore_alias:
          type: string
          description: DSP keystore alias.
          minLength: 1
          maxLength: 256
          example: oracle-src
        dsp_truststore_path:
          type: string
          description: DSP truststore path.
          minLength: 1
          maxLength: 256
          example: /tmp/truststore.keystore
        dsp_truststore_password:
          type: string
          description: DSP truststore password.
          minLength: 1
          maxLength: 256
          example: truststore123
        description:
          type: string
          description: The environment description.
          minLength: 1
          maxLength: 1024
          example: Unix Orcale source host
    Host:
      description: A physical/virtual server.
      type: object
      properties:
        hostname:
          description: The hostname or IP address of this host.
          type: string
          example: linux.dev.delphix.com
        os_name:
          description: The name of the OS on this host.
          type: string
          example: Linux
        os_version:
          description: The version of the OS on this host.
          type: string
          example: Red Hat Enterprise Linux Server release 7.3 (Maipo)
        memory_size:
          description: The total amount of memory on this host in bytes.
          type: integer
          format: int64
          example: 8382160896
    VirtualDatasetHooks:
      description: VDB operation hooks.
      type: object
      properties:
        pre_refresh:
          type: array
          maxItems: 100
          description: The commands to execute on the target environment before refreshing
            the VDB.
          items:
            $ref: '#/components/schemas/Hook'
        post_refresh:
          type: array
          maxItems: 100
          description: The commands to execute on the target environment after refreshing
            the VDB.
          items:
            $ref: '#/components/schemas/Hook'
        pre_rollback:
          type: array
          maxItems: 100
          description: The commands to execute on the target environment before rewinding
            the VDB.
          items:
            $ref: '#/components/schemas/Hook'
        post_rollback:
          type: array
          maxItems: 100
          description: The commands to execute on the target environment after rewinding
            the VDB.
          items:
            $ref: '#/components/schemas/Hook'
        configure_clone:
          type: array
          maxItems: 100
          description: The commands to execute on the target environment when the
            VDB is created or refreshed.
          items:
            $ref: '#/components/schemas/Hook'
        pre_snapshot:
          type: array
          maxItems: 100
          description: The commands to execute on the target environment before snapshotting
            a virtual source. These commands can quiesce any data prior to snapshotting.
          items:
            $ref: '#/components/schemas/Hook'
        post_snapshot:
          type: array
          maxItems: 100
          description: The commands to execute on the target environment after snapshotting
            a virtual source.
          items:
            $ref: '#/components/schemas/Hook'
        pre_start:
          type: array
          maxItems: 100
          description: The commands to execute on the target environment before starting
            a virtual source.
          items:
            $ref: '#/components/schemas/Hook'
        post_start:
          type: array
          maxItems: 100
          description: The commands to execute on the target environment after starting
            a virtual source.
          items:
            $ref: '#/components/schemas/Hook'
        pre_stop:
          type: array
          maxItems: 100
          description: The commands to execute on the target environment before stopping
            a virtual source.
          items:
            $ref: '#/components/schemas/Hook'
        post_stop:
          type: array
          maxItems: 100
          description: The commands to execute on the target environment after stopping
            a virtual source.
          items:
            $ref: '#/components/schemas/Hook'
    BaseProvisionVDBParameters:
      allOf:
      - $ref: '#/components/schemas/VirtualDatasetHooks'
      - type: object
        properties:
          target_group_id:
            type: string
            description: The ID of the group into which the VDB will be provisioned.
              If unset, a group is selected randomly on the Engine.
            minLength: 1
            maxLength: 256
            example: group-123
          name:
            type: string
            description: The unique name of the provisioned VDB within a group. If
              unset, a name is randomly generated.
            minLength: 1
            maxLength: 256
            example: my-test-vdb
          database_name:
            type: string
            description: The name of the database on the target environment. Defaults
              to the value of the name property.
            minLength: 1
            maxLength: 256
            example: my-test-database
          cdb_id:
            type: string
            description: The ID of the container database (CDB) to provision an Oracle
              Multitenant database into. This corresponds to a Source API object.
              When this is not set, a new vCDB will be provisioned.
            minLength: 1
            maxLength: 256
            example: ORACLE_SINGLE_CONFIG-376
          cluster_node_ids:
            type: array
            items:
              type: string
              minLength: 1
              maxLength: 256
            minItems: 1
            description: The cluster node ids, name or addresses for this provision
              operation (Oracle RAC Only).
            example:
            - ORACLE_CLUSTER_NODE-1
          truncate_log_on_checkpoint:
            type: boolean
            description: Whether to truncate log on checkpoint (ASE only).
            example: true
          os_username:
            type: string
            description: The name of the privileged user to run the provision operation
              (Oracle Only).
            minLength: 1
            maxLength: 256
            example: os-user-x
          os_password:
            type: string
            description: The password of the privileged user to run the provision
              operation (Oracle Only).
            minLength: 1
            maxLength: 256
            example: os-user-secret-password
          environment_id:
            type: string
            description: The ID of the target environment where to provision the VDB.
              If repository_id unambigously identifies a repository, this is unnecessary
              and ignored. Otherwise, a compatible repository is randomly selected
              on the environment.
            minLength: 1
            maxLength: 256
            example: environment-123
          environment_user_id:
            type: string
            description: The environment user ID to use to connect to the target environment.
            minLength: 1
            maxLength: 256
            example: environment-user-123
          repository_id:
            type: string
            description: The ID of the target repository where to provision the VDB.
              A repository typically corresponds to a database installation (Oracle
              home, database instance, ...). Setting this attribute implicitly determines
              the environment where to provision the VDB.
            minLength: 1
            maxLength: 256
            example: oracle-home-123
          auto_select_repository:
            type: boolean
            description: Option to automatically select a compatible environment and
              repository. Mutually exclusive with repository_id.
            example: true
          vdb_restart:
            type: boolean
            description: Indicates whether the Engine should automatically restart
              this virtual source when target host reboot is detected.
            example: true
          template_id:
            type: string
            description: The ID of the target VDB Template (Oracle Only).
            minLength: 1
            maxLength: 256
            example: template-123
          auxiliary_template_id:
            type: string
            description: The ID of the configuration template to apply to the auxiliary
              container database. This is only relevant when provisioning a Multitenant
              pluggable database into an existing CDB, i.e when the cdb_id property
              is set.(Oracle Only)
            minLength: 1
            maxLength: 256
            example: aux-template-123
          file_mapping_rules:
            type: string
            description: Target VDB file mapping rules (Oracle Only). Rules must be
              line separated (\n or \r) and each line must have the format "pattern:replacement".
              Lines are applied in order.
            minLength: 1
            maxLength: 131072
            example: |-
              /datafile/dbdhcp3/oradata/dbdhcp3:/data
              /u03/app/ora11202/product/11.2.0/dbhome_1/dbs/dbv_R2V4.dbf:/data/dbv_R2V4.dbf
          oracle_instance_name:
            type: string
            description: Target VDB SID name (Oracle Only).
            pattern: ^[a-zA-Z0-9_]+$
            minLength: 1
            maxLength: 15
            example: dbdhcp2
          unique_name:
            type: string
            description: Target VDB db_unique_name (Oracle Only).
            pattern: ^[a-zA-Z0-9_\$#]+$
            minLength: 1
            maxLength: 30
            example: dbdhcp2
          vcdb_name:
            type: string
            description: When provisioning an Oracle Multitenant vCDB (when the cdb_id
              property is not set), the name of the provisioned vCDB (Oracle Multitenant
              Only).
            pattern: ^[a-zA-Z0-9_]+$
            minLength: 1
            maxLength: 256
            example: VCCD_6QQ
          vcdb_database_name:
            type: string
            description: When provisioning an Oracle Multitenant vCDB (when the cdb_id
              property is not set), the database name of the provisioned vCDB. Defaults
              to the value of the vcdb_name property. (Oracle Multitenant Only).
            minLength: 1
            maxLength: 8
            example: VCCD_6QQ
          mount_point:
            type: string
            description: Mount point for the VDB (Oracle, ASE Only).
            minLength: 1
            maxLength: 256
            example: /var/mnt
          open_reset_logs:
            type: boolean
            description: Whether to open the database after provision (Oracle Only).
            example: true
          snapshot_policy_id:
            type: string
            description: The ID of the snapshot policy for the VDB.
            minLength: 1
            maxLength: 256
            example: snapshot-123
          retention_policy_id:
            type: string
            description: The ID of the retention policy for the VDB.
            minLength: 1
            maxLength: 256
            example: retention-policy-123
          recovery_model:
            type: string
            description: Recovery model of the source database (MSSql Only).
            enum:
            - FULL
            - SIMPLE
            - BULK_LOGGED
            example: FULL
          pre_script:
            type: string
            description: PowerShell script or executable to run prior to provisioning
              (MSSql Only).
            minLength: 1
            maxLength: 1024
            example: C:\Program Files\Delphix\scripts\myscript.ps1
          post_script:
            type: string
            description: PowerShell script or executable to run after provisioning
              (MSSql Only).
            minLength: 1
            maxLength: 1024
            example: C:\Program Files\Delphix\scripts\myscript.ps1
          cdc_on_provision:
            type: boolean
            description: Option to enable change data capture (CDC) on both the provisioned
              VDB and subsequent snapshot-related operations (e.g. refresh, rewind)
              (MSSql Only).
            example: true
          online_log_size:
            description: Online log size in MB (Oracle Only).
            type: integer
            minimum: 4
            example: 4
          online_log_groups:
            description: Number of online log groups (Oracle Only).
            type: integer
            minimum: 2
            example: 2
          archive_log:
            description: Option to create a VDB in archivelog mode (Oracle Only).
            type: boolean
            example: true
          new_dbid:
            description: Option to generate a new DB ID for the created VDB (Oracle
              Only).
            type: boolean
            example: true
          listener_ids:
            description: The listener IDs for this provision operation (Oracle Only).
            type: array
            items:
              type: string
              minLength: 1
              maxLength: 256
            example:
            - listener-123
            - listener-456
          custom_env_vars:
            description: Environment variable to be set when the engine creates a
              VDB. See the Engine documentation for the list of allowed/denied environment
              variables and rules about substitution.
            type: object
            additionalProperties:
              type: string
              minLength: 1
              maxLength: 4096
            example:
              MY_ENV_VAR1: $ORACLE_HOME
              MY_ENV_VAR2: $CRS_HOME/after
          custom_env_files:
            description: Environment files to be sourced when the Engine creates a
              VDB. This path can be followed by parameters. Paths and parameters are
              separated by spaces.
            type: array
            items:
              type: string
              minLength: 1
              maxLength: 4096
            example:
            - /export/home/env_file_1
            - /export/home/env_file_2
          tags:
            type: array
            maxItems: 1000
            description: The tags to be created for VDB.
            items:
              $ref: '#/components/schemas/Tag'
            minItems: 1
    ProvisionVDBByTimestampParameters:
      allOf:
      - $ref: '#/components/schemas/BaseProvisionVDBParameters'
      - $ref: '#/components/schemas/DataPointByTimestampParameters'
      - type: object
        required:
        - source_data_id
        properties:
          engine_id:
            type: integer
            format: int64
            description: The ID of the Engine onto which to provision. If the source
              ID unambiguously identifies a source object, this parameter is unnecessary
              and ignored.
            minLength: 1
            maxLength: 256
            example: engine-123
          source_data_id:
            type: string
            description: The ID of the source object (dSource or VDB) to provision
              from. All other objects referenced by the parameters must live on the
              same engine as the source.
            minLength: 1
            maxLength: 256
            example: source-123
    ProvisionVDBBySnapshotParameters:
      allOf:
      - $ref: '#/components/schemas/BaseProvisionVDBParameters'
      - $ref: '#/components/schemas/DataPointBySnapshotParameters'
      - type: object
        properties:
          engine_id:
            type: integer
            format: int64
            description: The ID of the Engine onto which to provision. If the source
              ID unambiguously identifies a source object, this parameter is unnecessary
              and ignored.
            minLength: 1
            maxLength: 256
            example: engine-123
          source_data_id:
            type: string
            description: The ID of the source object (dSource or VDB) to provision
              from. All other objects referenced by the parameters must live on the
              same engine as the source. If this property is not set, the data_source
              of the snapshot_id will be used.
            minLength: 1
            maxLength: 256
            example: source-123
    ProvisionVDBFromBookmarkParameters:
      allOf:
      - $ref: '#/components/schemas/BaseProvisionVDBParameters'
      - $ref: '#/components/schemas/DataPointFromBookmarkParameters'
    ProvisionVDBGroupFromBookmarkParameters:
      required:
      - name
      - bookmark_id
      - provision_parameters
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 256
          description: Name of the created VDB group name.
        bookmark_id:
          type: string
          minLength: 1
          maxLength: 256
          description: ID of a bookmark to provision this VDB Group from.
        provision_parameters:
          type: object
          description: Provision parameters for each of the VDBs which will need to
            be provisioned. The key must be the vdb_id of the corresponding entry
            from the bookmark, and the value the provision parameters for the VDB
            which will be closed from the bookmark.
          additionalProperties:
            $ref: '#/components/schemas/BaseProvisionVDBParameters'
    DataPointByTimestampParameters:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: The point in time from which to execute the operation. Mutually
            exclusive with timestamp_in_database_timezone. If the timestamp is not
            set, selects the latest point.
          example: '2021-05-01T08:51:34.148000+00:00'
        timestamp_in_database_timezone:
          description: The point in time from which to execute the operation, expressed
            as a date-time in the timezone of the source database. Mutually exclusive
            with timestamp.
          type: string
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{0,3})?'
          example: '2021-08-14T14:55:20.507'
    DataPointBySnapshotParameters:
      type: object
      properties:
        snapshot_id:
          type: string
          description: The ID of the snapshot from which to execute the operation.
            If the snapshot_id is not, selects the latest snapshot.
          minLength: 1
          maxLength: 256
    DataPointFromBookmarkParameters:
      type: object
      required:
      - bookmark_id
      properties:
        bookmark_id:
          type: string
          description: The ID of the bookmark from which to execute the operation.
            The boomkark must contain only one VDB.
          minLength: 1
          maxLength: 256
    RollbackVDBByTimestampParameters:
      allOf:
      - $ref: '#/components/schemas/DataPointByTimestampParameters'
    RollbackVDBBySnapshotParameters:
      allOf:
      - $ref: '#/components/schemas/DataPointBySnapshotParameters'
    RollbackVDBFromBookmarkParameters:
      allOf:
      - $ref: '#/components/schemas/DataPointFromBookmarkParameters'
    RefreshVDBByTimestampParameters:
      allOf:
      - $ref: '#/components/schemas/DataPointByTimestampParameters'
      - type: object
        properties:
          dataset_id:
            type: string
            description: ID of the dataset to refresh to
            minLength: 1
            maxLength: 256
            example: 123-CONTAINER_1
    RefreshVDBBySnapshotParameters:
      allOf:
      - $ref: '#/components/schemas/DataPointBySnapshotParameters'
    RefreshVDBFromBookmarkParameters:
      allOf:
      - $ref: '#/components/schemas/DataPointFromBookmarkParameters'
    RefreshVDBGroupParameters:
      type: object
      description: Parameters to refresh a VDB Group.
      required:
      - bookmark_id
      properties:
        bookmark_id:
          type: string
          minLength: 1
          maxLength: 256
          description: ID of a bookmark to refresh this VDB Group to.
    RollbackVDBGroupParameters:
      type: object
      description: Parameters to rollback a VDB Group.
      required:
      - bookmark_id
      properties:
        bookmark_id:
          type: string
          minLength: 1
          maxLength: 256
          description: ID of a bookmark to rollback this VDB Group to.
    UpdateVDBGroupParameters:
      type: object
      description: Parameters to update a VDB group.
      properties:
        name:
          type: string
          description: The name of the VDB group.
          minLength: 1
          maxLength: 256
          example: my-vdb-group
        vdb_ids:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 256
          minItems: 1
          example:
          - vdb-1
          - vdb-2
    DSourceSnapshotParameters:
      type: object
      description: Parameters to snapshot a DSource.
      properties:
        drop_and_recreate_devices:
          type: boolean
          description: |
            If this parameter is set to true, older devices will be dropped and new
            devices created instead of trying to remap the devices. This might increase
            the space utilization on Delphix Engine. (ASE only)
        sync_strategy:
          type: string
          enum:
          - latest_backup
          - new_backup
          - specific_backup
          description: |
            Determines how the Delphix Engine will take a backup:
            * `latest_backup` - Use the most recent backup.
            * `new_backup` - Delphix will take a new backup of your source database.
            * `specific_backup` - Use a specific backup. Using this option requires setting
              `ase_backup_files` for ASE dSources or `mssql_backup_uuid` for MSSql dSources.
            Default is `new_backup`.
            (ASE, MSSql only)
        ase_backup_files:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 4096
          description: When using the `specific_backup` sync_strategy, determines
            the backup files. (ASE Only)
        mssql_backup_uuid:
          type: string
          minLength: 1
          maxLength: 4096
          description: When using the `specific_backup` sync_strategy, determines
            the Backup Set UUID. (MSSql only)
        compression_enabled:
          type: boolean
          description: When using the `new_backup` sync_strategy, determines if compression
            must be enabled. Defaults to the configuration of the ingestion strategy
            configured on the Delphix Engine for this dSource. (MSSql only)
        availability_group_backup_policy:
          type: string
          enum:
          - primary
          - secondary_only
          - prefer_secondary
          description: |
            When using the `new_backup` sync_strategy for an MSSql Availability Group, determines the backup policy:
            * `primary` - Backups only go to the primary node.
            * `secondary_only` - Backups only go to secondary nodes. If secondary nodes are down, backups will fail.
            * `prefer_secondary` - Backups go to secondary nodes, but if secondary nodes are down, backups will go to the primary node.
            (MSSql only)
        do_not_resume:
          type: boolean
          description: |
            Indicates whether a fresh SnapSync must be started regardless if it was possible to
            resume the current SnapSync. If true, we will not resume but instead ignore previous progress
            and backup all datafiles even if already completed from previous failed SnapSync. This does not
            force a full backup, if an incremental was in progress this will start a new incremental snapshot.
            (Oracle only)
        double_sync:
          type: boolean
          description: |
            Indicates whether two SnapSyncs should be performed in immediate succession to reduce the number
            of logs required to provision the snapshot. This may significantly reduce the time necessary to
            provision from a snapshot.
            (Oracle only).
        force_full_backup:
          type: boolean
          description: Whether or not to take another full backup of the source database.
            (Oracle only)
        skip_space_check:
          type: boolean
          description: |
            Skip check that tests if there is enough space available to store the database in
            the Delphix Engine. The Delphix Engine estimates how much space a database will occupy after
            compression and prevents SnapSync if insufficient space is available. This safeguard can be
            overridden using this option. This may be useful when linking highly compressible databases.
            (Oracle only)
        files_for_partial_full_backup:
          type: array
          minItems: 1
          maxItems: 10000
          items:
            type: integer
            format: int64
          description: |
            List of datafiles to take a full backup of. This would be useful in situations
            where certain datafiles could not be backed up during previous SnapSync due to corruption
            or because they went offline.
            (Oracle only)
    UpdateVDBParameters:
      type: object
      description: Parameters to update a VDB.
      properties:
        name:
          type: string
          description: The unique name of the VDB within a group.
          minLength: 1
          maxLength: 256
          example: my-vdb
        db_username:
          type: string
          description: The username of the database user (Oracle, ASE Only).
          minLength: 1
          maxLength: 256
          example: db-username
        db_password:
          type: string
          description: The password of the database user (Oracle, ASE Only).
          minLength: 1
          maxLength: 256
          example: db-password
        validate_db_credentials:
          type: boolean
          default: true
          description: Whether db_username and db_password must be validated, if present,
            againt the VDB. This must be set to false when credentials validation
            is not possible, for instance if the VDB is known to be disabled.
          example: true
        auto_restart:
          type: boolean
          description: Whether to enable VDB restart.
        environment_user_id:
          type: string
          description: The environment user ID to use to connect to the target environment.
          minLength: 1
          maxLength: 256
          example: environment-user-123
        template_id:
          type: string
          description: The ID of the target VDB Template (Oracle Only).
          minLength: 1
          maxLength: 256
          example: template-123
        listener_ids:
          description: The listener IDs for this provision operation (Oracle Only).
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 256
          example:
          - listener-123
          - listener-456
        new_dbid:
          type: boolean
          description: Whether to enable new DBID for Oracle
        cdc_on_provision:
          type: boolean
          description: Whether to enable CDC on provision for MSSql
        pre_script:
          type: string
          description: Pre script for MSSql.
          minLength: 1
          maxLength: 1024
        post_script:
          type: string
          description: Post script for MSSql.
          minLength: 1
          maxLength: 1024
        hooks:
          $ref: '#/components/schemas/VirtualDatasetHooks'
    EnableVDBParameters:
      type: object
      description: Parameters to enable a VDB.
      properties:
        attempt_start:
          type: boolean
          description: Whether to attempt a startup of the VDB after the enable.
          default: true
    DisableVDBParameters:
      type: object
      description: Parameters to disable a VDB.
      properties:
        attempt_cleanup:
          type: boolean
          description: Whether to attempt a cleanup of the VDB before the disable.
          default: true
    DeleteVDBParameters:
      type: object
      description: Parameters to delete a VDB.
      properties:
        force:
          type: boolean
          description: Whether to continue the operation upon failures.
          default: false
    Errors:
      description: Sadly, sometimes requests to the API are not successful. Failures
        can occur for a wide range of reasons. The Errors object contains information
        about full or partial failures which might have occurred during the request.
      type: array
      items:
        $ref: '#/components/schemas/Error'
    Error:
      type: object
      properties:
        message:
          type: string
          readOnly: true
          description: Message providing more detail about the error that occurred,
            if available.
        object_name:
          type: string
          readOnly: true
          description: Name of the object affected by the error.
    ApiClient:
      properties:
        id:
          description: The entity ID of this API client.
          type: integer
          format: int64
          readOnly: true
        api_client_id:
          description: The unique ID which is used to identity the identity of an
            API request. The web server (nginx) configuration must be configured so
            as to include the external ID as the value of the X_CLIENT_ID HTTP request
            header when requests are proxied. For OAuth2/JWT based authentication,
            this typically corresponds to a value extracted from the JWT, uniquely
            identifying the API client.
          type: string
          minLength: 1
          maxLength: 1024
        name:
          type: string
          minLength: 1
          maxLength: 1024
    ApiClientCreateParameter:
      properties:
        name:
          description: An optional logical name for the API client.
          type: string
          minLength: 1
          maxLength: 1024
        generate_api_key:
          description: Whether an API key must be generated for this API client. This
            must be set if the API client will be used for API key based authentication,
            and unset otherwise.
          type: boolean
          default: true
        api_client_id:
          description: The unique ID which is used to identity the identity of an
            API request. The web server (nginx) configuration must be configured so
            as to include the external ID as the value of the X_CLIENT_ID HTTP request
            header when requests are proxied. If this value isn't set, the application
            will automatically generate one. For OAuth2/JWT based authentication,
            this typically corresponds to a value extracted from the JWT, uniquely
            identifying the API client.
          type: string
          minLength: 1
          maxLength: 1024
    ApiClientCreateResponse:
      properties:
        token:
          description: |
            The opaque token to use to authenticate for other API calls. The token must be included in all HTTP API calls
            in a request header named "Authorization", and prefixed with "apk " to denote that it is a proprietary API key format.
            For instance, if the token is "abc123", request must contain the following HTTP request header:
            "Authorization: apk abc123".
          type: string
        api_client_entity_id:
          type: integer
          format: int64
    ListSnapshotsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Snapshot'
        response_metadata:
          $ref: '#/components/schemas/PaginatedResponseMetadata'
    Job:
      description: An asynchronous task.
      type: object
      properties:
        id:
          description: The Job entity ID.
          type: string
          example: job-123
        status:
          description: The status of the job.
          type: string
          enum:
          - PENDING
          - STARTED
          - TIMEDOUT
          - RUNNING
          - CANCELED
          - FAILED
          - SUSPENDED
          - WAITING
          - COMPLETED
          - ABANDONED
          example: RUNNING
        type:
          description: The type of job being done.
          type: string
          example: DB_REFRESH
        error_details:
          description: Details about the failure for FAILED jobs.
          type: string
          example: Unable to connect to the engine.
        target_id:
          description: A reference to the job's target.
          type: string
          example: vdb-123
        start_time:
          description: The time the job started executing.
          type: string
          format: date-time
          example: '2022-01-02T05:11:24.148000+00:00'
        update_time:
          description: The time the job was last updated.
          type: string
          format: date-time
          example: '2022-01-02T06:11:24.148000+00:00'
    Snapshot:
      description: Virtualization Engine Snapshot of a dSource or VDB.
      type: object
      properties:
        id:
          description: The Snapshot ID.
          type: string
          example: snapshot-123
        timestamp:
          description: The logical time of the data contained in this Snapshot.
          type: string
          format: date-time
          example: '2021-05-01T08:51:34.148000+00:00'
        location:
          description: Database specific identifier for the data contained in this
            Snapshot, such as the Log Sequence Number (LSN) for MSsql databases, System
            Change Number (SCN) for Oracle databases.
          type: string
          example: '1178883'
        dataset_id:
          type: string
          description: The ID of the Snapshot's dSource or VDB.
          example: dataset-123
    HashicorpVault:
      title: HashicorpVault
      type: object
      description: Configuration required to connect and authenticate with an Hashicorp
        Vault which stores engines username and passwords.
      properties:
        id:
          type: integer
          format: int64
          nullable: false
          readOnly: true
        env_variables:
          description: |
            Environment variables to set when invoking the Vault CLI tool. The environment variables will be used both
            to login to the vault (if this step is required) and to retrieve engine username and passwords.
          example:
            VAULT_ADDR: https://vault.company.co:8200
            VAULT_TOKEN: token-to-retrieve-secrets
          type: object
          additionalProperties:
            type: string
            minLength: 1
            maxLength: 4096
        login_command_args:
          description: |
            Arguments to the "vault" CLI tool to be used to fetch a client token (or "login").
            If supporting files, such as TLS certificates, must be used to authenticate, they can be
            mounted to the /etc/config directory.
            This property must not be set when using the TOKEN authentication method as login is not required.
          example:
          - login
          - -method=cert
          - -client-cert=/etc/config/cert.pem
          - -client-key=/etc/config/key.pem
          - write
          - auth/approle/login
          - role_id=123
          - secret_id=456
          type: array
          minItems: 1
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 4096
    RegisteredEngine:
      title: RegisteredEngine
      type: object
      description: A registered engine's connection and authentication settings.
      required:
      - name
      - hostname
      properties:
        id:
          description: The Engine object entity ID.
          type: integer
          format: int64
          readOnly: true
        uuid:
          description: The unique identifier generated by this engine.
          type: string
          nullable: true
        type:
          description: The type of this engine.
          type: string
          enum:
          - VIRTUALIZATION
          - MASKING
          - BOTH
          - UNSET
          nullable: true
        version:
          description: The engine version.
          type: string
          nullable: true
        name:
          description: The name of this engine.
          type: string
        hostname:
          description: The hostname of this engine.
          type: string
        cpu_core_count:
          description: The total number of CPU cores on this engine.
          type: integer
          format: int32
          nullable: true
        memory_size:
          description: The total amount of memory on this engine, in bytes.
          type: integer
          format: int64
          nullable: true
        data_storage_capacity:
          description: The total amount of storage allocated for engine objects and
            system metadata, in bytes.
          type: integer
          format: int64
          nullable: true
        data_storage_used:
          description: The amount of storage used by engine objects and system metadata,
            in bytes.
          type: integer
          format: int64
          nullable: true
        insecure_ssl:
          description: |
            Allow connections to the engine over HTTPs without validating the TLS certificate. Even though
            the connection to the engine might be performed over HTTPs, setting this property eliminates
            the protection against a man-in-the-middle attach for connections to this engine. Instead,
            consider creating a truststore with a Certificate Authority to validate the engine's certificate,
            and set the truststore_path propery.
          type: boolean
          default: false
        unsafe_ssl_hostname_check:
          description: |
            Ignore validation of the name associated to the TLS certificate when connecting to the engine over HTTPs.
            Setting this value must only be done if the TLS certificate of the engine does not match the hostname,
            and the TLS configuration of the engine cannot be fixed. Setting this property reduces the protection
            against a man-in-the-middle attack for connections to this engine.
            This is ignored if insecure_ssl is set.
          type: boolean
          default: false
        truststore_filename:
          description: |
            File name of a truststore which can be used to validate the TLS certificate of the engine. The truststore
            must be available at /etc/config/certs/<truststore_filename>
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
          pattern: ^[a-zA-Z0-9_\.]+$
        truststore_password:
          description: |
            Password to read the truststore.
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
        status:
          description: |
            the status of the engine
          type: string
          enum:
          - CREATED
          - DELETING
          nullable: true
          readOnly: true
        connection_status:
          description: The status of the connection to the engine.
          type: string
          enum:
          - ONLINE
          - OFFLINE
          nullable: true
          readOnly: true
        connection_status_details:
          description: If set, details about the status of the connection to the engine.
          type: string
          nullable: true
          readOnly: true
        username:
          type: string
          nullable: true
          minLength: 1
          maxLength: 256
        password:
          type: string
          nullable: true
          minLength: 1
          maxLength: 4096
        hashicorp_vault_username_command_args:
          description: Arguments to pass to the Vault CLI tool to retrieve the username
            for the engine.
          example:
          - - kv
            - get
            - -field=username
            - kv-v2/delphix-secrets/delphixUser
          type: array
          nullable: true
          minItems: 1
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 4096
        hashicorp_vault_password_command_args:
          description: Arguments to pass to the Vault CLI tool to retrieve the password
            for the engine.
          example:
          - - kv
            - get
            - -field=password
            - kv-v2/delphix-secrets/delphixUser
          type: array
          nullable: true
          minItems: 1
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 4096
        hashicorp_vault_id:
          description: Reference to the Hashicorp vault to use to retrieve engine
            credentials.
          type: integer
          format: int64
          nullable: true
        tags:
          description: The tags to be created for this engine.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      example:
        id: engine-123
        uuid: 54290b71-58cd-463d-bd62-7219d4c4d2d5
        type: VIRTUALIZATION
        version: 6.0.7.0
        name: My Favorite Engine
        hostname: eng09.dev.delphix.com
        cpu_core_count: 4
        memory_size: 16000000000
        data_storage_capacity: 100000000000
        data_storage_used: 85000000000
        tags:
        - key: key1
          value: value1
        - key: key2
          value: value2
        connection_status: OFFLINE
        connection_status_details: Unable to authenticate with engine
    SMTPConfigParams:
      title: SMTPConfigParameters
      type: object
      description: Parameters to read or update SMTP Config
      properties:
        enabled:
          description: True if outbound email is enabled.
          type: boolean
          example: false
        server:
          description: IP address or hostname of SMTP relay server.
          type: string
          nullable: true
          minLength: 1
          maxLength: 1000
          example: smtp.host.com
        port:
          description: Port number to use. A value of -1 indicates the default (25
            or 587 for TLS).
          type: integer
          minimum: 1
          maximum: 65535
          nullable: true
          example: 25
        authentication_enabled:
          description: True if username/password authentication should be used.
          type: boolean
          example: false
        tls_enabled:
          description: True if TLS (transport layer security) should be used.
          type: boolean
          example: false
        username:
          description: If authentication is enabled, username to use when authenticating
            to the server.
          type: string
          nullable: true
          minLength: 1
          maxLength: 256
          example: username
        password:
          description: If authentication is enabled, password to use when authenticating
            to the server.
          type: string
          nullable: true
          minLength: 1
          maxLength: 4096
          example: password
        from_address:
          description: From address to use when sending mail. If unspecified, 'noreply@delphix.com'
            is used.
          type: string
          nullable: true
          format: email
          minLength: 1
          maxLength: 256
          example: sender@example.com
        send_timeout:
          description: Maximum timeout to wait, in seconds, when sending mail.
          type: integer
          minimum: 0
          maximum: 300
          nullable: true
    SMTPConfigValidate:
      title: SMTPValidationParams
      type: object
      description: Parameters to validate SMTP Config
      required:
      - to_address
      properties:
        to_address:
          type: string
          minLength: 1
          maxLength: 256
    ProductInfo:
      title: ProductInfoResponse
      type: object
      description: Product Information Response
      properties:
        api_version:
          description: Current API version.
          type: string
          example: 1.0.0
        product_version:
          description: Current installed product version.
          type: string
          example: 1.0.0
        product_upgrade_history:
          description: Product upgrade history.
          type: array
          items:
            $ref: '#/components/schemas/ProductHistory'
        supported_api_versions:
          description: All the supported API versions.
          type: array
          items:
            type: string
    ProductHistory:
      properties:
        version:
          description: Product Version.
          type: string
          example: 1.0.0
        installed_on:
          description: This version installed on date.
          type: string
          format: date-time
          example: 2022-05-22T09:15:30Z
    EngineRegistrationParameter:
      title: EngineRegistrationParameter
      type: object
      description: Parameters to register and authenticate an engine.
      required:
      - name
      - hostname
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 256
        hostname:
          type: string
          minLength: 1
          maxLength: 256
        username:
          type: string
          nullable: true
          minLength: 1
          maxLength: 256
        password:
          type: string
          nullable: true
          minLength: 1
          maxLength: 4096
        hashicorp_vault_username_command_args:
          description: Arguments to pass to the Vault CLI tool to retrieve the username
            for the engine.
          example:
          - kv
          - get
          - -field=username
          - kv-v2/delphix-secrets/delphixUser
          type: array
          nullable: true
          minItems: 1
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 4096
        hashicorp_vault_password_command_args:
          description: Arguments to pass to the Vault CLI tool to retrieve the password
            for the engine.
          example:
          - kv
          - get
          - -field=password
          - kv-v2/delphix-secrets/delphixUser
          type: array
          nullable: true
          minItems: 1
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 4096
        hashicorp_vault_id:
          description: Reference to the Hashicorp vault to use to retrieve engine
            credentials.
          type: integer
          format: int64
          nullable: true
        insecure_ssl:
          description: |
            Allow connections to the engine over HTTPs without validating the TLS certificate. Even though
            the connection to the engine might be performed over HTTPs, setting this property eliminates
            the protection against a man-in-the-middle attach for connections to this engine. Instead,
            consider creating a truststore with a Certificate Authority to validate the engine's certificate,
            and set the truststore_path propery.
          type: boolean
          default: false
        unsafe_ssl_hostname_check:
          description: |
            Ignore validation of the name associated to the TLS certificate when connecting to the engine over HTTPs.
            Setting this value must only be done if the TLS certificate of the engine does not match the hostname,
            and the TLS configuration of the engine cannot be fixed. Setting this property reduces the protection
            against a man-in-the-middle attack for connections to this engine.
            This is ignored if insecure_ssl is set.
          type: boolean
          default: false
        truststore_filename:
          description: |
            File name of a truststore which can be used to validate the TLS certificate of the engine. The truststore
            must be available at /etc/config/certs/<truststore_filename>
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
          pattern: ^[a-zA-Z0-9_\.]+$
        truststore_password:
          description: |
            Password to read the truststore.
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
        tags:
          description: The tags to be created for this engine.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    ProvisionVDBResponse:
      properties:
        job:
          $ref: '#/components/schemas/Job'
          description: The initiated job.
        vdb_id:
          type: string
          description: The ID of the provisioned vdb.
    Hook:
      required:
      - command
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 256
        command:
          type: string
          minLength: 1
          maxLength: 131072
        shell:
          type: string
          enum:
          - bash
          - shell
          - expect
          - ps
          - psd
        element_id:
          type: string
          minLength: 1
          maxLength: 256
        has_credentials:
          type: boolean
    PaginatedResponseMetadata:
      type: object
      properties:
        prev_cursor:
          description: Pointer to the previous page of results. Use this value as
            a cursor query parameter in a subsequent request, along with limit, to
            navigate through the collection by virtual page.
          type: string
        next_cursor:
          description: Pointer to the next page of results. Use this value as a cursor
            query parameter in a subsequent request, along with limit, to navigate
            through the collection by virtual page.
          type: string
        total:
          description: The total number of results. This value may not be provided.
          type: integer
          format: int_64
    ConnectivityCheckParameters:
      title: ConnectivityCheckParameters
      type: object
      description: Parameters to check connectivity between engine and remote host.
      required:
      - engine_id
      - host
      - port
      properties:
        engine_id:
          description: The ID of the engine to check.
          type: string
          example: engine-123
        host:
          description: The hostname of the remote host machine to check.
          type: string
          example: test.host.com
        port:
          description: The port of the remote hsot machine to check.
          type: integer
          minimum: 0
          maximum: 65535
          nullable: true
          example: 22
    ConnectivityCheckResponse:
      title: ConnectivityResponse
      type: object
      description: The result of the connectivity check.
      required:
      - message
      properties:
        message:
          description: A message describing the result of the connectivity check.
          type: string
          example: Success!
    TagsRequest:
      type: object
      required:
      - tags
      properties:
        tags:
          description: Array of tags with key value pairs
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 1
          maxItems: 1000
          uniqueItems: true
    TagsResponse:
      type: object
      properties:
        tags:
          description: Array of tags with key value pairs
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    DeleteTag:
      type: object
      required:
      - key
      properties:
        key:
          description: Key of the tag
          type: string
          minLength: 1
          maxLength: 4000
          example: key-1
        value:
          description: Value of the tag
          type: string
          minLength: 1
          maxLength: 4000
          example: value-1
    Tag:
      type: object
      required:
      - key
      - value
      properties:
        key:
          description: Key of the tag
          type: string
          minLength: 1
          maxLength: 4000
          example: key-1
        value:
          description: Value of the tag
          type: string
          minLength: 1
          maxLength: 4000
          example: value-1
    Repository:
      properties:
        id:
          description: Entity id of the repository.
          type: string
        name:
          description: Name of the repository.
          type: string
        database_type:
          description: The database type of this repository.
          type: string
        allow_provisioning:
          description: Flag indicating whether the repository should be used for provisioning.
          type: boolean
        is_staging:
          description: Flag indicating whether this repository can be used by the
            Delphix Engine for internal processing.
          type: boolean
        oracle_base:
          description: The Oracle base where database binaries are located.
          type: string
        version:
          description: Version of the repository.
          type: string
        bits:
          description: 32 or 64 bits.
          type: integer
        install_group:
          description: Group name of the user that owns the install.
          type: string
        install_user:
          description: User name of the user that owns the install.
          type: string
        rac:
          description: Flag indicating whether the install supports Oracle RAC.
          type: boolean
        ports:
          description: The network ports for connecting to the database instance.
          type: array
          items:
            type: integer
            format: int64
        dump_history_file:
          description: Fully qualified name of the dump history file.
          type: string
        page_size:
          description: Database page size for the SAP ASE instance.
          type: integer
          format: int64
        owner:
          description: Account the database server instance is running as.
          type: string
        installation_path:
          description: Directory path where the installation is located.
          type: string
        fulltext_installed:
          description: This property determines if the full-text search and semantic
            search is installed or not.
          type: boolean
        internal_version:
          description: The internal version is tied to the data format of a database
            and is used to detect compatibility.
          type: integer
          format: int64
    EnvironmentUserParams:
      properties:
        username:
          type: string
          description: Username of the OS.
          minLength: 1
          maxLength: 256
          example: oracle
        password:
          type: string
          description: Password of the OS.
          minLength: 1
          maxLength: 256
          example: oracle
        vault:
          type: string
          description: The name or reference of the vault from which to read the host
            credentials.
          minLength: 1
          maxLength: 256
          example: my-vault
        vault_username:
          type: string
          description: Delphix display name for the vault user
          minLength: 1
          maxLength: 256
          example: my-vault-user
        hashicorp_vault_engine:
          type: string
          description: Vault engine name where the credential is stored.
          minLength: 1
          maxLength: 256
          example: kv
        hashicorp_vault_secret_path:
          type: string
          description: Path in the vault engine where the credential is stored.
          minLength: 1
          maxLength: 256
          example: oracle-env
        hashicorp_vault_username_key:
          type: string
          description: Key for the username in the key-value store.
          minLength: 1
          maxLength: 256
          example: username
        hashicorp_vault_secret_key:
          type: string
          description: Key for the password in the key-value store.
          minLength: 1
          maxLength: 256
          example: secret
        cyberark_vault_query_string:
          type: string
          description: Query to find a credential in the CyberArk vault.
          minLength: 1
          maxLength: 256
          example: Safe=Test;Folder=Test;Object=Test
        use_kerberos_authentication:
          type: boolean
          description: Whether to use kerberos authentication.
          example: true
        use_engine_public_key:
          type: boolean
          description: Whether to use public key authentication.
          example: true
    VirtualizationStorageSummaryData:
      required:
      - engine_id
      - engine_name
      - engine_hostname
      properties:
        engine_id:
          description: A reference to the engine.
          type: integer
          format: int64
          example: engine-123
        engine_name:
          description: The engine name.
          type: string
          minLength: 1
          example: My Favorite Engine
        engine_hostname:
          description: The engine hostname.
          type: string
          minLength: 1
          example: eng09.dev.delphix.com
        total_capacity:
          description: The total amount of storage allocated for engine objects and
            system metadata, in bytes.
          type: integer
          format: int64
          example: 100000000000
        free_storage:
          description: The amount of available storage, in bytes.
          type: integer
          format: int64
          example: 99000000000
        used_storage:
          description: The amount of storage used by engine objects and system metadata,
            in bytes.
          type: integer
          format: int64
          example: 85000000000
        used_percentage:
          description: The percentage of storage used.
          type: number
          example: 75.0
        dsource_count:
          description: The number of dSources on the engine.
          type: integer
          format: int64
          example: 50
        vdb_count:
          description: The number of VDBs on the engine.
          type: integer
          format: int64
          example: 200
        total_object_count:
          description: The total number of dSources and VDBs on the engine.
          type: integer
          format: int64
          example: 400
    VDBInventoryData:
      properties:
        engine_name:
          type: string
        name:
          type: string
        type:
          type: string
        version:
          type: string
        parent_name:
          type: string
        parent_id:
          type: string
        creation_date:
          type: string
          format: date-time
        parent_timeflow_location:
          type: string
        parent_timeflow_timestamp:
          type: string
          format: date-time
        parent_timeflow_timezone:
          type: string
        enabled:
          type: boolean
        status:
          type: string
    DSourceUsageData:
      properties:
        engine_name:
          description: The name of the engine the dSource belongs to.
          type: string
          example: My favorite engine
        name:
          description: The name of the dSource
          type: string
          example: prod01-main
        unvirtualized_space:
          description: The the disk space that would be required if not using Delphix
            virtualizion, in bytes.
          type: integer
          format: int64
          example: 109242677
        actual_space:
          description: The actual space used by this dSource, in bytes. This includes
            the disk space used by the current copy of the data as well as the snaphots
            and log files retained to enable provisioning from historical versions.
          type: integer
          format: int64
          example: 339292672
        dependant_vdbs:
          description: The number of VDBs that are dependant on this dSource. This
            includes all VDB descendants that have this dSource as an ancestor.
          type: integer
          example: 25
    SearchBody:
      description: Search body.
      type: object
      properties:
        filter_expression:
          type: string
          minLength: 5
          maxLength: 2000
          example: string_field CONTAINS "over" AND numberic_field GT 9000 OR string_field2
            EQ "Goku"
    ListEnvironmentUsers:
      type: object
      properties:
        users:
          description: List of users
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentUser'
    EnvironmentUser:
      type: object
      properties:
        user_ref:
          description: Environment user reference
          type: string
          minLength: 1
          maxLength: 4000
          example: user-ref-1
        username:
          description: Username of environment user
          type: string
          minLength: 1
          maxLength: 4000
          example: username-1
        primary_user:
          description: This indicates if this user is primary or not
          type: boolean
          example: false
        auth_type:
          description: Authentication type of this user. PasswordCredential indicates
            username and password are used, SystemKeyCredential indicates public key
            based security credential, KeyPairCredential indicates public key based
            security credential consisting of a user specified key pair, KerberosCredential
            indicates Kerberos authentication, CyberArkVaultCredential indicates CyberArk
            Vault is used and HashiCorpVaultCredential indicates that Hashicorp vault
            is used for authentication
          type: string
          enum:
          - PasswordCredential
          - SystemKeyCredential
          - KeyPairCredential
          - KerberosCredential
          - CyberArkVaultCredential
          - HashiCorpVaultCredential
    ReportingSchedule:
      required:
      - report_type
      - cron_expression
      - messages
      - file_format
      - enabled
      - recipients
      properties:
        report_id:
          type: integer
          readOnly: true
          example: 123
        report_type:
          type: string
          enum:
          - VIRTUALIZATION_STORAGE_SUMMARY
          - VDB_INVENTORY_DATA
          - DSOURCE_USAGE_DATA
          example: VIRTUALIZATION_STORAGE_SUMMARY
        cron_expression:
          type: string
          example: 0 0 2 ? * Mon-Fri
          description: Standard cron expressions are supported e.g. 0 15 10 L * ?  -
            Schedule at 10:15 AM on the last day of every month, 0 0 2 ? * Mon-Fri
            - Schedule at 2:00 AM every Monday, Tuesday, Wednesday, Thursday and Friday.
            For more details kindly refer- "http://www.quartz-scheduler.org/documentation/"
        time_zone:
          type: string
          example: America/Los_Angeles
          description: Timezones are specified according to the Olson tzinfo database
            - "https://en.wikipedia.org/wiki/List_of_tz_database_time_zones".
        message:
          type: string
          example: sample message
        file_format:
          type: string
          enum:
          - CSV
          example: CSV
        enabled:
          type: boolean
          default: true
          example: true
        recipients:
          type: array
          minItems: 1
          uniqueItems: true
          items:
            type: string
            format: email
            example: user@example.com
        row_count:
          type: integer
          minimum: 1
          example: 1
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  requestBodies:
    ProvisionVDBGroupFromBookmark:
      description: The parameters to provision a VDB group from a Bookmark.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProvisionVDBGroupFromBookmarkParameters'
    ProvisionBySnapshot:
      description: The parameters to provision a VDB.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProvisionVDBBySnapshotParameters'
          examples:
            oracleminimum:
              description: |
                The above request example is intended for Oracle Database without including optional properties
              summary: Oracle - Without Optionals
              value:
                auto_select_repository: true
                source_data_id: dsource-name
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
            oracle_single_tenant:
              description: |
                The above request example is intended for Oracle Single Tenant Database with all possible properties that can be set in request body.
              summary: Oracle - Single Tenant Request
              value:
                source_data_id: dsource-name
                engine_id: 1
                target_group_id: group-Name
                name: vdb_to_be_created
                database_name: dbname_to_be_created
                os_username: os-user-x
                os_password: os-password-x
                environment_id: oracle-env-name
                environment_user_id: environment_user_name
                auto_select_repository: true
                cluster_node_ids:
                - ORACLE_CLUSTER_NODE-1
                pre_refresh:
                - name: pre_refresh_command
                  command: echo "testing pre-refresh"
                  shell: bash
                post_refresh:
                - name: post_refresh_command
                  command: echo "testing post_refresh"
                  shell: bash
                pre_rollback:
                - name: pre_rollback_command
                  command: echo "testing pre_rollback"
                  shell: bash
                post_rollback:
                - name: post_rollback_command
                  command: echo "testing post_rollback"
                  shell: bash
                configure_clone:
                - name: configure_clone_command
                  command: echo "testing configure_clone"
                  shell: bash
                pre_snapshot:
                - name: pre_snapshot_command
                  command: echo "testing pre_snapshot"
                  shell: bash
                post_snapshot:
                - name: post_snapshot_command
                  command: echo "testing post_snapshot"
                  shell: bash
                pre_start:
                - name: pre_start_command
                  command: echo "testing pre_start"
                  shell: bash
                post_start:
                - name: post_start_command
                  command: echo "testing post_start"
                  shell: bash
                pre_stop:
                - name: pre_stop_command
                  command: echo "testing pre_stop"
                  shell: bash
                post_stop:
                - name: post_stop_command
                  command: echo "testing post_stop"
                  shell: bash
                vdb_restart: true
                template_id: template-1
                auxiliary_template_id: aux-template-1
                file_mapping_rules: |-
                  /datafile/dbdhcp3/oradata/dbdhcp3:/data
                  /u03/app/ora11202/product/11.2.0/dbhome_1/dbs/dbv_R2V4.dbf:/data/dbv_R2V4.dbf
                oracle_instance_name: dbdhcp2
                unique_name: dbdhcp2
                mount_point: /var/mnt
                open_reset_logs: true
                snapshot_policy_id: test_snapshot_policy
                retention_policy_id: test_retention_policy
                online_log_size: 4
                online_log_groups: 2
                archive_log: true
                new_dbid: true
                custom_env_vars:
                  MY_ENV_VAR1: $ORACLE_HOME
                  MY_ENV_VAR2: $CRS_HOME/after
                custom_env_files:
                - /export/home/env_file_1
                snapshot_id: 1-oracle-snapshot-id
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
            oracle_multitenant_db_with_existing_cdb:
              description: |
                The above request example is intended for Oracle Multitenant Database with existing CDB.
              summary: Oracle - Multitenant with existing CDB
              value:
                source_data_id: dsource-name
                engine_id: 1
                target_group_id: group-Name
                name: vdb_to_be_created
                database_name: dbname_to_be_created
                cdb_id: ORACLE_SINGLE_CONFIG-376
                cluster_node_ids:
                - ORACLE_CLUSTER_NODE-1
                os_username: os-user-x
                os_password: os-password-x
                environment_user_id: environment_user_name
                pre_refresh:
                - name: pre_refresh_command
                  command: echo "testing pre-refresh"
                  shell: bash
                post_refresh:
                - name: post_refresh_command
                  command: echo "testing post_refresh"
                  shell: bash
                pre_rollback:
                - name: pre_rollback_command
                  command: echo "testing pre_rollback"
                  shell: bash
                post_rollback:
                - name: post_rollback_command
                  command: echo "testing post_rollback"
                  shell: bash
                configure_clone:
                - name: configure_clone_command
                  command: echo "testing configure_clone"
                  shell: bash
                pre_snapshot:
                - name: pre_snapshot_command
                  command: echo "testing pre_snapshot"
                  shell: bash
                post_snapshot:
                - name: post_snapshot_command
                  command: echo "testing post_snapshot"
                  shell: bash
                pre_start:
                - name: pre_start_command
                  command: echo "testing pre_start"
                  shell: bash
                post_start:
                - name: post_start_command
                  command: echo "testing post_start"
                  shell: bash
                pre_stop:
                - name: pre_stop_command
                  command: echo "testing pre_stop"
                  shell: bash
                post_stop:
                - name: post_stop_command
                  command: echo "testing post_stop"
                  shell: bash
                vdb_restart: true
                file_mapping_rules: |-
                  /datafile/dbdhcp3/oradata/dbdhcp3:/data
                  /u03/app/ora11202/product/11.2.0/dbhome_1/dbs/dbv_R2V4.dbf:/data/dbv_R2V4.dbf
                mount_point: /var/mnt
                open_reset_logs: true
                snapshot_policy_id: test_snapshot_policy
                retention_policy_id: test_retention_policy
                online_log_size: 4
                online_log_groups: 2
                archive_log: true
                new_dbid: true
                custom_env_vars:
                  MY_ENV_VAR1: $ORACLE_HOME
                  MY_ENV_VAR2: $CRS_HOME/after
                custom_env_files:
                - /export/home/env_file_1
                snapshot_id: 1-oracle-snapshot-id
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
            oracle_multitenant_db_with_new_vcdb:
              description: |
                The above request example is intended for Oracle Multitenant Database with new vCDB.
              summary: Oracle - Multitenant with new vCDB
              value:
                source_data_id: dsource-name
                engine_id: 1
                target_group_id: group-Name
                name: vdb_to_be_created
                database_name: dbname_to_be_created
                os_username: os-user-x
                os_password: os-password-x
                environment_id: oracle-env-name
                environment_user_id: environment_user_name
                auto_select_repository: true
                cluster_node_ids:
                - ORACLE_CLUSTER_NODE-1
                pre_refresh:
                - name: pre_refresh_command
                  command: echo "testing pre-refresh"
                  shell: bash
                post_refresh:
                - name: post_refresh_command
                  command: echo "testing post_refresh"
                  shell: bash
                pre_rollback:
                - name: pre_rollback_command
                  command: echo "testing pre_rollback"
                  shell: bash
                post_rollback:
                - name: post_rollback_command
                  command: echo "testing post_rollback"
                  shell: bash
                configure_clone:
                - name: configure_clone_command
                  command: echo "testing configure_clone"
                  shell: bash
                pre_snapshot:
                - name: pre_snapshot_command
                  command: echo "testing pre_snapshot"
                  shell: bash
                post_snapshot:
                - name: post_snapshot_command
                  command: echo "testing post_snapshot"
                  shell: bash
                pre_start:
                - name: pre_start_command
                  command: echo "testing pre_start"
                  shell: bash
                post_start:
                - name: post_start_command
                  command: echo "testing post_start"
                  shell: bash
                pre_stop:
                - name: pre_stop_command
                  command: echo "testing pre_stop"
                  shell: bash
                post_stop:
                - name: post_stop_command
                  command: echo "testing post_stop"
                  shell: bash
                vdb_restart: true
                template_id: template-123
                vcdb_name: VCCD_6QQ
                vcdb_database_name: VCCD_6QQ
                file_mapping_rules: |-
                  /datafile/dbdhcp3/oradata/dbdhcp3:/data
                  /u03/app/ora11202/product/11.2.0/dbhome_1/dbs/dbv_R2V4.dbf:/data/dbv_R2V4.dbf
                oracle_instance_name: dbdhcp2
                unique_name: dbdhcp2
                mount_point: /var/mnt
                open_reset_logs: true
                snapshot_policy_id: test_snapshot_policy
                retention_policy_id: test_retention_policy
                online_log_size: 4
                online_log_groups: 2
                archive_log: true
                new_dbid: true
                custom_env_vars:
                  MY_ENV_VAR1: $ORACLE_HOME
                  MY_ENV_VAR2: $CRS_HOME/after
                custom_env_files:
                - /export/home/env_file_1
                snapshot_id: 1-oracle-snapshot-id
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
            mssql:
              description: |
                The above request example is intended for MS-SQL Database
              summary: MS-SQL Database
              value:
                source_data_id: dsource-name
                engine_id: 1
                target_group_id: group-Name
                name: vdb_to_be_created
                database_name: dbname_to_be_created
                environment_id: mssql-env-name
                environment_user_id: environment-user-123
                auto_select_repository: true
                pre_refresh:
                - name: pre_refresh_command
                  command: echo "testing pre-refresh"
                  shell: ps
                post_refresh:
                - name: post_refresh_command
                  command: echo "testing post_refresh"
                  shell: ps
                pre_rollback:
                - name: pre_rollback_command
                  command: echo "testing pre_rollback"
                  shell: ps
                post_rollback:
                - name: post_rollback_command
                  command: echo "testing post_rollback"
                  shell: ps
                configure_clone:
                - name: configure_clone_command
                  command: echo "testing configure_clone"
                  shell: ps
                pre_snapshot:
                - name: pre_snapshot_command
                  command: echo "testing pre_snapshot"
                  shell: ps
                post_snapshot:
                - name: post_snapshot_command
                  command: echo "testing post_snapshot"
                  shell: ps
                pre_start:
                - name: pre_start_command
                  command: echo "testing pre_start"
                  shell: ps
                post_start:
                - name: post_start_command
                  command: echo "testing post_start"
                  shell: ps
                pre_stop:
                - name: pre_stop_command
                  command: echo "testing pre_stop"
                  shell: ps
                post_stop:
                - name: post_stop_command
                  command: echo "testing post_stop"
                  shell: ps
                vdb_restart: true
                snapshot_policy_id: test_snapshot_policy
                retention_policy_id: test_retention_policy
                recovery_model: FULL
                pre_script: C:\Program Files\Delphix\scripts\myscript.ps1
                post_script: C:\Program Files\Delphix\scripts\myscript.ps1
                cdc_on_provision: true
                snapshot_id: 1-mssql-snapshot-id-1
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
            ase:
              description: |
                The above request example is intended for Sybase Database
              summary: ASE Database
              value:
                source_data_id: dsource-name
                engine_id: 1
                target_group_id: group-Name
                name: vdb_to_be_created
                database_name: dbname_to_be_created
                truncate_log_on_checkpoint: true
                environment_id: ase_env_name
                environment_user_id: environment_user_name
                auto_select_repository: true
                pre_refresh:
                - name: pre_refresh_command
                  command: echo "testing pre-refresh"
                  shell: bash
                post_refresh:
                - name: post_refresh_command
                  command: echo "testing post_refresh"
                  shell: bash
                pre_rollback:
                - name: pre_rollback_command
                  command: echo "testing pre_rollback"
                  shell: bash
                post_rollback:
                - name: post_rollback_command
                  command: echo "testing post_rollback"
                  shell: bash
                configure_clone:
                - name: configure_clone_command
                  command: echo "testing configure_clone"
                  shell: bash
                pre_snapshot:
                - name: pre_snapshot_command
                  command: echo "testing pre_snapshot"
                  shell: bash
                post_snapshot:
                - name: post_snapshot_command
                  command: echo "testing post_snapshot"
                  shell: bash
                pre_start:
                - name: pre_start_command
                  command: echo "testing pre_start"
                  shell: bash
                post_start:
                - name: post_start_command
                  command: echo "testing post_start"
                  shell: bash
                pre_stop:
                - name: pre_stop_command
                  command: echo "testing pre_stop"
                  shell: bash
                post_stop:
                - name: post_stop_command
                  command: echo "testing post_stop"
                  shell: bash
                vdb_restart: true
                mount_point: /var/mnt
                snapshot_policy_id: test_snapshot_policy
                retention_policy_id: test_retention_policy
                snapshot_id: snapshot-id
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
      required: true
    DeleteTags:
      description: The parameters to delete tags
      content:
        application/json:
          schema:
            x-body-name: environment
            $ref: '#/components/schemas/DeleteTag'
          examples:
            delete_all_tags:
              description: Delete all tags for given object - No request body required
              summary: Delete all tags
              value: {
                }
            delete_tags_by_key:
              description: Delete all tags for given object with matching key
              summary: Delete tags by key
              value:
                key: key-1
            delete_tags_by_key_value:
              description: Delete tag for given object with matching key and value
              summary: Delete tags by key & value
              value:
                key: key-1
                value: value-1
    CreateEnvironmentUserBody:
      description: The parameters to create an environment user.
      content:
        application/json:
          schema:
            x-body-name: environment
            $ref: '#/components/schemas/EnvironmentUserParams'
          examples:
            using_username_password:
              description: This example can be used for creating a user with username
                and password.
              summary: Using Username and Password
              value:
                username: username-1
                password: password-1
            using_hashicorp_vault:
              description: This example can be used for creating a user with HashiCorp
                vault.
              summary: Using HashiCorp Vault
              value:
                vault: my-vault
                vault_username: my-vault-user
                hashicorp_vault_engine: kv
                hashicorp_vault_secret_path: oracle-env
                hashicorp_vault_username_key: username
                hashicorp_vault_secret_key: password
            using_cyberark:
              description: This example can be used for creating a user with CyberArk
                vault.
              summary: Using CyberArk Vault
              value:
                vault: my-vault
                vault_username: my-vault-user
                cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
            using_kerberos:
              description: This example can be used for creating a user with Kerberos
                Authentication.
              summary: Using Kerberos Authentication
              value:
                use_kerberos_authentication: true
            using_public_ssh:
              description: Allow the Delphix Engine to sign on to this host as this
                user, without specifying a password. Copy the key from engine interface
                and add it on a new line in the "~/.ssh/authorized_keys" file in the
                user's home directory on that host.
              summary: Using Username and Public Key
              value:
                use_engine_public_key: true
                username: username
    CreateEnvironments:
      description: The parameters to create an environment.
      content:
        application/json:
          schema:
            x-body-name: environment
            $ref: '#/components/schemas/EnvironmentCreateParameters'
          examples:
            unix_standalone:
              description: |
                The request example is intended for creating Unix standalone environments.
              summary: Unix - Standalone Environments
              value:
                name: oracle-environment
                engine_id: 1
                os_name: UNIX
                hostname: db.host.com
                ssh_port: 22
                toolkit_path: /work
                username: username
                password: password
                vault: my-vault
                hashicorp_vault_engine: kv
                hashicorp_vault_secret_path: oracle-env
                hashicorp_vault_username_key: username
                hashicorp_vault_secret_key: password
                cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                use_kerberos_authentication: true
                use_engine_public_key: true
                nfs_addresses:
                - 192.168.10.2
                ase_db_username: user-123
                ase_db_password: test
                ase_db_vault: my-vault
                ase_db_hashicorp_vault_engine: kv
                ase_db_hashicorp_vault_secret_path: ase-env
                ase_db_hashicorp_vault_username_key: username
                ase_db_hashicorp_vault_secret_key: password
                ase_db_cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                ase_db_use_kerberos_authentication: true
                java_home: /Library/Java/JavaVirtualMachines/jdk/Contents/Home
                dsp_keystore_path: /tmp/keystore.keystore
                dsp_keystore_password: temp123
                dsp_keystore_alias: oracle-env
                dsp_truststore_path: /tmp/truststore.keystore
                dsp_truststore_password: truststore123
                description: Unix Oracle source host
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
            windows_standalone_target:
              description: |
                The request example is intended for creating Windows standalone target environments.
              summary: Windows - Standalone Target Environments
              value:
                name: win-target
                engine_id: 1
                os_name: WINDOWS
                hostname: db.host.com
                connector_port: 9100
                username: username
                password: password
                vault: my-vault
                hashicorp_vault_engine: kv
                hashicorp_vault_secret_path: oracle-env
                hashicorp_vault_username_key: username
                hashicorp_vault_secret_key: password
                cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                java_home: /Library/Java/JavaVirtualMachines/jdk/Contents/Home
                dsp_keystore_path: /tmp/keystore.keystore
                dsp_keystore_password: temp123
                dsp_keystore_alias: target-env
                dsp_truststore_path: /tmp/truststore.keystore
                dsp_truststore_password: truststore123
                description: Windows MSSql target host
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
            windows_standalone_source:
              description: |
                The request example is intended for creating Windows standalone source environments.
              summary: Windows - Standalone Source Environments
              value:
                name: win-source
                engine_id: 1
                os_name: WINDOWS
                hostname: db.host.com
                staging_environment: 1-WINDOWS_HOST-1
                username: username
                password: password
                vault: my-vault
                hashicorp_vault_engine: kv
                hashicorp_vault_secret_path: oracle-env
                hashicorp_vault_username_key: username
                hashicorp_vault_secret_key: password
                cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                description: Windows MSSql source host
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
            unix_cluster:
              description: |
                The request example is intended for creating Unix cluster environments.
              summary: Unix - Cluster Environments
              value:
                name: oracle-rac
                engine_id: 1
                os_name: UNIX
                is_cluster: true
                cluster_home: /u01/app/19.0.0.0/grid
                hostname: db.host.com
                ssh_port: 22
                toolkit_path: /work
                username: username
                password: password
                vault: my-vault
                hashicorp_vault_engine: kv
                hashicorp_vault_secret_path: oracle-env
                hashicorp_vault_username_key: username
                hashicorp_vault_secret_key: password
                cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                use_kerberos_authentication: true
                use_engine_public_key: true
                nfs_addresses:
                - 192.168.10.2
                java_home: /Library/Java/JavaVirtualMachines/jdk/Contents/Home
                dsp_keystore_path: /tmp/keystore.keystore
                dsp_keystore_password: temp123
                dsp_keystore_alias: oracle-rac
                dsp_truststore_path: /tmp/truststore.keystore
                dsp_truststore_password: truststore123
                description: Unix Oracle cluster host
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
            windows_cluster_source:
              description: |
                The request example is intended for creating Windows source cluster environments.
              summary: Windows - Source Cluster Environments
              value:
                name: win-cluster
                engine_id: 1
                os_name: WINDOWS
                is_cluster: true
                hostname: db.host.com
                staging_environment: 1-WINDOWS_HOST-1
                username: username
                password: password
                vault: my-vault
                hashicorp_vault_engine: kv
                hashicorp_vault_secret_path: oracle-env
                hashicorp_vault_username_key: username
                hashicorp_vault_secret_key: password
                cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                is_target: false
                description: Windows MSSql source cluster environment
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
            windows_cluster_target:
              description: |
                The request example is intended for creating Windows target cluster environments.
              summary: Windows - Target Cluster Environments
              value:
                name: win-cluster
                engine_id: 1
                os_name: WINDOWS
                is_cluster: true
                hostname: db.host.com
                staging_environment: 1-WINDOWS_HOST-1
                username: username
                password: password
                vault: my-vault
                hashicorp_vault_engine: kv
                hashicorp_vault_secret_path: oracle-env
                hashicorp_vault_username_key: username
                hashicorp_vault_secret_key: password
                cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                is_target: true
                description: Windows MSSql target cluster environment
                tags:
                - key: key-1
                  value: value-1
                - key: key-2
                  value: value-2
      required: true
    SearchBody:
      x-skip-codegen-next-attr: true
      description: |
        A request body containing a filter expression. This enables searching
        for items matching arbitrarily complex conditions. The list of
        attributes which can be used in filter expressions is available
        in the x-filterable vendor extension.

        # Filter Expression Overview
        **Note: All keywords are case-insensitive**

        ## Comparison Operators
        | Operator | Description | Example |
        | --- | --- | --- |
        | CONTAINS | Substring or membership testing for string and list attributes respectively. | field3 CONTAINS 'foobar', field4 CONTAINS TRUE  |
        | IN | Tests if field is a member of a list literal. List can contain a maximum of 100 values | field2 IN ['Goku', 'Vegeta'] |
        | GE | Tests if a field is greater than or equal to a literal value | field1 GE 1.2e-2 |
        | GT | Tests if a field is greater than a literal value | field1 GT 1.2e-2 |
        | LE | Tests if a field is less than or equal to a literal value | field1 LE 9000 |
        | LT | Tests if a field is less than a literal value | field1 LT 9.02 |
        | NE | Tests if a field is not equal to a literal value | field1 NE 42 |
        | EQ | Tests if a field is equal to a literal value | field1 EQ 42 |

        ## Search Operator
        The SEARCH operator filters for items which have any filterable
        attribute that contains the input string as a substring, comparison
        is done case-insensitively. This is not restricted to attributes with
        string values. Specifically `SEARCH '12'` would match an item with an
        attribute with an integer value of `123`.

        ## Logical Operators
        Ordered by precedence.
        | Operator | Description | Example |
        | --- | --- | --- |
        | NOT | Logical NOT (Right associative) | NOT field1 LE 9000 |
        | AND | Logical AND (Left Associative) | field1 GT 9000 AND field2 EQ 'Goku' |
        | OR | Logical OR (Left Associative) | field1 GT 9000 OR field2 EQ 'Goku' |

        ## Grouping
        Parenthesis `()` can be used to override operator precedence.

        For example:
        NOT (field1 LT 1234 AND field2 CONTAINS 'foo')

        ## Literal Values
        | Literal      | Description | Examples |
        | --- | --- | --- |
        | Nil | Represents the absence of a value | nil, Nil, nIl, NIL |
        | Boolean | true/false boolean | true, false, True, False, TRUE, FALSE |
        | Number | Signed integer and floating point numbers. Also supports scientific notation. | 0, 1, -1, 1.2, 0.35, 1.2e-2, -1.2e+2 |
        | String | Single or double quoted | "foo", "bar", "foo bar", 'foo', 'bar', 'foo bar' |
        | Datetime | Formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) | 2018-04-27T18:39:26.397237+00:00 |
        | List | Comma-separated literals wrapped in square brackets | [0], [0, 1], ['foo', "bar"] |

        ## Limitations
        - A maximum of 8 unique identifiers may be used inside a filter expression.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchBody'
          examples:
            nested:
              description: |
                An example of a nested Object comparison testing that at least one repository has a
                version which is equal to 19.0.0.
              summary: Nested Object Comparison
              value:
                filter_expression: repositories CONTAINS {version eq '19.0.0'}
            relative:
              description: |
                An example of a relative comparison testing that field1 has a
                value which is less than 123.
              summary: Relative comparison
              value:
                filter_expression: field1 LE 123
            nil:
              description: |
                An example of using nil to test for the absence of a value for field2.
              summary: Absence of an attribute value
              value:
                filter_expression: field2 EQ NIL
            non-nil:
              description: |
                An example of using nil to test for the existence of a value for field2.
              summary: Existence of an attribute value
              value:
                filter_expression: field2 NE NIL
            contains:
              description: |
                An example of using the 'CONTAINS' operator to check if
                field2 contains the string 'foo'. If field2 is string valued
                then this is checking if 'foo' is a substring of field2. If
                field2 is a list of strings then this is checking if 'foo'
                is a member of the list.
              summary: Use of the CONTAINS operator
              value:
                filter_expression: field2 CONTAINS 'foo'
            in:
              description: |
                An example of using the 'IN' operator to check if field1
                is an element of a list literal.
              summary: Use of the IN operator
              value:
                filter_expression: field1 IN [1, 2, 3]
            search:
              description: |
                An example of using the 'SEARCH' operator to retrieve all elements
                for which 'foo' is a substring of a filterable attribute.
              summary: Use of the SEARCH operator
              value:
                filter_expression: SEARCH 'foo'
            parenthesis:
              description: |
                An example of parenthesis being used to group operators & override
                operator precedence.
              summary: Overriding operator precedence
              value:
                filter_expression: field1 LT 1234 AND (field2 CONTAINS 'foo' OR field3
                  CONTAINS 'bar')
    UpdateEnvironment:
      description: the parameters to update an environment
      content:
        application/json:
          schema:
            x-body-name: environment
            $ref: '#/components/schemas/EnvironmentUpdateParameters'
          examples:
            unix_standalone:
              description: |
                The request example is intended for creating Unix standalone environments.
              summary: Unix - Standalone Environments
              value:
                name: oracle-environment
                hostname: db.host.com
                ssh_port: 22
                toolkit_path: /work
                nfs_addresses:
                - 192.168.10.2
                ase_db_username: user-123
                ase_db_password: test
                ase_db_vault: my-vault
                ase_db_hashicorp_vault_engine: kv
                ase_db_hashicorp_vault_secret_path: ase-env
                ase_db_hashicorp_vault_username_key: username
                ase_db_hashicorp_vault_secret_key: password
                ase_db_cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                ase_db_use_kerberos_authentication: true
                java_home: /Library/Java/JavaVirtualMachines/jdk/Contents/Home
                dsp_keystore_path: /tmp/keystore.keystore
                dsp_keystore_password: temp123
                dsp_keystore_alias: oracle-env
                dsp_truststore_path: /tmp/truststore.keystore
                dsp_truststore_password: truststore123
                description: Unix Oracle source host
            windows_standalone_target:
              description: |
                The request example is intended for creating Windows standalone target environments.
              summary: Windows - Standalone Target Environments
              value:
                name: win-target
                hostname: db.host.com
                connector_port: 9100
                java_home: c:\Program Files\Java
                dsp_keystore_path: c:\temp\keystore.keystore
                dsp_keystore_password: temp123
                dsp_keystore_alias: target-env
                dsp_truststore_path: c:\temp\truststore.keystore
                dsp_truststore_password: truststore123
                description: Windows MSSql target host
            windows_standalone_source:
              description: |
                The request example is intended for creating Windows standalone source environments.
              summary: Windows - Standalone Source Environments
              value:
                name: win-source
                hostname: db.host.com
                staging_environment: 1-WINDOWS_HOST-1
                description: Windows MSSql source host
            unix_cluster:
              description: |
                The request example is intended for updating Unix cluster environments.
              summary: Unix - Cluster Environments
              value:
                name: rac-environment
                hostname: db.host.com
                ssh_port: 22
                toolkit_path: /work
                cluster_home: /u01/app/19.0.0.0/grid
                cluster_node_address: db1.host.com
                nfs_addresses:
                - 192.168.10.2
                java_home: /Library/Java/JavaVirtualMachines/jdk/Contents/Home
                dsp_keystore_path: /tmp/keystore.keystore
                dsp_keystore_password: temp123
                dsp_keystore_alias: oracle-env
                dsp_truststore_path: /tmp/truststore.keystore
                dsp_truststore_password: truststore123
                description: Unix rac host
            windows_cluster:
              description: |
                The request example is intended for updating Windows cluster environments.
              summary: Windows - Cluster Environments
              value:
                name: mssql-cluster
                cluster_address: db-cluster.host.com
                cluster_node_address: db1.host.com
                hostname: db.host.com
                staging_environment: 1-WINDOWS_HOST-1
                java_home: c:\program files\java
                dsp_keystore_path: c:\tmp\keystore.keystore
                dsp_keystore_password: temp123
                dsp_keystore_alias: mssql-env
                dsp_truststore_path: c:\tmp\truststore.keystore
                dsp_truststore_password: truststore123
                description: Windows mssql host
security:
- ApiKeyAuth: [
    ]
