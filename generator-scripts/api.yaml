#
# Copyright (c) 2022, 2024 by Delphix. All rights reserved.
#
openapi: 3.0.0
info:
  title: Delphix DCT API
  version: '3.9.0'
  description: Delphix DCT API
  contact:
    name: Delphix Support
    url: https://support.delphix.com
    email: support@delphix.com
servers:
  - url: '/v3'

paths:
  /connectors/{connectorId}/test:
    post:
      tags:
        - Connectors
      summary: Checks connectivity between a masking engine and a remote data source.
      operationId: connectors_test
      parameters:
        - $ref: '#/components/parameters/connectorIdParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ConnectorTestResponse'
  /connectivity/check:
    post:
      tags:
        - Connectivity
      summary: Checks connectivity between an engine and a remote host machine on a given port.
      operationId: connectivity_check
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: connectivity_check
              $ref: "#/components/schemas/ConnectivityCheckParameters"
        description: The api to check connectivity of engine and a remote host on given port.
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ConnectivityCheckResponse'
  /database/connectivity/check:
    post:
      tags:
        - Connectivity
      summary: Tests the validity of the supplied database credentials, returning an error if unable to connect to the database.
      operationId: database_connectivity_check
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: database_connectivity_check
              $ref: "#/components/schemas/DatabaseConnectivityCheckParameters"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ConnectivityCheckResponse'
  /bookmarks:
    get:
      summary: List all bookmarks.
      operationId: get_bookmarks
      tags:
        - Bookmarks
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/bookmarksSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListBookmarksResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bookmark'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
    post:
      tags:
        - Bookmarks
      summary: Create a bookmark at the current time.
      operationId: create_bookmark
      requestBody:
        $ref: '#/components/requestBodies/CreateBookmark'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: CreateBookmarkResponse
                properties:
                  bookmark:
                    $ref: '#/components/schemas/Bookmark'
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /bookmarks/search:
    post:
      summary: Search for bookmarks.
      operationId: search_bookmarks
      tags:
        - Bookmarks
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          creation_date:
            type: date-time
          vdb_ids:
            type: array[string]
          dsource_ids:
            type: array[string]
          retention:
            type: integer
          expiration:
            type: date
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/bookmarksSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchBookmarksResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bookmark'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /bookmarks/{bookmarkId}:
    parameters:
      - $ref: '#/components/parameters/bookmarkIdParam'
    get:
      summary: Get a bookmark by ID.
      operationId: get_bookmark_by_id
      tags:
        - Bookmarks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookmark'
    patch:
      summary: Update a bookmark
      operationId: update_bookmark
      tags:
        - Bookmarks
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_bookmark_parameter
              $ref: '#/components/schemas/UpdateBookmarkParameters'
        description: The new data to update a Bookmark.
      responses:
        '200':
          description: Bookmark update initiated.
          content:
            application/json:
              schema:
                type: object
                title: UpdateBookmarkResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
    delete:
      summary: Delete a bookmark.
      operationId: delete_bookmark
      tags:
        - Bookmarks
      responses:
        '204':
          description: No Content
  /bookmarks/{bookmarkId}/vdb-groups:
    parameters:
      - $ref: '#/components/parameters/bookmarkIdParam'
    get:
      summary: List VDB Groups compatible with this bookmark.
      operationId: get_vdb_groups_by_bookmark
      tags:
        - Bookmarks
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/vdbGroupsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListVDBGroupsByBookmarkResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VDBGroup'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /bookmarks/{bookmarkId}/vdb-groups/search:
    parameters:
      - $ref: '#/components/parameters/bookmarkIdParam'
    post:
      summary: Search for VDB Groups compatible with this bookmark.
      operationId: search_vdb_groups_by_bookmark
      tags:
        - Bookmarks
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          vdb_ids:
            type: array[string]
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/vdbGroupsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchVDBGroupsByBookmarkResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VDBGroup'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /bookmarks/{bookmarkId}/tags:
    parameters:
      - $ref: '#/components/parameters/bookmarkIdParam'
    post:
      tags:
        - Bookmarks
      summary: Create tags for a Bookmark.
      operationId: create_bookmark_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: bookmark_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Bookmark.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - Bookmarks
      summary: Get tags for a Bookmark.
      operationId: get_bookmark_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /bookmarks/{bookmarkId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/bookmarkIdParam'
    post:
      tags:
        - Bookmarks
      summary: Delete tags for a Bookmark.
      operationId: delete_bookmark_tags
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
      responses:
        '204':
          description: No Content
  /sources:
    get:
      summary: List all sources.
      operationId: get_sources
      tags:
        - Sources
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/sourcesSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListSourcesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Source'
                  errors:
                    $ref: '#/components/schemas/Errors'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /sources/postgres:
    post:
      summary: Create a PostgreSQL source.
      operationId: create_postgres_source
      tags:
        - Sources
      requestBody:
        $ref: '#/components/requestBodies/CreatePostgresSource'
      responses:
        '201':
          description: PostgreSQL Source creation initiated
          content:
            application/json:
              schema:
                type: object
                title: CreatePostgresSourceResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
                  source_id:
                    type: string
                    description: The id of the created source.
                    example: source-1
  /sources/postgres/{sourceId}:
    parameters:
      - $ref: '#/components/parameters/sourceIdParam'
    patch:
      summary: Update a PostgreSQL source by ID.
      operationId: update_postgres_source_by_id
      tags:
        - Sources
      requestBody:
        $ref: "#/components/requestBodies/UpdatePostgresSource"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UpdatePostgresSourceResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /sources/search:
    post:
      summary: Search for Sources.
      operationId: search_sources
      tags:
        - Sources
      x-filterable:
        fields:
          id:
            type: string
          database_type:
            type: string
          name:
            type: string
          database_version:
            type: string
          environment_id:
            type: string
          data_uuid:
            type: string
          ip_address:
            type: string
          fqdn:
            type: string
          size:
            type: integer
          jdbc_connection_string:
            type: string
          plugin_version:
            type: string
          is_dsource:
            type: boolean
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
          recovery_model:
            type: string
          mssql_source_type:
            type: string
          appdata_source_type:
            type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/sourcesSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchSourcesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Source'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /sources/{sourceId}:
    parameters:
      - $ref: '#/components/parameters/sourceIdParam'
    get:
      summary: Get a source by ID.
      operationId: get_source_by_id
      tags:
        - Sources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
    delete:
      summary: Delete a source by ID.
      operationId: delete_source
      tags:
        - Sources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: DeleteSourceResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /sources/{sourceId}/tags:
    parameters:
      - $ref: '#/components/parameters/sourceIdParam'
    post:
      tags:
        - Sources
      summary: Create tags for a Source.
      operationId: create_source_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: vdb_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Source.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - Sources
      summary: Get tags for a Source.
      operationId: get_source_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /sources/{sourceId}/staging_compatible_repositories:
    parameters:
      - $ref: '#/components/parameters/sourceIdParam'
    get:
      tags:
        - Sources
      summary: Returns a list of repositories that match the specified source.
      operationId: get_source_compatible_repo
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: StagingCompatibleEnvironmentsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Environment'
  /sources/{sourceId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/sourceIdParam'
    post:
      tags:
        - Sources
      summary: Delete tags for a Source.
      operationId: delete_source_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
  /staging-sources:
    get:
      summary: List all staging sources.
      operationId: get_staging_sources
      tags:
        - StagingSources
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/stagingSourcesSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListStagingSourcesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/StagingSource'
                  errors:
                    $ref: '#/components/schemas/Errors'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /staging-sources/search:
    post:
      summary: Search for Staging Sources.
      operationId: search_staging_sources
      tags:
        - StagingSources
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          database_type:
            type: string
          database_name:
            type: string
          database_version:
            type: string
          environment_id:
            type: string
          data_uuid:
            type: string
          ip_address:
            type: string
          fqdn:
            type: string
          repository:
            type: string
          oracle_config_type:
            type: string
          cdb_type:
            type: string
          dsource_id:
            type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/stagingSourcesSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchStagingSourcesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/StagingSource'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /staging-sources/{stagingSourceId}:
    parameters:
      - $ref: '#/components/parameters/stagingSourceIdParam'
    get:
      summary: Get a staging source by ID.
      operationId: get_staging_source_by_id
      tags:
        - StagingSources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StagingSource'
  /staging-sources/{stagingSourceId}/tags:
    parameters:
      - $ref: '#/components/parameters/stagingSourceIdParam'
    post:
      tags:
        - StagingSources
      summary: Create tags for a Staging Source.
      operationId: create_staging_source_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: staging_source_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Staging Source.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - StagingSources
      summary: Get tags for a Staging Source.
      operationId: get_staging_source_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /staging-sources/{stagingSourceId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/stagingSourceIdParam'
    post:
      tags:
        - StagingSources
      summary: Delete tags for a Staging Source.
      operationId: delete_staging_source_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content

  /dsources:
    get:
      summary: List all dSources.
      operationId: get_dsources
      tags:
        - DSources
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/dsourcesSortParam'
        - $ref: '#/components/parameters/permission'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListDSourcesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DSource'
                  errors:
                    $ref: '#/components/schemas/Errors'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /dsources/oracle:
    post:
      summary: Link Oracle database as dSource.
      operationId: link_oracle_database
      tags:
        - DSources
      requestBody:
        x-body-name: linkDSourceBody
        $ref: '#/components/requestBodies/OracleLinkDSourceBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkDSourceResponse'
  /dsources/oracle/defaults:
    post:
      summary: Get defaults for dSource linking.
      operationId: get_oracle_dsource_linking_defaults
      tags:
        - DSources
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: dSource_linking_defaults
              $ref: "#/components/schemas/LinkDSourceDefaultRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OracleDSourceLinkSourceParameters"
  /dsources/oracle/staging-push:
    post:
      summary: Link an Oracle staging push database as dSource.
      operationId: link_oracle_staging_push_database
      tags:
        - DSources
      requestBody:
        x-body-name: linkStagingPushDSourceBody
        $ref: '#/components/requestBodies/OracleLinkStagingPushDSourceBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkDSourceResponse'
  /dsources/oracle/staging-push/defaults:
    post:
      summary: Get defaults for a Oracle staging push dSource linking.
      operationId: get_oracle_staging_push_dsource_linking_defaults
      tags:
        - DSources
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: dSource_linking_staging_push_defaults
              $ref: "#/components/schemas/OracleLinkStagingPushDSourceDefaultRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OracleStagingPushDSourceLinkSourceParameters"
  /dsources/ase:
    post:
      summary: Link an ASE database as dSource.
      operationId: link_ase_database
      tags:
        - DSources
      requestBody:
        x-body-name: linkDSourceBody
        $ref: '#/components/requestBodies/ASELinkDSourceBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkDSourceResponse'
  /dsources/ase/defaults:
    post:
      summary: Get defaults for an ASE dSource linking.
      operationId: get_ase_dsource_linking_defaults
      tags:
        - DSources
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: dSource_linking_defaults
              $ref: "#/components/schemas/LinkDSourceDefaultRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ASEDSourceLinkSourceParameters"
  /dsources/appdata:
    post:
      summary: Link an AppData database as dSource.
      operationId: link_appdata_database
      tags:
        - DSources
      requestBody:
        x-body-name: linkAppDataBody
        $ref: '#/components/requestBodies/AppDataDSourceBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkDSourceResponse'
  /dsources/appdata/defaults:
    post:
      summary: Get defaults for an AppData dSource linking.
      operationId: get_appdata_dsource_linking_defaults
      tags:
        - DSources
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: dSource_linking_defaults
              $ref: "#/components/schemas/LinkDSourceDefaultRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppDataDSourceLinkSourceParameters"
  /dsources/mssql:
    post:
      summary: Link a MSSql database as dSource.
      operationId: link_mssql_database
      tags:
        - DSources
      requestBody:
        x-body-name: linkDSourceBody
        $ref: '#/components/requestBodies/MSSQLLinkDSourceBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkDSourceResponse'
  /dsources/mssql/defaults:
    post:
      summary: Get defaults for a MSSql dSource linking.
      operationId: get_mssql_dsource_linking_defaults
      tags:
        - DSources
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: dSource_linking_defaults
              $ref: "#/components/schemas/LinkDSourceDefaultRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MSSQLDSourceLinkSourceParameters"
  /dsources/mssql/staging-push:
    post:
      summary: Link a MSSql staging push database as dSource.
      operationId: link_mssql_staging_push_database
      tags:
        - DSources
      requestBody:
        x-body-name: linkStagingPushDSourceBody
        $ref: '#/components/requestBodies/MSSQLLinkStagingPushDSourceBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkDSourceResponse'
  /dsources/mssql/staging-push/defaults:
    post:
      summary: Get defaults for a MSSql staging push dSource linking.
      operationId: get_mssql_staging_push_dsource_linking_defaults
      tags:
        - DSources
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: dSource_linking_staging_push_defaults
              $ref: "#/components/schemas/LinkStagingPushDSourceDefaultRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MSSQLDSourceStagingPushLinkSourceParameters"
  /dsources/delete:
    post:
      summary: Delete the specified dSource.
      operationId: delete_dsource
      tags:
        - DSources
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: delete_dsource_request
              $ref: "#/components/schemas/DeleteDSourceRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
  /dsources/search:
    post:
      summary: Search for dSources.
      operationId: search_dsources
      tags:
        - DSources
      x-filterable:
        fields:
          id:
            type: string
          data_uuid:
            type: string
          database_type:
            type: string
          name:
            type: string
          database_version:
            type: string
          content_type:
            type: string
          storage_size:
            type: integer
          plugin_version:
            type: string
          creation_date:
            type: string
          group_name:
            type: string
          enabled:
            type: boolean
          engine_id:
            type: string
          source_id:
            type: string
          status:
            type: string
          engine_name:
            type: string
          cdb_id:
            type: string
          current_timeflow_id:
            type: string
          previous_timeflow_id:
            type: string
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
          primary_object_id:
            type: string
          primary_engine_id:
            type: string
          primary_engine_name:
            type: string
          replicas:
            type: array[object]
            fields:
              replica_id:
                type: string
              replica_engine_id:
                type: string
              replica_engine_name:
                type: string
          hooks:
            type: array[object]
            fields:
              ops_pre_sync:
                type: string
              ops_pre_log_sync:
                type: string
              ops_post_sync:
                type: string
              pre_validated_sync:
                x-internal: true
                type: string
              post_validated_sync:
                x-internal: true
                type: string
          sync_policy_id:
            type: string
          retention_policy_id:
            type: string
          quota_policy_id:
            type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/dsourcesSortParam'
        - $ref: '#/components/parameters/permission'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchDSourcesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DSource'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /dsources/{dsourceId}:
    parameters:
      - $ref: "#/components/parameters/dsourceIdParam"
    get:
      summary: Get a dSource by ID.
      operationId: get_dsource_by_id
      tags:
        - DSources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DSource'
  /dsources/{dsourceId}/enable:
    parameters:
      - $ref: "#/components/parameters/dsourceIdParam"
    post:
      summary: Enable a dSource.
      operationId: enable_dsource
      tags:
        - DSources
      requestBody:
        $ref: "#/components/requestBodies/EnableDsourceBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: EnableDsourceResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /dsources/{dsourceId}/disable:
    parameters:
      - $ref: "#/components/parameters/dsourceIdParam"
    post:
      summary: Disable a dSource.
      operationId: disable_dsource
      tags:
        - DSources
      requestBody:
        $ref: "#/components/requestBodies/DisableDsourceBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: DisableDsourceResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /dsources/{dsourceId}/snapshots:
    parameters:
      - $ref: "#/components/parameters/dsourceIdParam"
    get:
      summary: List Snapshots for a dSource.
      operationId: get_dsource_snapshots
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
      tags:
        - DSources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/ListSnapshotsResponse"
    post:
      summary: Snapshot a dSource.
      operationId: snapshot_dsource
      tags:
        - DSources
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: dsource_tags
              $ref: "#/components/schemas/DSourceSnapshotParameters"
            examples:
              default_values:
                description: |
                  This request example does not set any property and will thus use the default behavior.
                summary: Using default Values
                value: { }
              oracle_custom:
                description: |
                  This request examples customizes the snapshot process for an Oracle dSource.
                summary: Oracle customized
                value:
                  skip_space_check: true
                  force_full_backup: dsource-name
                  double_sync: true
              mssql_specific_backup:
                description: |
                  This request examples demonstrates how to specify a custom backup set UUID for an MSSql dSource.
                summary: MSSql specific backup
                value:
                  mssql_backup_uuid: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
                  sync_strategy: "specific_backup"
              ase_specific_backup:
                description: |
                  This request examples demonstrates how to specify a custom backup for an ASE dSource.
                summary: ASE specific backup
                value:
                  ase_backup_files: [ "backup_file_stripe_1", "backup_file_stripe_2" ]
                  sync_strategy: "specific_backup"
        description: Optional parameters to snapshot a DSource.
        required: false
      responses:
        '200':
          description: dSource snapshot initiated.
          content:
            application/json:
              schema:
                type: object
                title: SnapshotDSourceResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /dsources/{dsourceId}/tags:
    parameters:
      - $ref: "#/components/parameters/dsourceIdParam"
    post:
      tags:
        - DSources
      summary: Create tags for a dSource.
      operationId: create_tags_dsource
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: dsource_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for DSource.
        required: true
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - DSources
      summary: Get tags for a dSource.
      operationId: get_tags_dsource
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /dsources/{dsourceId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/dsourceIdParam'
    post:
      tags:
        - DSources
      summary: Delete tags for a dSource.
      operationId: delete_tags_dsource
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
  /kerberos-configs/{kerberosConfigId}:
    parameters:
      - $ref: '#/components/parameters/kerberosConfigIdParam'
    get:
      summary: Get a kerberos config by ID or Name.
      operationId: get_kerberos_config_by_id
      tags:
        - KerberosConfig
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosConfig'
  /kerberos-configs:
    get:
      summary: List all kerberos configs.
      operationId: list_kerberos_configs
      tags:
        - KerberosConfig
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/kerberosConfigSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListKerberosConfigsResponse`
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/KerberosConfig'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /kerberos-configs/search:
    post:
      summary: Search for Kerberos Configs.
      operationId: search_kerberos_configs
      tags:
        - KerberosConfig
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          engine_name:
            type: string
          engine_id:
            type: string
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
          principal:
            type: string
          realm:
            type: string
          enabled:
            type: boolean
          kdc_servers:
            type: array[object]
            fields:
              hostname:
                type: string
              port:
                type: integer
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/kerberosConfigSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchKerberosConfigsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/KerberosConfig'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /password_vaults:
    get:
      summary: List all password vaults.
      operationId: get_password_vaults
      tags:
        - PasswordVaults
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/passwordVaultSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListPasswordVaultsResponse`
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/PasswordVault'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /password_vaults/search:
    post:
      summary: Search for Password Vaults.
      operationId: search_password_vaults
      tags:
        - PasswordVaults
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          engine_name:
            type: string
          engine_id:
            type: string
          namespace:
            type: string
          type:
            type: string
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/passwordVaultSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchPasswordVaultResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/PasswordVault'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /password_vaults/{passwordVaultId}:
    parameters:
      - $ref: '#/components/parameters/passwordVaultIdParam'
    get:
      summary: Get a password vault by ID or Name.
      operationId: get_password_vault_by_id
      tags:
        - PasswordVaults
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordVault'
  /groups:
    get:
      summary: List all dataset groups.
      operationId: get_dataset_groups
      tags:
        - Groups
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/groupSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListGroupsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DatasetGroup'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /groups/search:
    post:
      summary: Search for dataset groups.
      operationId: search_dataset_groups
      tags:
        - Groups
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          engine_name:
            type: string
          engine_id:
            type: string
          namespace:
            type: string
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/groupSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchDatasetGroupResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DatasetGroup'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /groups/{groupId}:
    parameters:
      - $ref: '#/components/parameters/groupIdParam'
    get:
      summary: Get a dataset group by ID or Name.
      operationId: get_dataset_group_by_id
      tags:
        - Groups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetGroup'
  /toolkits:
    get:
      summary: List all toolkits.
      operationId: get_toolkits
      tags:
        - Toolkits
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/toolkitSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListToolkitResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Toolkit'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /toolkits/search:
    post:
      summary: Search for toolkits.
      operationId: search_toolkits
      tags:
        - Toolkits
      x-filterable:
        fields:
          id:
            type: string
          type:
            type: string
          pretty_name:
            type: string
          name:
            type: string
          reference:
            type: string
          version:
            type: string
          display_name:
            type: string
          plugin_id:
            type: string
          external_version:
            type: string
          engine_name:
            type: string
          engine_id:
            type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/toolkitSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchToolkitResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Toolkit'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /toolkits/{toolkitId}:
    parameters:
      - $ref: '#/components/parameters/toolkitIdParam'
    get:
      summary: Get Toolkit by ID.
      operationId: get_toolkit_by_id
      tags:
        - Toolkits
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Toolkit'
  /toolkits/{toolkitId}/tags:
    parameters:
      - $ref: '#/components/parameters/toolkitIdParam'
    post:
      tags:
        - Toolkits
      summary: Create tags for a toolkit.
      operationId: create_toolkit_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: toolkit_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Toolkit.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - Toolkits
      summary: Get tags for a Toolkit.
      operationId: get_toolkit_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /toolkits/{toolkitId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/toolkitIdParam'
    post:
      tags:
        - Toolkits
      summary: Delete tags for a Toolkit.
      operationId: delete_toolkit_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
  /vdbs:
    get:
      summary: List all vdbs.
      operationId: get_vdbs
      tags:
        - VDBs
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/vdbsSortParam'
        - $ref: '#/components/parameters/permission'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListVDBsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VDB'
                  errors:
                    $ref: '#/components/schemas/Errors'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /vdbs/search:
    post:
      summary: Search for VDBs.
      operationId: search_vdbs
      tags:
        - VDBs
      x-filterable:
        fields:
          id:
            type: string
          database_type:
            type: string
          name:
            type: string
          database_version:
            type: string
          jdbc_connection_string:
            type: string
          size:
            type: integer
          storage_size:
            type: integer
          engine_id:
            type: string
          status:
            type: string
          environment_id:
            type: string
          ip_address:
            type: string
          fqdn:
            type: string
          parent_id:
            type: string
          parent_dsource_id:
            type: string
          group_name:
            type: string
          creation_date:
            type: string
          last_refreshed_date:
            type: string
          current_timeflow_id:
            type: string
          previous_timeflow_id:
            type: string
          masked:
            type: boolean
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
          is_locked:
            type: boolean
          locked_by:
            type: integer
            format: int64
          locked_by_name:
            type: string
          content_type:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
          engine_name:
            type: string
          cdb_id:
            type: string
          appdata_source_params:
            type: string
          config_params:
            type: string
          primary_object_id:
            type: string
          primary_engine_id:
            type: string
          primary_engine_name:
            type: string
          replicas:
            type: array[object]
            fields:
              replica_id:
                type: string
              replica_engine_id:
                type: string
              replica_engine_name:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/vdbsSortParam'
        - $ref: '#/components/parameters/permission'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchVDBsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VDB'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /vdbs/{vdbId}:
    parameters:
      - $ref: '#/components/parameters/vdbIdParam'
    get:
      summary: Get a VDB by ID.
      operationId: get_vdb_by_id
      tags:
        - VDBs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VDB'
    patch:
      tags:
        - VDBs
      summary: Update values of a VDB
      operationId: update_vdb_by_id
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_vdb_parameter
              $ref: '#/components/schemas/UpdateVDBParameters'
        description: The new data to update a VDB.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UpdateVDBResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/snapshots:
    parameters:
      - $ref: '#/components/parameters/vdbIdParam'
    get:
      summary: List Snapshots for a VDB.
      operationId: get_vdb_snapshots
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
      tags:
        - VDBs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/ListSnapshotsResponse"
    post:
      summary: Snapshot a VDB.
      operationId: snapshot_vdb
      tags:
        - VDBs
      responses:
        '200':
          description: VDB snapshot initiated.
          content:
            application/json:
              schema:
                type: object
                title: SnapshotVDBResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/bookmarks:
    parameters:
      - $ref: '#/components/parameters/vdbIdParam'
    get:
      summary: List Bookmarks compatible with this VDB.
      operationId: get_bookmarks_by_vdb
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/bookmarksSortParam'
      tags:
        - VDBs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListBookmarksByVDBResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bookmark'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /vdbs/{vdbId}/bookmarks/search:
    parameters:
      - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Search Bookmarks compatible with this VDB.
      operationId: search_bookmarks_by_vdb
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/bookmarksSortParam'
      tags:
        - VDBs
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          creation_date:
            type: date-time
          vdb_ids:
            type: array[string]
          retention:
            type: integer
          expiration:
            type: date
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchBookmarksByVDBResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bookmark'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /vdbs/{vdbId}/tags:
    parameters:
      - $ref: '#/components/parameters/vdbIdParam'
    post:
      tags:
        - VDBs
      summary: Create tags for a VDB.
      operationId: create_vdb_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: vdb_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for VDB.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - VDBs
      summary: Get tags for a VDB.
      operationId: get_tags_vdb
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /vdbs/{vdbId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/vdbIdParam'
    post:
      tags:
        - VDBs
      summary: Delete tags for a VDB.
      operationId: delete_vdb_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
  /vdbs/{vdbId}/start:
    parameters:
      - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Start a VDB.
      tags:
        - VDBs
      operationId: start_vdb
      responses:
        '200':
          description: VDB start initiated.
          content:
            application/json:
              schema:
                type: object
                title: StartVDBResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/stop:
    parameters:
      - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Stop a VDB.
      tags:
        - VDBs
      operationId: stop_vdb
      responses:
        '200':
          description: VDB stop initiated.
          content:
            application/json:
              schema:
                type: object
                title: StopVDBResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/enable:
    parameters:
      - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Enable a VDB.
      tags:
        - VDBs
      operationId: enable_vdb
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: enable_vdb_parameter
              $ref: '#/components/schemas/EnableVDBParameters'
        description: The parameters to enable a VDB.
      responses:
        '200':
          description: VDB enable initiated.
          content:
            application/json:
              schema:
                type: object
                title: EnableVDBResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/disable:
    parameters:
      - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Disable a VDB.
      tags:
        - VDBs
      operationId: disable_vdb
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: disable_vdb_parameter
              $ref: '#/components/schemas/DisableVDBParameters'
        description: The parameters to disable a VDB.
      responses:
        '200':
          description: VDB disable initiated.
          content:
            application/json:
              schema:
                type: object
                title: DisableVDBResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/lock:
    parameters:
      - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Lock a VDB.
      tags:
        - VDBs
      operationId: lock_vdb
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: LockVDBParameters
              properties:
                account_id:
                  description: Id of the account on whose behalf this request is being made. Only accounts having LOCK_FOR_OTHER_ACCOUNT permission can lock VDBs on behalf of other accounts.
                               If this property is not specified then the account id of the authenticated user making the request is used.
                  type: integer
                  format: int64
        description: The parameters to lock a VDB.
        required: true
      responses:
        '200':
          description: VDB is locked.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VDB'
  /vdbs/{vdbId}/unlock:
    parameters:
      - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Unlock a VDB.
      tags:
        - VDBs
      operationId: unlock_vdb
      responses:
        '200':
          description: VDB is unlocked.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VDB'
  /vdbs/{vdbId}/delete:
    parameters:
      - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Delete a VDB.
      tags:
        - VDBs
      operationId: delete_vdb
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: delete_vdb_parameter
              $ref: '#/components/schemas/DeleteVDBParameters'
        description: The parameters to delete a VDB.
      responses:
        '200':
          description: VDB delete initiated.
          content:
            application/json:
              schema:
                type: object
                title: DeleteVDBResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/rollback_by_timestamp:
    parameters:
      - $ref: '#/components/parameters/vdbIdParam'
    post:
      deprecated: true
      summary: Rollback a VDB by timestamp.
      tags:
        - VDBs
      operationId: rollback_vdb_by_timestamp
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: rollback_vdb_parameter
              $ref: '#/components/schemas/RollbackVDBByTimestampParameters'
        description: The parameters to rollback a VDB.
      responses:
        '200':
          description: VDB rollback initiated.
          content:
            application/json:
              schema:
                type: object
                title: RollbackVDBByTimestampResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/rollback_by_snapshot:
    parameters:
      - $ref: '#/components/parameters/vdbIdParam'
    post:
      deprecated: true
      summary: Rollback a VDB by snapshot.
      tags:
        - VDBs
      operationId: rollback_vdb_by_snapshot
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: rollback_vdb_parameter
              $ref: '#/components/schemas/RollbackVDBBySnapshotParameters'
        description: The parameters to rollback a VDB.
      responses:
        '200':
          description: VDB rollback initiated.
          content:
            application/json:
              schema:
                type: object
                title: RollbackVDBBySnapshotResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/rollback_from_bookmark:
    parameters:
      - $ref: '#/components/parameters/vdbIdParam'
    post:
      deprecated: true
      summary: Rollback a VDB from a bookmark with only the same VDB.
      tags:
        - VDBs
      operationId: rollback_vdb_from_bookmark
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: rollback_vdb_parameter
              $ref: '#/components/schemas/RollbackVDBFromBookmarkParameters'
        description: The parameters to rollback a VDB.
      responses:
        '200':
          description: VDB rollback initiated.
          content:
            application/json:
              schema:
                type: object
                title: RollbackVDBFromBookmarkResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/refresh_by_timestamp:
    parameters:
      - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Refresh a VDB by timestamp.
      tags:
        - VDBs
      operationId: refresh_vdb_by_timestamp
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: refresh_vdb_parameter
              $ref: '#/components/schemas/RefreshVDBByTimestampParameters'
        description: The parameters to refresh a VDB.
      responses:
        '200':
          description: VDB refresh initiated.
          content:
            application/json:
              schema:
                type: object
                title: RefreshVDBByTimestampResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/refresh_by_snapshot:
    parameters:
      - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Refresh a VDB by snapshot.
      tags:
        - VDBs
      operationId: refresh_vdb_by_snapshot
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: refresh_vdb_parameter
              $ref: '#/components/schemas/RefreshVDBBySnapshotParameters'
        description: The parameters to refresh a VDB.
      responses:
        '200':
          description: VDB refresh initiated.
          content:
            application/json:
              schema:
                type: object
                title: RefreshVDBBySnapshotResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/refresh_from_bookmark:
    parameters:
      - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Refresh a VDB from bookmark with a single VDB.
      tags:
        - VDBs
      operationId: refresh_vdb_from_bookmark
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: refresh_vdb_parameter
              $ref: '#/components/schemas/RefreshVDBFromBookmarkParameters'
        description: The parameters to refresh a VDB.
      responses:
        '200':
          description: VDB refresh initiated.
          content:
            application/json:
              schema:
                type: object
                title: RefreshVDBFromBookmarkResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/refresh_by_location:
    parameters:
      - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Refresh a VDB by location.
      tags:
        - VDBs
      operationId: refresh_vdb_by_location
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: refresh_vdb_parameter
              $ref: '#/components/schemas/RefreshVDBByLocationParameters'
        description: The parameters to refresh a VDB.
      responses:
        '200':
          description: VDB refresh initiated.
          content:
            application/json:
              schema:
                type: object
                title: RefreshVDBByLocationResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/{vdbId}/switch_timeflow:
    parameters:
      - $ref: '#/components/parameters/vdbIdParam'
    post:
      summary: Switches the current timeflow of a VDB.
      tags:
        - VDBs
      operationId: switch_timeflow
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: switch_timeflow_parameter
              $ref: '#/components/schemas/SwitchTimeflowParameters'
        description: The parameters to switch the timeflow of a VDB.
      responses:
        '200':
          description: Switch timeflow initiated.
          content:
            application/json:
              schema:
                type: object
                title: SwitchTimeflowResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdbs/provision_by_timestamp:
    post:
      summary: Provision a new VDB by timestamp.
      tags:
        - VDBs
      operationId: provision_vdb_by_timestamp
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: provision_vdb_parameter
              $ref: "#/components/schemas/ProvisionVDBByTimestampParameters"
        description: The parameters to provision a VDB.
        required: true
      responses:
        "200":
          description: VDB provisioning initiated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionVDBResponse'
  /vdbs/provision_by_timestamp/defaults:
    post:
      summary: Get default provision parameters for provisioning a new VDB by timestamp.
      tags:
        - VDBs
      operationId: provision_vdb_by_timestamp_defaults
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: provision_vdb_parameter_defaults
              $ref: "#/components/schemas/ProvisionVDBByTimestampDefaultsRequest"
        description: The request to get default VDB provision parameters for provisioning a new VDB by timestamp.
        required: true
      responses:
        "200":
          description: Default VDB provisioning parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionVDBByTimestampParameters'
  /vdbs/provision_by_location:
    post:
      summary: Provision a new VDB by location.
      tags:
        - VDBs
      operationId: provision_vdb_by_location
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: provision_vdb_parameter
              $ref: "#/components/schemas/ProvisionVDBByLocationParameters"
        description: The parameters to provision a VDB.
        required: true
      responses:
        "200":
          description: VDB provisioning initiated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionVDBResponse'
  /vdbs/provision_by_location/defaults:
    post:
      summary: Get default provision parameters for provisioning a new VDB by location.
      tags:
        - VDBs
      operationId: provision_vdb_by_location_defaults
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: provision_vdb_parameter_defaults
              $ref: "#/components/schemas/ProvisionVDBByLocationDefaultsRequest"
        description: The request to get default VDB provision parameters for provisioning a new VDB by location.
        required: true
      responses:
        "200":
          description: Default VDB provisioning parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionVDBByLocationParameters'
  /vdbs/provision_by_snapshot:
    post:
      summary: Provision a new VDB by snapshot.
      tags:
        - VDBs
      operationId: provision_vdb_by_snapshot
      requestBody:
        $ref: '#/components/requestBodies/ProvisionBySnapshot'
      responses:
        "200":
          description: VDB provisioning initiated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionVDBResponse'
  /vdbs/provision_by_snapshot/defaults:
    post:
      summary: Get default provision parameters for provisioning a new VDB by snapshot.
      tags:
        - VDBs
      operationId: provision_vdb_by_snapshot_defaults
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: provision_vdb_parameter_defaults
              $ref: '#/components/schemas/ProvisionVDBBySnapshotDefaultsRequest'
        description: The request to get default VDB provision parameters for provisioning a new VDB by snapshot.
        required: true
      responses:
        "200":
          description: Default VDB provisioning parameters.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProvisionVDBBySnapshotParameters"
  /vdbs/provision_from_bookmark:
    post:
      summary: Provision a new VDB from a bookmark with a single VDB.
      tags:
        - VDBs
      operationId: provision_vdb_from_bookmark
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: provision_vdb_parameter
              $ref: "#/components/schemas/ProvisionVDBFromBookmarkParameters"
        description: The parameters to provision a VDB.
        required: true
      responses:
        "200":
          description: VDB provisioning initiated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisionVDBResponse'
  /vdbs/provision_from_bookmark/defaults:
    post:
      summary: Get default provision parameters for provisioning a new VDB from a bookmark.
      tags:
        - VDBs
      operationId: provision_vdb_from_bookmark_defaults
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: provision_vdb_parameter_defaults
              $ref: '#/components/schemas/ProvisionVDBFromBookmarkDefaultsRequest'
        description: The request to get default VDB provision parameters for provisioning a new VDB from a bookmark.
        required: true
      responses:
        "200":
          description: Default VDB provisioning parameters.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProvisionVDBFromBookmarkParameters"

  /vdb-groups:
    get:
      summary: List all VDBGroups.
      operationId: get_vdb_groups
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/vdbGroupsSortParam'
      tags:
        - VDBGroups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListVDBGroupsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VDBGroup'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
    post:
      summary: Create a new VDBGroup.
      tags:
        - VDBGroups
      operationId: create_vdb_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: CreateVDBGroupRequest
              required:
                - name
                - vdb_ids
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 256
                vdb_ids:
                  type: array
                  items:
                    type: string
                    minLength: 1
                    maxLength: 256
                  minItems: 1
                tags:
                  type: array
                  maxItems: 1000
                  description: The tags to be created for VDB Group.
                  items:
                    $ref: '#/components/schemas/Tag'
                  minItems: 1
                make_current_account_owner:
                  type: boolean
                  default: true
                  description: Whether the account creating this VDB group must be configured as owner of the VDB group.
        description: The parameters to create a VDBGroup.
        required: true
      responses:
        "201":
          description: VDBGroup Created.
          content:
            application/json:
              schema:
                type: object
                title: CreateVDBGroupResponse
                properties:
                  vdb_group:
                    $ref: "#/components/schemas/VDBGroup"
  /vdb-groups/provision_from_bookmark:
    post:
      summary: Provision a new VDB Group from a Bookmark.
      tags:
        - VDBGroups
      operationId: provision_vdb_group_from_bookmark
      requestBody:
        $ref: '#/components/requestBodies/ProvisionVDBGroupFromBookmark'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ProvisionVDBGroupFromBookmarkResponse
                properties:
                  vdb_group:
                    $ref: "#/components/schemas/VDBGroup"
                  job:
                    $ref: '#/components/schemas/Job'
                    description: Initiated job.
  /vdb-groups/search:
    post:
      summary: Search for VDB Groups.
      operationId: search_vdb_groups
      tags:
        - VDBGroups
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          is_locked:
            type: boolean
          locked_by:
            type: integer
            format: int64
          locked_by_name:
            type: string
          vdb_ids:
            type: array[string]
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/vdbGroupsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchVDBGroupResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VDBGroup'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /vdb-groups/{vdbGroupId}:
    parameters:
      - $ref: '#/components/parameters/vdbGroupIdParam'
    get:
      summary: Get a VDBGroup by name.
      operationId: get_vdb_group
      tags:
        - VDBGroups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VDBGroup'
    patch:
      tags:
        - VDBGroups
      summary: Update values of a VDB group.
      operationId: update_vdb_group_by_id
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_vdb_group_parameter
              $ref: '#/components/schemas/UpdateVDBGroupParameters'
        description: The new data to update a VDB group.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VDBGroup'
    delete:
      summary: Delete a VDBGoup.
      operationId: delete_vdb_group
      tags:
        - VDBGroups
      responses:
        '204':
          description: No Content
  /vdb-groups/{vdbGroupId}/tags:
    parameters:
      - $ref: '#/components/parameters/vdbGroupIdParam'
    post:
      tags:
        - VDBGroups
      summary: Create tags for a VDB Group.
      operationId: create_vdb_groups_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: vdb_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for VDB Group.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - VDBGroups
      summary: Get tags for a VDB Group.
      operationId: get_vdb_group_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /vdb-groups/{vdbGroupId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/vdbGroupIdParam'
    post:
      tags:
        - VDBGroups
      summary: Delete tags for a VDB Group.
      operationId: delete_vdb_group_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
  /vdb-groups/{vdbGroupId}/refresh:
    parameters:
      - $ref: '#/components/parameters/vdbGroupIdParam'
    post:
      summary: Refresh a VDBGroup.
      tags:
        - VDBGroups
      operationId: refresh_vdb_group
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: refresh_vdb_group_parameters
              $ref: '#/components/schemas/RefreshVDBGroupParameters'
        description: The parameters to refresh a VDBGroup.
      responses:
        '200':
          description: VDBGroup refresh initiated.
          content:
            application/json:
              schema:
                type: object
                title: RefreshVDBGroupResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdb-groups/{vdbGroupId}/rollback:
    parameters:
      - $ref: '#/components/parameters/vdbGroupIdParam'
    post:
      summary: Rollback a VDBGroup.
      tags:
        - VDBGroups
      operationId: rollback_vdb_group
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: rollback_vdb_group_parameters
              $ref: '#/components/schemas/RollbackVDBGroupParameters'
        description: The parameters to rollback a VDBGroup.
      responses:
        '200':
          description: VDBGroup rollback initiated.
          content:
            application/json:
              schema:
                type: object
                title: RollbackVDBGroupResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /vdb-groups/{vdbGroupId}/bookmarks:
    parameters:
      - $ref: '#/components/parameters/vdbGroupIdParam'
    get:
      summary: List bookmarks compatible with this VDB Group.
      operationId: get_bookmarks_by_vdb_group
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/bookmarksSortParam'
      tags:
        - VDBGroups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListBookmarksByVDBGroupsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bookmark'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /vdb-groups/{vdbGroupId}/bookmarks/search:
    parameters:
      - $ref: '#/components/parameters/vdbGroupIdParam'
    post:
      tags:
        - VDBGroups
      summary: Search for bookmarks compatible with this VDB Group.
      operationId: search_bookmarks_by_vdb_group
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          creation_date:
            type: string
          vdb_ids:
            type: array[string]
          retention:
            type: integer
          expiration:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/bookmarksSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchBookmarksByVDBGroupsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bookmark'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /vdb-groups/{vdbGroupId}/lock:
    parameters:
      - $ref: '#/components/parameters/vdbGroupIdParam'
    post:
      summary: Lock a VDB Group.
      tags:
        - VDBGroups
      operationId: lock_vdb_group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: LockVDBGroupParameters
              properties:
                account_id:
                  description: Id of the account on whose behalf this request is being made. Only accounts having LOCK_FOR_OTHER_ACCOUNT permission can lock VDB Groups on behalf of other accounts.
                    If this property is not specified then the account id of the authenticated user making the request is used.
                  type: integer
                  format: int64
        description: The parameters to lock a VDB Group.
        required: true
      responses:
        '200':
          description: VDB Group is locked.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VDBGroup'

  /vdb-groups/{vdbGroupId}/unlock:
    parameters:
      - $ref: '#/components/parameters/vdbGroupIdParam'
    post:
      summary: Unlock a VDB Group.
      tags:
        - VDBGroups
      operationId: unlock_vdb_group
      responses:
        '200':
          description: VDB Group is unlocked.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VDBGroup'

  /snapshots:
    get:
      tags:
        - Snapshots
      summary: Retrieve the list of snapshots.
      operationId: get_snapshots
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/snapshotsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/ListSnapshotsResponse"
  /snapshots/{snapshotId}:
    parameters:
      - $ref: '#/components/parameters/snapshotIdParam'
    get:
      summary: Get a Snapshot by ID.
      operationId: get_snapshot_by_id
      tags:
        - Snapshots
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
    patch:
      tags:
        - Snapshots
      summary: Update values of a Snapshot.
      operationId: update_snapshot
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_snapshot_parameter
              $ref: '#/components/schemas/UpdateSnapshotParameters'
        description: The new data to update a Snapshot.
      responses:
        '200':
          description: Snapshot update initiated.
          content:
            application/json:
              schema:
                type: object
                title: UpdateSnapshotResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
    delete:
      summary: Delete a Snapshot.
      operationId: delete_snapshot
      tags:
        - Snapshots
      responses:
        '200':
          description: Snapshot delete initiated.
          content:
            application/json:
              schema:
                type: object
                title: DeleteSnapshotResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /snapshots/{snapshotId}/unset_expiration:
    parameters:
      - $ref: '#/components/parameters/snapshotIdParam'
    post:
      summary: Unset a Snapshot's expiration, removing expiration and retain_forever values for the snapshot.
      operationId: unset_snapshot_retention
      tags:
        - Snapshots
      responses:
        '200':
          description: Snapshot unset retention initiated.
          content:
            application/json:
              schema:
                type: object
                title: UnsetSnapshotRetentionResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /snapshots/{snapshotId}/tags:
    parameters:
      - $ref: '#/components/parameters/snapshotIdParam'
    post:
      tags:
        - Snapshots
      summary: Create tags for a Snapshot.
      operationId: create_snapshot_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: snapshot_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Snapshot.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - Snapshots
      summary: Get tags for a Snapshot.
      operationId: get_snapshot_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /snapshots/{snapshotId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/snapshotIdParam'
    post:
      tags:
        - Snapshots
      summary: Delete tags for a Snapshot.
      operationId: delete_snapshot_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
  /snapshots/search:
    post:
      tags:
        - Snapshots
      summary: Search snapshots.
      operationId: search_snapshots
      x-filterable:
        fields:
          id:
            type: string
          engine_id:
            type: string
          namespace:
            type: string
          name:
            type: string
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
          consistency:
            type: string
          missing_non_logged_data:
            type: boolean
          dataset_id:
            type: string
          creation_time:
            type: string
          start_timestamp:
            type: string
          start_location:
            type: string
          timestamp:
            type: string
          location:
            type: string
          expiration:
            type: date
          retain_forever:
            type: boolean
          effective_expiration:
            type: date
          effective_retain_forever:
            type: boolean
          timeflow_id:
            type: string
          timezone:
            type: string
          version:
            type: string
          temporary:
            type: boolean
          appdata_toolkit:
            type: string
          appdata_metadata:
            type: string
          ase_db_encryption_key:
            type: string
          mssql_internal_version:
            type: integer
          mssql_backup_set_uuid:
            type: string
          mssql_backup_software_type:
            type: string
          mssql_backup_location_type:
            type: string
          mssql_empty_snapshot:
            type: boolean
          oracle_from_physical_standby_vdb:
            type: boolean
          oracle_redo_log_size_in_bytes:
            type: integer
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/snapshotsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchSnapshotsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Snapshot'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /snapshots/find_by_location:
    parameters:
      - $ref: '#/components/parameters/datasetIdQueryParam'
      - in: query
        required: true
        name: location
        schema:
          type: string
          minLength: 1
          maxLength: 256
        description: The location
        example: 2332584
    get:
      summary: Get the snapshots at this location for a dataset.
      operationId: find_by_location
      tags:
        - Snapshots
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: FindByLocationResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Snapshot'
  /snapshots/find_by_timestamp:
    parameters:
      - $ref: '#/components/parameters/datasetIdQueryParam'
      - in: query
        required: true
        name: timestamp
        schema:
          type: string
          format: date-time
        description: The desired point in time.
        example: '2021-05-01T08:51:34.148000+00:00'
    get:
      summary: Get the snapshots at this timestamp for a dataset.
      operationId: find_by_timestamp
      tags:
        - Snapshots
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: FindByTimestampResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Snapshot'
  /snapshots/{snapshotId}/timeflow_range:
    parameters:
      - $ref: '#/components/parameters/snapshotIdParam'
    get:
      summary: Return the provisionable timeflow range based on a specific snapshot.
      operationId: get_snapshot_timeflow_range
      tags:
        - Snapshots
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeflowRange'
  /timeflows:
    get:
      tags:
        - Timeflows
      summary: Retrieve the list of timeflows.
      operationId: get_timeflows
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/timeflowsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListTimeflowsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Timeflow'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /timeflows/{timeflowId}:
    parameters:
      - $ref: '#/components/parameters/timeflowIdParam'
    get:
      summary: Get a Timeflow by ID.
      operationId: get_timeflow_by_id
      tags:
        - Timeflows
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeflow'
    patch:
      summary: Update values of a timeflow.
      operationId: update_timeflow
      tags:
        - Timeflows
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_timeflow_parameters
              $ref: '#/components/schemas/UpdateTimeflowParameters'
        description: The new data to update a timeflow.
      responses:
        '202':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UpdateTimeflowResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
    delete:
      summary: Delete a timeflow.
      operationId: delete_timeflow
      tags:
        - Timeflows
      responses:
        '202':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: DeleteTimeflowResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /timeflows/{timeflowId}/timeflowSnapshotDayRange:
    parameters:
      - $ref: '#/components/parameters/timeflowIdParam'
    get:
      summary: Returns the count of TimeFlow snapshots of the Timeflow aggregated by day.
      operationId: get_timeflow_snapshot_day_range
      tags:
        - Timeflows
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsDayRangesResponse'
  /timeflows/{timeflowId}/tags:
    parameters:
      - $ref: '#/components/parameters/timeflowIdParam'
    post:
      tags:
        - Timeflows
      summary: Create tags for a Timeflow.
      operationId: create_timeflow_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: timeflow_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Timeflow.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - Timeflows
      summary: Get tags for a Timeflow.
      operationId: get_timeflow_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /timeflows/{timeflowId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/timeflowIdParam'
    post:
      tags:
        - Timeflows
      summary: Delete tags for a Timeflow.
      operationId: delete_timeflow_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
  /timeflows/search:
    post:
      tags:
        - Timeflows
      summary: Search timeflows.
      operationId: search_timeflows
      x-filterable:
        fields:
          id:
            type: string
          engine_id:
            type: string
          namespace:
            type: string
          name:
            type: string
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
          dataset_id:
            type: string
          creation_type:
            type: string
          parent_snapshot_id:
            type: string
          parent_point_location:
            type: string
          parent_point_timestamp:
            type: string
          parent_point_timeflow_id:
            type: string
          source_data_timestamp:
            type: string
          oracle_incarnation_id:
            type: string
          oracle_cdb_timeflow_id:
            type: string
          oracle_tde_uuid:
            type: integer
          mssql_database_guid:
            type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/timeflowsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchTimeflowsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Timeflow'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /environments:
    get:
      summary: List all environments.
      operationId: get_environments
      tags:
        - Environments
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/envSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListEnvironmentsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Environment'
                  errors:
                    $ref: '#/components/schemas/Errors'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
    post:
      tags:
        - Environments
      summary: Create an environment.
      operationId: create_environment
      requestBody:
        $ref: '#/components/requestBodies/CreateEnvironment'
      responses:
        '201':
          description: Environment creation initiated
          content:
            application/json:
              schema:
                type: object
                title: CreateEnvironmentResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
                  environment_id:
                    type: string
                    description: The id of environment created.
                    example: host-environment-1

  /environments/compatible_repositories_by_snapshot:
    post:
      summary: Get compatible repositories corresponding to the snapshot.
      tags:
        - Environments
      operationId: compatible_repositories_by_snapshot
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: snapshot_compatible_repositories_parameter
              $ref: '#/components/schemas/SnapshotCompatibleRepositoryRequest'
        description: The request to get compatible repositories for provisioning a new VDB by snapshot.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SnapshotCompatibleEnvironmentsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Environment'
  /environments/compatible_repositories_by_timestamp:
    post:
      summary: Get compatible repositories corresponding to the timestamp.
      tags:
        - Environments
      operationId: compatible_repositories_by_timestamp
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: timestamp_compatible_repositories_parameter
              $ref: '#/components/schemas/TimestampCompatibleRepositoryRequest'
        description: The request to get compatible repositories for provisioning a new VDB by timestamp.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: TimestampCompatibleEnvironmentsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Environment'
  /environments/compatible_repositories_from_bookmark:
    post:
      summary: Get compatible repositories corresponding to the bookmark.
      tags:
        - Environments
      operationId: compatible_repositories_from_bookmark
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: bookmark_compatible_repositories_parameter
              $ref: '#/components/schemas/BookmarkCompatibleRepositoryRequest'
        description: The request to get compatible repositories for provisioning a new VDB by bookmark.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: BookmarkCompatibleEnvironmentsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Environment'
  /environments/compatible_repositories_by_location:
    post:
      summary: Get compatible repositories corresponding to the location.
      tags:
        - Environments
      operationId: compatible_repositories_by_location
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: location_compatible_repositories_parameter
              $ref: '#/components/schemas/LocationCompatibleRepositoryRequest'
        description: The request to get compatible repositories for provisioning a new VDB by location.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: LocationCompatibleEnvironmentsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Environment'
  /environments/{environmentId}/repository/{repositoryId}:
    parameters:
      - $ref: '#/components/parameters/environmentIdParam'
      - $ref: '#/components/parameters/repositoryIdParam'
    patch:
      tags:
        - Environments
      summary: Update a Repository.
      operationId: update_repository
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_repository_parameters
              $ref: "#/components/schemas/UpdateRepositoryParameters"
        required: true
      responses:
        '202':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UpdateRepositoryResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /environments/{environmentId}/hosts:
    parameters:
      - $ref: '#/components/parameters/environmentIdParam'
    post:
      tags:
        - Environments
      summary: Create a new Host.
      operationId: create_host
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: create_host_parameters
              $ref: "#/components/schemas/HostCreateParameters"
        required: true
      responses:
        '201':
          description: Host Creation initiated
          content:
            application/json:
              schema:
                type: object
                title: CreateHostResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
                  cluster_node_id:
                    type: string
                    description: The id of the created cluster node.
                    example: ORACLE_CLUSTER_NODE-7

  /environments/{environmentId}/hosts/{hostId}:
    parameters:
      - $ref: '#/components/parameters/environmentIdParam'
      - $ref: '#/components/parameters/hostIdParam'
    patch:
      tags:
        - Environments
      summary: Update a Host.
      operationId: update_host
      requestBody:
        $ref: "#/components/requestBodies/UpdateHost"
      responses:
        '202':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UpdateHostResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
    delete:
      tags:
        - Environments
      summary: Delete a Host.
      operationId: delete_host
      responses:
        '202':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: DeleteHostResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.

  /environments/{environmentId}/tags:
    parameters:
      - $ref: '#/components/parameters/environmentIdParam'
    post:
      tags:
        - Environments
      summary: Create tags for an Environment.
      operationId: create_environment_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: environment_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Environment.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - Environments
      summary: Get tags for an Environment.
      operationId: get_tags_environment
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /environments/{environmentId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/environmentIdParam'
    post:
      tags:
        - Environments
      summary: Delete tags for an Environment.
      operationId: delete_environment_tags
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
      responses:
        '204':
          description: No Content
  /environments/{environmentId}:
    parameters:
      - $ref: '#/components/parameters/environmentIdParam'
    get:
      summary: Returns an environment by ID.
      operationId: get_environment_by_id
      tags:
        - Environments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
    delete:
      summary: Delete an environment by ID.
      operationId: delete_environment
      tags:
        - Environments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: DeleteEnvironmentResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
    patch:
      summary: Update an environment by ID.
      operationId: update_environment
      tags:
        - Environments
      requestBody:
        $ref: "#/components/requestBodies/UpdateEnvironment"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UpdateEnvironmentResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /environments/search:
    post:
      summary: Search for environments.
      operationId: search_environments
      tags:
        - Environments
      x-filterable:
        fields:
          name:
            type: string
          namespace:
            type: string
          is_cluster:
            type: boolean
          cluster_home:
            type: string
          is_windows_target:
            type: boolean
          staging_environment:
            type: string
          enabled:
            type: boolean
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
          hosts:
            type: array[object]
            fields:
              hostname:
                type: string
              os_name:
                type: string
              os_version:
                type: string
              memory_size:
                type: integer
              available:
                type: boolean
              available_timestamp:
                type: string
              not_available_reason:
                type: string
              nfs_addresses:
                type: array[string]
              dsp_keystore_alias:
                type: string
              dsp_keystore_path:
                type: string
              dsp_truststore_path:
                type: string
              java_home:
                type: string
              ssh_port:
                type: integer
              toolkit_path:
                type: string
              oracle_tde_keystores_root_path:
                type: string
              processor_type:
                type: string
              timezone:
                type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
          repositories:
            type: array[object]
            fields:
              id:
                type: string
              name:
                type: string
              database_type:
                type: string
              allow_provisioning:
                type: boolean
              is_staging:
                type: boolean
              oracle_base:
                type: string
              version:
                type: string
              bits:
                type: integer
              install_group:
                type: string
              install_user:
                type: string
              rac:
                type: boolean
              ports:
                type: array[integer]
              dump_history_file:
                type: string
              page_size:
                type: integer
              owner:
                type: string
              installation_path:
                type: string
              fulltext_installed:
                type: boolean
              internal_version:
                type: integer
              mssql_cluster_instance_name:
                type: array[string]
              mssql_cluster_instance_version:
                type: array[string]
              installation_home:
                type: string
          listeners:
            type: array[object]
            fields:
              id:
                type: string
              namespace:
                type: string
              name:
                type: string
              client_endpoints:
                type: array[string]
              is_discovered:
                type: boolean
              host_id:
                type: string
              protocol_addresses:
                type: array[string]
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/envSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchEnvironmentsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Environment'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /environments/{environmentId}/enable:
    parameters:
      - $ref: '#/components/parameters/environmentIdParam'
    post:
      tags:
        - Environments
      summary: Enable a disabled environment.
      operationId: enable_environment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: EnableEnvironmentResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /environments/{environmentId}/disable:
    parameters:
      - $ref: '#/components/parameters/environmentIdParam'
    post:
      tags:
        - Environments
      summary: Disable environment.
      operationId: disable_environment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: DisableEnvironmentResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /environments/{environmentId}/refresh:
    parameters:
      - $ref: '#/components/parameters/environmentIdParam'
    post:
      tags:
        - Environments
      summary: Refresh environment.
      operationId: refresh_environment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: RefreshEnvironmentResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /environments/{environmentId}/users:
    parameters:
      - $ref: '#/components/parameters/environmentIdParam'
    post:
      tags:
        - Environments
      summary: Create environment user.
      operationId: create_environment_user
      requestBody:
        $ref: '#/components/requestBodies/CreateEnvironmentUserBody'
      responses:
        '201':
          description: Environment user created
          content:
            application/json:
              schema:
                type: object
                title: CreateEnvironmentUserResponse
                properties:
                  user_ref:
                    type: string
                    description: The reference of the created environment user
                    example: user-reference-1
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
    get:
      tags:
        - Environments
      summary: List environment users.
      operationId: list_environment_users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ListEnvironmentUsers'
  /environments/{environmentId}/users/{userRef}:
    parameters:
      - $ref: '#/components/parameters/environmentIdParam'
      - $ref: '#/components/parameters/userRefParam'
    put:
      tags:
        - Environments
      summary: Update environment user.
      operationId: update_environment_user
      requestBody:
        $ref: '#/components/requestBodies/CreateEnvironmentUserBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UpdateEnvironmentUserResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
    delete:
      tags:
        - Environments
      summary: Delete environment user.
      operationId: delete_environment_user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: DeleteEnvironmentUserResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /environments/{environmentId}/users/{userRef}/primary:
    parameters:
      - $ref: '#/components/parameters/environmentIdParam'
      - $ref: '#/components/parameters/userRefParam'
    post:
      tags:
        - Environments
      summary: Set primary environment user.
      operationId: primary_environment_user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: PrimaryEnvironmentUserResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /hyperscale-instances:
    post:
      tags:
        - HyperscaleInstance
      summary: Register a Hyperscale instance
      operationId: register_hyperscale_instance
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: hyperscale_instance
              $ref: "#/components/schemas/HyperscaleInstanceRegistrationParameter"
        description: The parameters to register a Hyperscale instance.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/HyperscaleInstance'
    get:
      tags:
        - HyperscaleInstance
      summary: Returns a list of Hyperscale instances.
      operationId: get_hyperscale_instances
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/hyperscaleInstancesSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListHyperscaleInstancesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleInstance'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /hyperscale-instances/search:
    post:
      summary: Search for Hyperscale instances.
      operationId: search_hyperscale_instances
      tags:
        - HyperscaleInstance
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          hostname:
            type: string
          creation_date:
            type: string
          data_type:
            type: string
          insecure_ssl:
            type: boolean
          unsafe_ssl_hostname_check:
            type: boolean
          truststore_filename:
            type: string
          status:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/hyperscaleInstancesSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchHyperscaleInstancesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleInstance'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /hyperscale-instances/{hyperscaleInstanceId}:
    parameters:
      - $ref: "#/components/parameters/hyperscaleInstanceId"
    get:
      tags:
        - HyperscaleInstance
      summary: Returns a Hyperscale Instance by ID.
      operationId: get_hyperscale_instance_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/HyperscaleInstance'
    patch:
      tags:
        - HyperscaleInstance
      summary: Update an Hyperscale Instance
      operationId: update_hyperscale_instance
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: hyperscale_instance_update_params
              $ref: "#/components/schemas/HyperscaleInstanceUpdateParams"
        description: Update parameters for a hyperscale instance.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/HyperscaleInstance'
    delete:
      tags:
        - HyperscaleInstance
      summary: Unregister a Hyperscale Instance.
      operationId: unregister_hyperscale_instance
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UnregisterHyperscaleInstanceResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /hyperscale-instances/{hyperscaleInstanceId}/tags:
    parameters:
      - $ref: '#/components/parameters/hyperscaleInstanceId'
    post:
      tags:
        - HyperscaleInstance
      summary: Create tags for a Hyperscale Instance.
      operationId: create_hyperscale_instance_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: hyperscale_instance_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Hyperscale Instance.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - HyperscaleInstance
      summary: Get tags for a Hyperscale Instance.
      operationId: get_hyperscale_instance_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /hyperscale-instances/{hyperscaleInstanceId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/hyperscaleInstanceId'
    post:
      tags:
        - HyperscaleInstance
      summary: Delete tags for a Hyperscale Instance.
      operationId: delete_hyperscale_instance_tags
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
      responses:
        '204':
          description: No Content
  /hyperscale-instances/{hyperscaleInstanceId}/sync-engines:
    parameters:
      - $ref: '#/components/parameters/hyperscaleInstanceId'
    post:
      tags:
        - HyperscaleInstance
      summary: Sync the global object from a source engine to engines on a Hyperscale Instance.
      operationId: sync_engines_hyperscale_instance
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: sync_engines_hyperscale_parameter
              $ref: "#/components/schemas/SyncEnginesHyperscaleParameters"
              required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SyncEnginesHyperscaleResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
  /hyperscale-instances/{hyperscaleInstanceId}/add-engine:
    parameters:
      - $ref: '#/components/parameters/hyperscaleInstanceId'
    post:
      tags:
        - HyperscaleInstance
      summary: Add an engine to a Hyperscale Instance.
      operationId: add_engine_to_hyperscale_instance
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: engine_id
              $ref: "#/components/schemas/EngineIdBody"
        description: Body containing the ID of the registered engine.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: AddEngineToHyperscaleResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
  /hyperscale-instances/{hyperscaleInstanceId}/remove-engine:
    parameters:
      - $ref: '#/components/parameters/hyperscaleInstanceId'
    post:
      tags:
        - HyperscaleInstance
      summary: Remove an engine from a Hyperscale Instance.
      operationId: remove_engine_from_hyperscale_instance
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: engine_id
              $ref: "#/components/schemas/EngineIdBody"
        description: Body containing the ID of the registered engine.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: RemoveEngineFromHyperscaleResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
  /hyperscale-mount-points:
    get:
      tags:
        - HyperscaleObjects
      summary: Returns a list of Hyperscale Mount Points.
      operationId: get_hyperscale_mount_points
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/hyperscaleMountPointsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListHyperscaleMountPointsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleMountPoint'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
    post:
      tags:
        - HyperscaleObjects
      summary: Create a Hyperscale Mount Point
      operationId: create_hyperscale_mount_point
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: hyperscale_mount_point
              $ref: "#/components/schemas/HyperscaleMountPoint"
        description: Request to create a Hyperscale Mount Point.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: CreateHyperscaleMountPointResponse
                properties:
                  id:
                    type: string
                    description: The created Hyperscale Mount Point's ID
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /hyperscale-mount-points/{hyperscaleMountPointId}:
    parameters:
      - $ref: '#/components/parameters/hyperscaleMountPointIdParam'
    get:
      tags:
        - HyperscaleObjects
      summary: Get a Hyperscale Mount Points.
      operationId: get_hyperscale_mount_point_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyperscaleMountPoint'
    patch:
      tags:
        - HyperscaleObjects
      summary: Update a Hyperscale Mount Point by ID.
      operationId: update_hyperscale_mount_point_by_id
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_hyperscale_mount_point_parameter
              $ref: '#/components/schemas/HyperscaleMountPointUpdateParameters'
        description: The new data to update a Hyperscale Mount Point.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UpdateHyperscaleMountPointResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    delete:
      tags:
        - HyperscaleObjects
      summary: Delete a Hyperscale Mount Point.
      operationId: delete_hyperscale_mount_point
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: DeleteHyperscaleMountPointResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /hyperscale-mount-points/search:
    post:
      summary: Search for Hyperscale Mount Points.
      operationId: search_hyperscale_mount_points
      tags:
        - HyperscaleObjects
      x-filterable:
        fields:
          id:
            type: string
          hyperscale_instance_id:
            type: string
          name:
            type: string
          hostname:
            type: string
          mount_type:
            type: string
          mount_path:
            type: string
          options:
            type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/hyperscaleMountPointsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchHyperscaleMountPointsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleMountPoint'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /hyperscale-connectors:
    get:
      tags:
        - HyperscaleObjects
      summary: Returns a list of Hyperscale Connectors.
      operationId: get_hyperscale_connectors
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/hyperscaleConnectorsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListHyperscaleConnectorsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleConnector'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
    post:
      tags:
        - HyperscaleObjects
      summary: Create a Hyperscale Connector.
      operationId: create_hyperscale_connector
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: hyperscale_connector
              $ref: '#/components/schemas/HyperscaleConnector'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: CreateHyperscaleConnectorResponse
                properties:
                  id:
                    type: string
                    description: The created Hyperscale Connector's ID.
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /hyperscale-connectors/{hyperscaleConnectorId}:
    parameters:
      - $ref: '#/components/parameters/hyperscaleConnectorIdParam'
    get:
      tags:
        - HyperscaleObjects
      summary: Get a Hyperscale Connector.
      operationId: get_hyperscale_connector_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyperscaleConnector'
    patch:
      tags:
        - HyperscaleObjects
      summary: Update a Hyperscale Connector by ID.
      operationId: update_hyperscale_connector_by_id
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_hyperscale_connector_parameter
              $ref: '#/components/schemas/HyperscaleConnectorUpdateParameters'
        description: The new data to update a Hyperscale Connector.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UpdateHyperscaleConnectorResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
    delete:
      tags:
        - HyperscaleObjects
      summary: Delete a Hyperscale Connector.
      operationId: delete_hyperscale_connector
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: DeleteHyperscaleConnectorResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /hyperscale-connectors/{hyperscaleConnectorId}/tags:
    parameters:
      - $ref: '#/components/parameters/hyperscaleConnectorIdParam'
    post:
      tags:
        - HyperscaleObjects
      summary: Create tags for a Hyperscale Connector.
      operationId: create_hyperscale_connector_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: hyperscale_connector_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tag information for a Hyperscale Connector.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - HyperscaleObjects
      summary: Get tags for a Hyperscale Connector.
      operationId: get_hyperscale_connector_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /hyperscale-connectors/{hyperscaleConnectorId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/hyperscaleConnectorIdParam'
    post:
      tags:
        - HyperscaleObjects
      summary: Delete tags for a Hyperscale Connector.
      operationId: delete_hyperscale_connector_tags
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
      responses:
        '204':
          description: No Content
  /hyperscale-connectors/search:
    post:
      summary: Search for Hyperscale Connectors.
      operationId: search_hyperscale_connectors
      tags:
        - HyperscaleObjects
      x-filterable:
        fields:
          id:
            type: string
          hyperscale_instance_id:
            type: string
          data_type:
            type: string
          source_username:
            type: string
          source_jdbc_url:
            type: string
          source_mongo_url:
            type: string
          source_filesystem_path:
            type: string
          target_username:
            type: string
          target_jdbc_url:
            type: string
          target_mongo_url:
            type: string
          target_filesystem_path:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/hyperscaleConnectorsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchHyperscaleConnectorsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleConnector'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /hyperscale-datasets:
    get:
      tags:
        - HyperscaleObjects
      summary: Returns a list of Hyperscale Datasets.
      operationId: get_hyperscale_datasets
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/hyperscaleDatasetsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListHyperscaleDatasetsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleDataset'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /hyperscale-datasets/{hyperscaleDatasetId}:
    parameters:
      - $ref: '#/components/parameters/hyperscaleDatasetIdParam'
    get:
      tags:
        - HyperscaleObjects
      summary: Get a Hyperscale Dataset.
      operationId: get_hyperscale_dataset_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyperscaleDataset'
    patch:
      tags:
        - HyperscaleObjects
      summary: Update a Hyperscale Dataset by ID.
      operationId: update_hyperscale_dataset_by_id
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_hyperscale_dataset_parameter
              $ref: '#/components/schemas/HyperscaleDatasetUpdateParameters'
        description: The new data to update a Hyperscale Dataset.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UpdateHyperscaleDatasetResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
  /hyperscale-datasets/{hyperscaleDatasetId}/tags:
    parameters:
      - $ref: '#/components/parameters/hyperscaleDatasetIdParam'
    post:
      tags:
        - HyperscaleObjects
      summary: Create tags for a Hyperscale Dataset.
      operationId: create_hyperscale_dataset_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: hyperscale_dataset_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tag information for a Hyperscale Dataset.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - HyperscaleObjects
      summary: Get tags for a Hyperscale Dataset.
      operationId: get_hyperscale_dataset_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /hyperscale-datasets/{hyperscaleDatasetId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/hyperscaleDatasetIdParam'
    post:
      tags:
        - HyperscaleObjects
      summary: Delete tags for a Hyperscale Dataset.
      operationId: delete_hyperscale_dataset_tags
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
      responses:
        '204':
          description: No Content
  /hyperscale-datasets/{hyperscaleDatasetId}/tables-or-files/{hyperscaleDatasetTableOrFileId}:
    parameters:
      - $ref: '#/components/parameters/hyperscaleDatasetIdParam'
      - $ref: '#/components/parameters/hyperscaleDatasetTableOrFileIdParam'
    get:
      tags:
        - HyperscaleObjects
      summary: Get a Hyperscale Dataset table or file by ID.
      operationId: get_hyperscale_dataset_table_or_file_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HyperscaleDatasetTableOrFile'
    patch:
      tags:
        - HyperscaleObjects
      summary: Update a Hyperscale Dataset table or file by ID.
      operationId: update_hyperscale_dataset_table_or_file_by_id
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_hyperscale_dataset_table_or_file_parameter
              $ref: '#/components/schemas/HyperscaleDatasetTableOrFileUpdateParameters'
        description: The new data to update a Hyperscale Dataset table or file.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UpdateHyperscaleDatasetTableOrFileResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
  /hyperscale-datasets/{hyperscaleDatasetId}/tables-or-files:
    parameters:
      - $ref: '#/components/parameters/hyperscaleDatasetIdParam'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/hyperscaleDatasetTablesOrFilesSortParam'
    get:
      tags:
        - HyperscaleObjects
      summary: Get the tables or files of a hyperscale dataset
      operationId: get_hyperscale_dataset_tables_or_files
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListHyperscaleDatasetTablesOrFilesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleDatasetTableOrFile'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /hyperscale-datasets/{hyperscaleDatasetId}/tables-or-files/search:
    parameters:
      - $ref: '#/components/parameters/hyperscaleDatasetIdParam'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/cursor'
      - $ref: '#/components/parameters/hyperscaleDatasetTablesOrFilesSortParam'
    post:
      tags:
        - HyperscaleObjects
      x-filterable:
        fields:
          id:
            type: string
          schema_name:
            type: string
          table_name:
            type: string
          filter_key:
            type: string
          column_array_rows:
            type: integer
          unload_split:
            type: integer
          stream_size:
            type: integer
          masking_inventory:
            type: array[object]
            fields:
              field_name:
                type: string
              domain_name:
                type: string
              algorithm_name:
                type: string
              date_format:
                type: string
              algorithm_field_name:
                type: string
              algorithm_group_no:
                type: integer
      summary: Search the tables or files of a hyperscale dataset
      operationId: search_hyperscale_dataset_tables_or_files
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchHyperscaleDatasetTablesOrFilesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleDatasetTableOrFile'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /hyperscale-datasets/search:
    post:
      summary: Search for Hyperscale Datasets.
      operationId: search_hyperscale_datasets
      tags:
        - HyperscaleObjects
      x-filterable:
        fields:
          id:
            type: string
          hyperscale_instance_id:
            type: string
          data_type:
            type: string
          mount_point_id:
            type: string
          connector_id:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/hyperscaleDatasetsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchHyperscaleDatasetsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HyperscaleDataset'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /management/engines:
    post:
      tags:
        - Management
      summary: Register an engine.
      operationId: register_engine
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: registered_engine
              $ref: "#/components/schemas/EngineRegistrationParameter"
        description: The parameters to register an engine.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/RegisteredEngine'
    get:
      tags:
        - Management
      summary: Returns a list of registered engines.
      operationId: get_registered_engines
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/engineSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListRegisteredEnginesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/RegisteredEngine'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"

  /jobs:
    get:
      summary: List all jobs.
      operationId: get_jobs
      tags:
        - Jobs
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/jobsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListJobsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
                  errors:
                    $ref: '#/components/schemas/Errors'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /jobs/search:
    post:
      summary: Search for jobs.
      operationId: search_jobs
      tags:
        - Jobs
      x-filterable:
        fields:
          id:
            type: string
          status:
            type: string
          type:
            type: string
          localized_type:
            type: string
          target_id:
            type: string
          target_name:
            type: string
          start_time:
            type: string
          update_time:
            type: string
          error_details:
            type: string
          trace_id:
            type: string
          engine_ids:
            type: array[string]
            deprecated: true
          engines:
            type: array[object]
            fields:
              engine_id:
                type: string
              engine_name:
                type: string
          account_id:
            type: int
          account_name:
            type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/jobsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchJobsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /jobs/{jobId}:
    parameters:
      - in: path
        name: jobId
        schema:
          type: string
          minLength: 1
        required: true
        description: The ID of the job.
    get:
      summary: Returns a job by ID.
      operationId: get_job_by_id
      tags:
        - Jobs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
  /jobs/{jobId}/abandon:
    parameters:
      - in: path
        name: jobId
        schema:
          type: string
          minLength: 1
        required: true
        description: The ID of the job.
    post:
      summary: Abandons a job.
      description: >
        Abandoning a job means that the system will no longer track ongoing
        progress. The system will not attempt to stop the process in any way.
        The job will be moved to the ABANDONED terminal state.
      operationId: abandon_job
      tags:
        - Jobs
      responses:
        '204':
          description: No Content
  /jobs/{jobId}/tags:
    parameters:
      - in: path
        name: jobId
        schema:
          type: string
          minLength: 1
        required: true
        description: The ID of the job.
    post:
      tags:
        - Jobs
      summary: Create tags for a Job.
      operationId: create_job_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: job_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Job.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - Jobs
      summary: Get tags for a Job.
      operationId: get_job_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /jobs/{jobId}/tags/delete:
    parameters:
      - in: path
        name: jobId
        schema:
          type: string
          minLength: 1
        required: true
        description: The ID of the job.
    post:
      tags:
        - Jobs
      summary: Delete tags for a Job.
      operationId: delete_job_tag
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
        required: false
      responses:
        '204':
          description: No Content
  /management/engines/{engineId}:
    parameters:
      - $ref: "#/components/parameters/engineIdParam"
    get:
      tags:
        - Management
      summary: Returns a registered engine by ID.
      operationId: get_registered_engine
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/RegisteredEngine'
    put:
      tags:
        - Management
      summary: Update a registered engine.
      operationId: update_registered_engine
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: registered_engine
              $ref: "#/components/schemas/RegisteredEngine"
        description: The updated registration engine information.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/RegisteredEngine'
    patch:
      tags:
        - Management
      summary: Update a registered engine.
      operationId: update_registered_engine_partial
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: registered_engine
              $ref: "#/components/schemas/RegisteredEngine"
        description: The updated registration engine information.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/RegisteredEngine'
    delete:
      tags:
        - Management
      summary: Unregister an engine.
      operationId: unregister_engine
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: DeleteEngineResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /management/engines/search:
    post:
      summary: Search for engines.
      operationId: search_engines
      tags:
        - Management
      x-filterable:
        fields:
          id:
            type: string
          uuid:
            type: string
          ssh_public_key:
            type: string
          type:
            type: string
          version:
            type: string
          name:
            type: string
          hostname:
            type: string
          cpu_core_count:
            type: integer
          memory_size:
            type: integer
          data_storage_capacity:
            type: integer
          data_storage_used:
            type: integer
          insecure_ssl:
            type: boolean
          unsafe_ssl_hostname_check:
            type: boolean
          truststore_filename:
            type: string
          hyperscale_truststore_filename:
            type: string
          status:
            type: string
          username:
            type: string
          hashicorp_vault_id:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
          connection_status:
            type: string
          connection_status_details:
            type: string
          engine_connection_status:
            type: string
          engine_connection_status_details:
            type: string
          masking_memory_used:
            type: integer
          masking_allocated_memory:
            type: integer
          masking_jobs_running:
            type: integer
          masking_max_concurrent_jobs:
            type: integer
          masking_available_cores:
            type: integer
          hyperscale_instance_ids:
            type: array[string]
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/engineSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchEnginesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/RegisteredEngine'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /management/engines/{engineId}/tags:
    parameters:
      - $ref: '#/components/parameters/engineIdParam'
    post:
      tags:
        - Management
      summary: Create tags for an Engine.
      operationId: create_engine_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: engine_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Engine.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - Management
      summary: Get tags for a Engine.
      operationId: get_engine_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /management/engines/{engineId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/engineIdParam'
    post:
      tags:
        - Management
      summary: Delete tags for an Engine.
      operationId: delete_engine_tags
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
      responses:
        '204':
          description: No Content
  /management/vaults/hashicorp:
    get:
      tags:
        - Management
      summary: Returns a list of configured Hashicorp vaults.
      operationId: get_hashicorp_vaults
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/hashicorpVaultsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListHashicorpVaultsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HashicorpVault'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
    post:
      tags:
        - Management
      summary: Configure a new Hashicorp Vault
      operationId: create_hashicorp_vault
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: hashicorp_vault
              $ref: "#/components/schemas/HashicorpVault"
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/HashicorpVault'
  /management/vaults/hashicorp/search:
    post:
      tags:
        - Management
      summary: Search for configured Hashicorp vaults.
      operationId: search_hashicorp_vaults
      x-filterable:
        fields:
          id:
            type: integer
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/hashicorpVaultsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchHashicorpVaultsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/HashicorpVault'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /management/vaults/hashicorp/{vaultId}:
    parameters:
      - in: path
        name: vaultId
        schema:
          type: integer
          format: int64
        required: true
        description: Numeric ID of the Hashicorp vault
    get:
      tags:
        - Management
      summary: Get a Hashicorp vault by id
      operationId: get_hashicorp_vault
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/HashicorpVault'
    delete:
      tags:
        - Management
      summary: Delete a Hashicorp vault by id
      operationId: delete_hashicorp_vault
      responses:
        '204':
          description: No Content
  /management/vaults/hashicorp/{vaultId}/tags:
    parameters:
      - in: path
        name: vaultId
        schema:
          type: integer
          format: int64
        required: true
        description: Numeric ID of the Hashicorp vault
    post:
      tags:
        - Management
      summary: Create tags for a Hashicorp vault.
      operationId: create_hashicorp_vault_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: hashicorp_vault_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Hashicorp vault.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - Management
      summary: Get tags for a Hashicorp vault.
      operationId: get_hashicorp_vault_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /management/vaults/hashicorp/{vaultId}/tags/delete:
    parameters:
      - in: path
        name: vaultId
        schema:
          type: integer
          format: int64
        required: true
        description: Numeric ID of the Hashicorp vault
    post:
      tags:
        - Management
      summary: Delete tags for a Hashicorp vault.
      operationId: delete_hashicorp_vault_tag
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
        required: false
      responses:
        '204':
          description: No Content
  /management/accounts:
    get:
      summary: Returns a list of Accounts
      operationId: get_accounts
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/accountsSortParam'
      tags:
        - Accounts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListAccountsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
    post:
      tags:
        - Accounts
      summary: |
        Create a new Account
      operationId: create_account
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: account
              $ref: "#/components/schemas/AccountCreateParameter"
        required: true
      responses:
        '201':
          description: The created Account id and if requested the generated API key token.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/AccountCreateResponse'
  /management/accounts/{id}:
    parameters:
      - $ref: '#/components/parameters/accountIdParam'
    get:
      tags:
        - Accounts
      summary: Get an Account by id
      operationId: get_account
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Account'
    put:
      summary: |
        Update an Account
      tags:
        - Accounts
      operationId: update_account
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: account
              $ref: "#/components/schemas/AccountUpdateParameter"
        required: true
      responses:
        '200':
          description: Returns the updated Account.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Account'
    delete:
      tags:
        - Accounts
      summary: Delete an Account
      operationId: delete_account
      responses:
        '204':
          description: No Content
  /management/accounts/{id}/enable:
    parameters:
      - $ref: '#/components/parameters/accountIdParam'
    post:
      tags:
        - Accounts
      summary: Enable an Account.
      operationId: enable_account
      responses:
        '200':
          description: OK
  /management/accounts/{id}/disable:
    parameters:
      - $ref: '#/components/parameters/accountIdParam'
    post:
      tags:
        - Accounts
      summary: Disable an Account.
      operationId: disable
      responses:
        '200':
          description: OK
  /management/accounts/{id}/change_password:
    parameters:
      - $ref: '#/components/parameters/accountIdParam'
    post:
      summary: |
        Change Account Password.
      tags:
        - Accounts
      operationId: change_account_password
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: changePasswordParameter
              $ref: "#/components/schemas/ChangePasswordParameter"
        required: true
      responses:
        '204':
          description: Password changed.
  /management/accounts/{id}/reset_password:
    parameters:
      - $ref: '#/components/parameters/accountIdParam'
    post:
      summary: |
        Reset Account Password.
      tags:
        - Accounts
      operationId: reset_account_password
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: account
              $ref: "#/components/schemas/ResetPasswordParameter"
        required: true
      responses:
        '204':
          description: Password reset.
  /management/accounts/{id}/tags:
    parameters:
      - $ref: '#/components/parameters/accountIdParam'
    post:
      tags:
        - Accounts
      summary: Create tags for an Account.
      operationId: create_account_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: account_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Account.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - Accounts
      summary: Get tags for an Account.
      operationId: get_account_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /management/accounts/{id}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/accountIdParam'
    post:
      tags:
        - Accounts
      summary: Delete tags for an Account.
      operationId: delete_account_tags
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
      responses:
        '204':
          description: No Content
  /management/accounts/password-policies:
    get:
      tags:
        - Accounts
      summary: Returns the password policies
      operationId: get_password_policies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PasswordPoliciesParams'
    patch:
      tags:
        - Accounts
      summary: Update password policies.
      operationId: update_password_policies
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: password_policies
              $ref: "#/components/schemas/PasswordPoliciesParams"
        description: The parameters to update the password policies.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PasswordPoliciesParams'
  /management/properties:
    patch:
      tags:
        - Management
      summary: Update value of predefined properties.
      operationId: update_properties
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: global_properties
              $ref: "#/components/schemas/GlobalProperties"
        description: The parameters to update property value.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/GlobalProperties'
    get:
      tags:
        - Management
      summary: Get global properties.
      operationId: list_properties
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/GlobalProperties'
  /management/api-classification:
    put:
      tags:
        - Management
      summary: Update the api classification to new version.
      operationId: update_api_classification
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: api_classification_config
              $ref: "#/components/schemas/APIClassificationConfig"
        description: Request to update api classification config.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/APIClassificationConfig'
    get:
      tags:
        - Management
      summary: Get api classification.
      operationId: get_api_classification
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/APIClassificationConfig'
  /management/engines/{engineId}/validate/java-path:
    parameters:
      - $ref: "#/components/parameters/engineIdParam"
    post:
      tags:
        - Management
      summary: Validate java path for the remote host machine.
      operationId: validate_java_path
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: validate_java_path
              $ref: "#/components/schemas/ValidateJavaParameters"
        description: The api to check connectivity of engine and a remote host on given port.
        required: true
      responses:
        '200':
          description: OK
  /login:
    post:
      summary: |
        Login to Account with Username and Password
      tags:
        - Login
      operationId: account_login
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: account
              $ref: "#/components/schemas/AccountLoginParameter"
        required: true
      responses:
        '200':
          description: Account Login Successful
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/LoginToken'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: invalid_credentials
                error_description: error-message-goes-here
  /logout:
    post:
      summary: Invalidates username/password and SSO login session.
      tags:
        - Login
      operationId: account_logout
      parameters:
        - in: header
          name: Authorization
          required: true
          description: Access token
          schema:
            type: string
      responses:
        '200':
          description: Logged out
  /management/accounts/search:
    post:
      summary: Search for Accounts.
      operationId: search_accounts
      tags:
        - Accounts
      x-filterable:
        fields:
          id:
            type: string
          first_name:
            type: string
          last_name:
            type: string
          email:
            type: string
          username:
            type: string
          last_access_time:
            type: string
          creation_time:
            type: string
          enabled:
            type: boolean
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/accountsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchAccountsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /token-info:
    post:
      summary: |
        Get Token Information
      tags:
        - Login
      operationId: token_info
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: token
              $ref: "#/components/schemas/TokenInfoRequest"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/TokenInfoResponse'
              example:
                active: true
                token_type: Bearer
                account_id: 1
                first_name: first-name
                last_name: last-name
                email: abc@example.com
                username: user-name
                exp: 400
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: invalid-token
                error_description: error-message-goes-here
  /is-saml-enabled:
    get:
      summary: |
        Check if SAML is enabled
      tags:
        - SamlLogin
      operationId: checkSaml
      responses:
        '200':
          description: SAML is enabled
        '400':
          description: SAML is not enabled
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: failed
                error_description: error-message-goes-here
  /management/smtp:
    get:
      tags:
        - Management
      summary: Returns the SMTP configuration
      operationId: get_smtp_config
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SMTPConfigParams'
    put:
      tags:
        - Management
      summary: Update SMTP Config.
      operationId: update_smtp_config
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: smtp_config
              $ref: "#/components/schemas/SMTPConfigParams"
        description: The parameters to update the SMTP config.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SMTPConfigParams'
  /management/smtp/validate:
    post:
      tags:
        - Management
      summary: Validate SMTP Config.
      operationId: validate_smtp_config
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: validate_smtp_config
              $ref: "#/components/schemas/SMTPConfigValidate"
        description: The parameters to validate the SMTP config.
        required: true
      responses:
        '200':
          description: OK
  /management/metadata-database:
    get:
      tags:
        - Management
      summary: Returns configuration information about the metadata database which stores the product data.
      operationId: get_metadata_database
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/MetadataDbInfo'
  /management/ldap-config:
    get:
      tags:
        - Management
      summary: Returns the LDAP configuration
      operationId: get_ldap_config
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/LDAPConfigParams'
    put:
      tags:
        - Management
      summary: Update LDAP Config.
      operationId: update_ldap_config
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: ldap_config
              $ref: "#/components/schemas/LDAPConfigParams"
        description: The parameters to update the LDAP config.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/LDAPConfigParams'
  /management/ldap-config/validate:
    post:
      tags:
        - Management
      summary: Validate LDAP Config. Without username/password, DCT performs an anonymous bind against the LDAP server.
               If credentials are provided DCT validates that authentication and mapping of optional properties are actually working with provided credentials.
               LDAP search is only validated if search attributes are set.
      operationId: validate_ldap_config
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: ldap_config_validate
              $ref: "#/components/schemas/LdapConfigValidateParameter"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: LdapValidateResponse
                properties:
                  message:
                    description: Validation message for LDAP config.
                    type: string
                    minLength: 1
  /management/saml-config:
    get:
      tags:
        - Management
      summary: Returns the SAML configuration
      operationId: get_saml_config
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SAMLConfigParams'
    put:
      tags:
        - Management
      summary: Update SAML Config.
      operationId: update_saml_config
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: saml_config
              $ref: "#/components/schemas/SAMLConfigParams"
        description: The parameters to update the SAML config.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/SAMLConfigParams'

  /management/proxy:
    get:
      tags:
        - Management
      summary: Returns the current web proxy configuration to use to connect to Delphix services.
      operationId: get_proxy_configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/ProxyConfiguration"
    put:
      tags:
        - Management
      summary: Update the web proxy configuration to use to connect to Delphix services.
      operationId: update_proxy_configuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProxyConfiguration"
      responses:
        "200":
          description: Update the web proxy configuration to use to connect to Delphix services
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/ProxyConfiguration"

  /management/product-registration-delphix-connectivity-check:
    get:
      tags:
        - Management
      summary: Returns True if Delphix services are reachable for product registration.
      operationId: get_product_registration_delphix_connectivity_check
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                description: True if the Delphix services are reachable for product registration, False otherwise.

  /management/product-registration-status:
    get:
      tags:
        - Management
      summary: Returns the product registration status.
      operationId: get_product_registration_status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                description: True if the DCT is registered, False otherwise.

  /management/product-registration-offline:
    get:
      tags:
        - Management
      summary: Generates and returns a public key that can be used to register the product.
      operationId: get_product_registration_key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                description: The key to register the product with.
    post:
      tags:
        - Management
      summary: Registers the product using a manually generated payload.
      operationId: register_product_offline
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/ProductRegistrationOfflinePayload"
      responses:
        '204':
          description: No Content

  /management/product-registration-online:
    post:
      tags:
        - Management
      summary: Registers the product using the provided credentials.
      operationId: register_product_online
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/ProductRegistrationOnlinePayload"
      responses:
        '204':
          description: No Content

  /reporting/audit-logs-summary-report:
    get:
      summary: Gets the audit log summary report.
      tags:
        - Reporting
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/auditLogsSummaryReportSortParam'
      operationId: get_audit_logs_summary_report
      responses:
        "200":
          description: Returns a list of aggregated audit log entries for each account.
          content:
            application/json:
              schema:
                type: object
                title: AuditLogsSummaryReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/AuditLogsSummary"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
                  totals:
                    $ref: "#/components/schemas/AuditLogsSummaryTotals"
            text/csv:
              schema:
                type: string
                example: |
                  account_id,account_first_name,account_last_name,vdb_refreshes,masking_jobs
                  1,FirstName1,LastName1,10,4
                  2,FirstName2,LastName2,7,3
                  total_vdb_refreshes,total_masking_jobs
                  17,7
  /reporting/virtualization-storage-summary-report:
    get:
      summary: Gets the storage summary report for virtualization engines.
      tags:
        - Reporting
      operationId: get_virtualization_storage_summary_report
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/virtualizationStorageReportSortParam'
      responses:
        "200":
          description: Returns a list of storage summary data of virtualization engines.
          content:
            application/json:
              schema:
                type: object
                title: VirtualizationStorageSummaryReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/VirtualizationStorageSummaryData"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
            text/csv:
              schema:
                type: string
                example: |
                  engine_id,engine_name,engine_hostname,total_capacity,free_storage,used_storage,used_percentage,dsource_count,vdb_count,total_object_count
                  1,my-engine,"eng01.dev.delphix.com",23404216320,20896169984,2508046336,10.71,5,25,30
  /reporting/virtualization-storage-summary-report/search:
    post:
      summary: Search the storage summary report for virtualization engines.
      tags:
        - Reporting
      x-filterable:
        fields:
          engine_id:
            type: string
          engine_name:
            type: string
          engine_hostname:
            type: string
          total_capacity:
            type: integer
          free_storage:
            type: integer
          used_storage:
            type: integer
          used_percentage:
            type: number
          dsource_count:
            type: integer
          vdb_count:
            type: integer
          total_object_count:
            type: integer
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/virtualizationStorageReportSortParam'
      operationId: search_virtualization_storage_summary_report
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        "200":
          description: Returns a list of storage summary data of virtualization engines.
          content:
            application/json:
              schema:
                type: object
                title: VirtualizationStorageSummaryReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/VirtualizationStorageSummaryData"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
            text/csv:
              schema:
                type: string
                example: |
                  engine_id,engine_name,engine_hostname,total_capacity,free_storage,used_storage,used_percentage,dsource_count,vdb_count,total_object_count
                  1,my-engine,"eng01.dev.delphix.com",23404216320,20896169984,2508046336,10.71,5,25,30
  /reporting/storage-savings-report/search:
    post:
      summary: Search the saving storage summary report for virtualization engines.
      tags:
        - Reporting
      x-filterable:
        fields:
          dsource_id:
            type: string
          dependant_vdbs:
            type: integer
          engine_name:
            type: string
          unvirtualized_space:
            type: integer
          virtualized_space:
            type: integer
          name:
            type: string
          estimated_savings:
            type: integer
          estimated_savings_perc:
            type: number
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/storageSavingsReportSortParam'
      operationId: search_storage_savings_summary_report
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        "200":
          description: Returns a list of saving storage summary data of virtualization engines.
          content:
            application/json:
              schema:
                type: object
                title: StorageSavingsSummaryReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/StorageSavingsSummaryData"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
                  summarized_data:
                    $ref: "#/components/schemas/StorageSavingsReportSummarizedData"
            text/csv:
              schema:
                type: string
                example: |
                  dsource_id,dependant_vdbs,engine_name,unvirtualized_space,virtualized_space,name,estimated_savings,estimated_savings_perc
                  2-MSSQL_DB_CONTAINER-1.1,my-engine,23404216320,20896169984,testdb,524496896,99.70111311277408
  /reporting/vdb-inventory-report:
    get:
      summary: Gets the inventory report for virtualization engine VDBs.
      tags:
        - Reporting
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/vdbInventoryReportSortParam'
      operationId: get_vdb_inventory_report
      responses:
        "200":
          description: Returns a list of inventory data of VDBs.
          content:
            application/json:
              schema:
                type: object
                title: VDBInventoryReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/VDBInventoryData"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
            text/csv:
              schema:
                type: string
                example: |
                  engine_name,name,type,version,parent_name,parent_id,creation_date,parent_timeflow_location,parent_timeflow_timestamp,parent_timeflow_timezone,enabled,status,storage_size
                  engine1,VDB-1,Oracle,10.2.0.5,dSource 1,1-Container-1,2022-01-07T12:06:59.157Z,54321,2022-02-07T12:03:15.821Z,"America/New_York",EDT-0400,true,Running,123456
  /reporting/vdb-inventory-report/search:
    post:
      summary: Search the inventory report for virtualization engine VDBs.
      tags:
        - Reporting
      x-filterable:
        fields:
          name:
            type: string
          type:
            type: string
          version:
            type: string
          parent_name:
            type: string
          parent_id:
            type: string
          creation_date:
            type: string
          last_refreshed_date:
            type: string
          parent_timeflow_location:
            type: string
          parent_timeflow_timestamp:
            type: string
          parent_timeflow_timezone:
            type: string
          enabled:
            type: boolean
          status:
            type: string
          engine_name:
            type: string
          storage_size:
            type: string
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/vdbInventoryReportSortParam'
      operationId: search_vdb_inventory_report
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        "200":
          description: Returns a list of inventory data of VDBs.
          content:
            application/json:
              schema:
                type: object
                title: VDBInventoryReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/VDBInventoryData"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
            text/csv:
              schema:
                type: string
                example: |
                  engine_name,name,type,version,parent_name,parent_id,creation_date,parent_timeflow_location,parent_timeflow_timestamp,parent_timeflow_timezone,enabled,status
                  engine1,VDB-1,Oracle,10.2.0.5,dSource 1,1-Container-1,2022-01-07T12:06:59.157Z,54321,2022-02-07T12:03:15.821Z,"America/New_York",EDT-0400,true,Running
  /reporting/dsource-usage-report:
    get:
      summary: Gets the usage report for virtualization engine dSources.
      tags:
        - Reporting
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/dSourceUsageReportSortParam'
      operationId: get_dsource_usage_report
      responses:
        "200":
          description: Returns a list of dSource usage data.
          content:
            application/json:
              schema:
                type: object
                title: DSourceUsageReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/DSourceUsageData"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
            text/csv:
              schema:
                type: string
                example: |
                  engine_name,name,unvirtualized_space,actual_space,dependant_vdbs
                  engine1,prod01,1849457664,607240704,0
                  engine2,test03,1696232960,1290392576,2
  /reporting/dsource-usage-report/search:
    post:
      summary: Search the usage report for virtualization engine dSources.
      tags:
        - Reporting
      x-filterable:
        fields:
          name:
            type: string
          unvirtualized_space:
            type: integer
          actual_space:
            type: integer
          dependant_vdbs:
            type: integer
          engine_name:
            type: string
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/dSourceUsageReportSortParam'
      operationId: search_dsource_usage_report
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        "200":
          description: Returns a list of dSource usage data.
          content:
            application/json:
              schema:
                type: object
                title: DSourceUsageReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/DSourceUsageData"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
            text/csv:
              schema:
                type: string
                example: |
                  engine_name,name,unvirtualized_space,actual_space,dependant_vdbs
                  engine1,prod01,1849457664,607240704,0
                  engine2,test03,1696232960,1290392576,2
  /reporting/dsource-consumption-report:
    get:
      summary: Gets the consumption report for virtualization engine dSources.
      tags:
        - Reporting
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/dSourceConsumptionReportSortParam'
      operationId: get_dsource_consumption_report
      responses:
        "200":
          description: Returns a list of dSource consumption data.
          content:
            application/json:
              schema:
                type: object
                title: DSourceConsumptionReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/DSourceConsumptionData"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
            text/csv:
              schema:
                type: string
                example: |
                  name,status,database_type,engine_id,engine_name,last_consumption_date,ingested_size
                  dsource1,Running,Oracle,1,engine1,2022-05-29T15:00:00-04:00,12345
                  dsource2,Stopped,SQL Server,1,engine2,2022-05-29T15:00:00-04:00,12345
  /reporting/dsource-consumption-report/search:
    post:
      summary: Search the consumption report for virtualization engine DSources.
      tags:
        - Reporting
      x-filterable:
        fields:
          name:
            type: string
          status:
            type: string
          database_type:
            type: string
          engine_id:
            type: string
          engine_name:
            type: string
          last_consumption_date:
            type: string
            format: date-time
          ingested_size:
            type: integer
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/dSourceConsumptionReportSortParam'
      operationId: search_dsource_consumption_report
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        "200":
          description: Returns a list of dSource consumption data.
          content:
            application/json:
              schema:
                type: object
                title: DSourceConsumptionReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/DSourceConsumptionData"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
            text/csv:
              schema:
                type: string
                example: |
                  name,status,database_type,engine_id,engine_name,last_consumption_date,ingested_size
                  dsource1,Running,Oracle,1,engine1,2022-05-29T15:00:00-04:00,12345
                  dsource2,Stopped,SQL Server,1,engine2,2022-05-29T15:00:00-04:00,12345
  /reporting/api-usage-report:
    get:
      summary: Gets the report of API usage metrics over a given time period. This API returns at the most 10000 results in the response to protect against the server running out of memory.
               Users might not hit this limit with the default report without any 'apiUsageReportGroupByParam' param but can hit this limit if the groupBy is by too granular like
               by 'client_name' or 'user_agent' only. Hence it is advisable to use startDate and endDate to 'limit' the scope of the report.
      tags:
        - Reporting
      parameters:
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - $ref: '#/components/parameters/apiMetricKind'
        - $ref: '#/components/parameters/apiUsageReportGroupByParam'
        - $ref: '#/components/parameters/apiUsageReportClientNameFilterParam'
        - $ref: '#/components/parameters/apiUsageReportUserAgentFilterParam'
        - $ref: '#/components/parameters/apiUsageReportDctVersionFilterParam'
      operationId: get_api_usage_report
      responses:
        "200":
          description: Returns a list of API usage metrics.
          content:
            application/json:
              schema:
                type: object
                title: ApiUsageReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ApiUsageData"
                  total_automation_api_count:
                    description: Total count of automation API calls over the requested timeframe.
                    type: integer
                    format: int64
                    example: 4200
                  total_governance_api_count:
                    description: Total count of governance API calls over the requested timeframe.
                    type: integer
                    format: int64
                    example: 4200
            text/csv:
              schema:
                type: string
                example: |
                  api_endpoint,api_method,api_count
                  /v2/bookmarks,GET,1
                  /v2/bookmarks/search,POST,1
                  /v2/management/engines,GET,1
  /reporting/masking-execution-metrics:
    get:
      summary: Get the masking execution metrics report.
      tags:
        - Reporting
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/maskingExecutionMetricsSortParam'
      operationId: get_masking_execution_metrics_report
      responses:
        "200":
          description: Returns a list of Masking execution metrics.
          content:
            application/json:
              schema:
                type: object
                title: MaskingExecutionMetricsReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/MaskingExecutionMetrics"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
            text/csv:
              schema:
                type: string
                example: |
                  id,masking_job_name,masking_job_type,connector_type,ruleset_name,rows_masked,rows_total,bytes_masked,bytes_total,duration,tables_files_count,"masked_tables_files_count",columns_fields_count,"masked_columns_fields_count"
                  "4ed2357d-f1a7-410c-b951-90f0edc1a0f6",masking-job,STANDARD,ORACLE,customers,2,2,0,0,19430,1,1,2,2

  /reporting/masking-execution-metrics/search:
    post:
      summary: Search the Masking execution metrics report.
      tags:
        - Reporting
      x-filterable:
        fields:
          id:
            type: string
          masking_job_name:
            type: string
          masking_job_type:
            type: string
          connector_type:
            type: string
          ruleset_name:
            type: string
          rows_masked:
            type: integer
          rows_total:
            type: integer
          bytes_masked:
            type: integer
          bytes_total:
            type: integer
          duration:
            type: integer
          tables_files_count:
            type: integer
          masked_tables_files_count:
            type: integer
          columns_fields_count:
            type: integer
          masked_columns_fields_count:
            type: integer
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/maskingExecutionMetricsSortParam'
      operationId: search_masking_execution_metrics_report
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        "200":
          description: Search Masking execution metrics.
          content:
            application/json:
              schema:
                type: object
                title: MaskingExecutionMetricsReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/MaskingExecutionMetrics"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
            text/csv:
              schema:
                type: string
                example: |
                  id,masking_job_name,connector_type,ruleset_name,rows_masked,rows_total,bytes_masked,bytes_total,duration,tables_files_count,"masked_tables_files_count",columns_fields_count,"masked_columns_fields_count"
                  "4ed2357d-f1a7-410c-b951-90f0edc1a0f6",masking-job,ORACLE,customers,2,2,0,0,19430,1,1,2,2

  /reporting/schedule:
    post:
      tags:
        - Reporting
      summary: Create a new report schedule.
      operationId: create_reporting_schedule
      requestBody:
        $ref: '#/components/requestBodies/CreateReportingSchedule'
      responses:
        "200":
          description: Returns the newly created schedule for a report.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/ReportingSchedule"
    get:
      tags:
        - Reporting
      summary: List all report schedules.
      operationId: get_reporting_schedules
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/reportingScheduleSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListReportingScheduleResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReportingSchedule'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /reporting/schedule/search:
    post:
      tags:
        - Reporting
      summary: Search for report schedules.
      operationId: search_reporting_schedules
      x-filterable:
        fields:
          report_id:
            type: integer
          report_type:
            type: string
          cron_expression:
            type: string
          time_zone:
            type: string
          message:
            type: string
          file_format:
            type: string
          enabled:
            type: boolean
          sort_column:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/reportingScheduleSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchReportingScheduleResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReportingSchedule'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /reporting/schedule/{reportId}:
    parameters:
      - $ref: '#/components/parameters/reportIdParam'
    get:
      summary: Returns a report schedule by ID.
      operationId: get_reporting_schedule_by_id
      tags:
        - Reporting
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportingSchedule'
    delete:
      summary: Delete report schedule by ID.
      operationId: delete_reporting_schedule
      tags:
        - Reporting
      responses:
        '204':
          description: No Content
    put:
      summary: Update a reporting schedule by ID.
      operationId: update_reporting_schedule
      tags:
        - Reporting
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_reporting_schedule_param
              $ref: '#/components/schemas/ReportingSchedule'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportingSchedule'
  /reporting/schedule/{reportId}/tags:
    parameters:
      - $ref: '#/components/parameters/reportIdParam'
    post:
      tags:
        - Reporting
      summary: Create tags for a report schedule.
      operationId: create_reporting_schedule_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: reporting_schedule_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for report schedule.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - Reporting
      summary: Get tags for a report schedule.
      operationId: get_reporting_schedule_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /reporting/schedule/{reportId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/reportIdParam'
    post:
      tags:
        - Reporting
      summary: Delete tags for a report schedule.
      operationId: delete_reporting_schedule_tag
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
        required: false
      responses:
        '204':
          description: No Content

  /reporting/engine-performance-analytic-report:
    get:
      summary: Gets the performance analytics report for engines.
      tags:
        - Reporting
      operationId: get_engine_performance_analytics_report
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/EnginePerformanceAnalyticReportSortParam'
      responses:
        "200":
          description: Returns a list of performance analytics data of engines.
          content:
            application/json:
              schema:
                type: object
                title: EnginePerformanceAnalyticReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/EnginePerformanceAnalytic"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
            text/csv:
              schema:
                type: string
                example: |
                  engine_name,engine_id,engine_type,aggregation_period,cpu_cores_count,cpu_utilization,total_memory,average_disk_latency_read,average_disk_latency_write,average_disk_latency_total,average_disk_throughput_read,average_disk_throughput_write,average_disk_throughput_total,average_nfs_latency_read,average_nfs_latency_write,average_nfs_latency_total,average_nfs_throughput_read,average_nfs_throughput_write,average_nfs_throughput_total,average_iscsi_latency_read,average_iscsi_latency_write,average_iscsi_latency_total,average_iscsi_throughput_read,average_iscsi_throughput_write,average_iscsi_throughput_total,average_network_throughput_transmit,average_network_throughput_receive
                  km,1,VIRTUALIZATION,24,2,4.97529992942837,8589934592,4747942,900793,901766,486,495052,253030,32493,1127989,394758,34417,0,17208,0,0,0,0,0,0,11.135787037037,5.75303240740741
  /reporting/engine-performance-analytic-report/search:
    post:
      summary: Search the performance analytic report for engines.
      tags:
        - Reporting
      x-filterable:
        fields:
          engine_id:
            type: string
          engine_name:
            type: string
          engine_type:
            type: string
          aggregation_period:
            type: integer
          cpu_cores_count:
            type: integer
          cpu_utilization:
            type: number
            format: double
          total_memory:
            type: integer
            format: int64
          average_disk_latency_read:
            type: integer
            format: int64
          average_disk_latency_write:
            type: integer
            format: int64
          average_disk_latency_total:
            type: integer
            format: int64
          average_disk_throughput_read:
            type: integer
            format: int64
          average_disk_throughput_write:
            type: integer
            format: int64
          average_disk_throughput_total:
            type: integer
            format: int64
          average_disk_iops_read:
            type: integer
            format: int64
          average_disk_iops_write:
            type: integer
            format: int64
          average_disk_iops_total:
            type: integer
            format: int64
          average_nfs_latency_read:
            type: integer
            format: int64
          average_nfs_latency_write:
            type: integer
            format: int64
          average_nfs_latency_total:
            type: integer
            format: int64
          average_nfs_throughput_read:
            type: integer
            format: int64
          average_nfs_throughput_write:
            type: integer
            format: int64
          average_nfs_throughput_total:
            type: integer
            format: int64
          average_nfs_iops_read:
            type: integer
            format: int64
          average_nfs_iops_write:
            type: integer
            format: int64
          average_nfs_iops_total:
            type: integer
            format: int64
          average_iscsi_latency_read:
            type: integer
            format: int64
          average_iscsi_latency_write:
            type: integer
            format: int64
          average_iscsi_latency_total:
            type: integer
            format: int64
          average_iscsi_throughput_read:
            type: integer
            format: int64
          average_iscsi_throughput_write:
            type: integer
            format: int64
          average_iscsi_throughput_total:
            type: integer
            format: int64
          average_iscsi_iops_read:
            type: integer
            format: int64
          average_iscsi_iops_write:
            type: integer
            format: int64
          average_iscsi_iops_total:
            type: integer
            format: int64
          average_network_throughput_transmit:
            type: number
            format: double
          average_network_throughput_receive:
            type: number
            format: double
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/EnginePerformanceAnalyticReportSortParam'
      operationId: search_engine_performance_analytics_report
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        "200":
          description: Returns a list of performance analytics data of engines.
          content:
            application/json:
              schema:
                type: object
                title: EnginePerformanceAnalyticReportResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/EnginePerformanceAnalytic"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
            text/csv:
              schema:
                type: string
                example: |
                  engine_name,engine_id,engine_type,aggregation_period,cpu_cores_count,cpu_utilization,total_memory,average_disk_latency_read,average_disk_latency_write,average_disk_latency_total,average_disk_throughput_read,average_disk_throughput_write,average_disk_throughput_total,average_nfs_latency_read,average_nfs_latency_write,average_nfs_latency_total,average_nfs_throughput_read,average_nfs_throughput_write,average_nfs_throughput_total,average_iscsi_latency_read,average_iscsi_latency_write,average_iscsi_latency_total,average_iscsi_throughput_read,average_iscsi_throughput_write,average_iscsi_throughput_total,average_network_throughput_transmit,average_network_throughput_receive
                  km,1,VIRTUALIZATION,24,2,4.97529992942837,8589934592,4747942,900793,901766,486,495052,253030,32493,1127989,394758,34417,0,17208,0,0,0,0,0,0,11.135787037037,5.75303240740741

  /reporting/engine-performance-analytic-trends/search:
    post:
      summary: Search the performance analytic trend data for engines.
      tags:
        - Reporting
      x-filterable:
        fields:
          engine_id:
            type: string
          trend_type:
            type: string
          aggregation_period:
            type: integer
      parameters:
        - $ref: '#/components/parameters/limitExtendedParam'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/EnginePerformanceAnalyticTrendSortParam'
      operationId: search_engine_performance_analytic_trends
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        "200":
          description: Returns a list of performance analytic trends data of engines.
          content:
            application/json:
              schema:
                type: object
                title: EnginePerformanceAnalyticTrendResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/EnginePerformanceAnalyticTrend"
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /reporting/product_info:
    get:
      tags:
        - Reporting
      summary: Returns the DCT Product Information.
      operationId: get_product_info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/ProductInfo'

  /roles:
    post:
      tags:
        - Authorization
      summary: Create custom role
      operationId: create_role
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: create_role_param
              $ref: '#/components/schemas/CreateRole'
      responses:
        "200":
          description: Returns the newly created role.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Role"
    get:
      tags:
        - Authorization
      summary: List all roles
      operationId: get_roles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListRolesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
  /roles/{roleId}:
    parameters:
      - $ref: '#/components/parameters/roleIdParam'
    get:
      summary: Returns role by ID.
      operationId: get_role_by_id
      tags:
        - Authorization
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
    patch:
      summary: Update a Role.
      operationId: update_role
      tags:
        - Authorization
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_role_param
              $ref: '#/components/schemas/RoleUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
    delete:
      summary: Delete role by ID.
      operationId: delete_role
      tags:
        - Authorization
      responses:
        '204':
          description: No Content
  /roles/search:
    post:
      summary: Search for roles.
      operationId: search_roles
      tags:
        - Authorization
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          description:
            type: string
          permission_objects:
            type: array[object]
            fields:
              object_type:
                type: string
              permissions:
                type: array[string]
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/roleSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchRolesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /roles/{roleId}/permissions:
    parameters:
      - $ref: '#/components/parameters/roleIdParam'
    post:
      tags:
        - Authorization
      summary: Add permissions to a role.
      operationId: add_role_permissions
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: role_permissions_param
              $ref: "#/components/schemas/PermissionsRequest"
        description: Permissions to add to the role.
        required: true
      responses:
        '200':
          description: The updated role.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Role"
  /roles/{roleId}/permissions/delete:
    parameters:
      - $ref: '#/components/parameters/roleIdParam'
    post:
      tags:
        - Authorization
      summary: Remove permissions from a role.
      operationId: remove_role_permissions
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: role_permissions_param
              $ref: "#/components/schemas/PermissionsRequest"
        description: Permissions to remove from the role.
        required: true
      responses:
        '200':
          description: The updated role.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Role"
  /roles/{roleId}/tags:
    parameters:
      - $ref: '#/components/parameters/roleIdParam'
    post:
      tags:
        - Authorization
      summary: Create tags for a role.
      operationId: create_role_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: role_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Roles.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - Authorization
      summary: Get tags for a Role.
      operationId: get_role_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /roles/{roleId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/roleIdParam'
    post:
      tags:
        - Authorization
      summary: Delete tags for a Role.
      operationId: delete_role_tag
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
        required: false
      responses:
        '204':
          description: No Content
  /auth/permissions/objects/{objectType}/{objectId}:
    parameters:
      - $ref: '#/components/parameters/objectTypeParam'
      - $ref: '#/components/parameters/objectIdParam'
    get:
      summary: Returns permissions for given object.
      operationId: get_object_permissions
      tags:
        - Authorization
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectPermissionsResponse'

  /auth/object-permissions:
    get:
      summary: Returns all of the possible permissions for all of the objects.
      operationId: get_all_object_permissions
      tags:
        - Authorization
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllObjectPermissionsResponse'

  /access-groups:
    post:
      tags:
        - Authorization
      summary: Create a new access group.
      operationId: create_access_group
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: create_access_group_param
              $ref: "#/components/schemas/AccessGroup"
        required: true
      responses:
        "201":
          description: Returns the newly created access group.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/AccessGroup"
    get:
      tags:
        - Authorization
      summary: List all access groups.
      operationId: get_access_groups
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/accessGroupsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListAccessGroupsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/AccessGroup'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /access-groups/search:
    post:
      summary: Search for access groups.
      operationId: search_access_groups
      tags:
        - Authorization
      x-filterable:
        description: Access group fields which can be used in filter expressions.
        fields:
          - id
          - name
          - account_ids
          - tagged_account_ids
          - scopes
          - single_account
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/accessGroupsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchAccessGroupsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/AccessGroup'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /access-groups/{accessGroupId}:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
    get:
      summary: Returns an Access group by ID.
      operationId: get_access_group_by_id
      tags:
        - Authorization
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroup'
    delete:
      summary: Delete an Access group.
      operationId: delete_access_group
      tags:
        - Authorization
      responses:
        '204':
          description: No Content
    patch:
      summary: Update an Access group.
      operationId: update_access_group
      tags:
        - Authorization
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_access_group_param
              $ref: '#/components/schemas/AccessGroupUpdateParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessGroup'
  /access-groups/{accessGroupId}/tags:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
    post:
      tags:
        - Authorization
      summary: Add account tags to an Access group
      operationId: add_access_group_account_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: account_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Account Tags to add to the Access group.
        required: true
      responses:
        '200':
          description: The updated Access group.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/AccessGroup"
  /access-groups/{accessGroupId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
    post:
      tags:
        - Authorization
      summary: Remove account tags from an access group.
      operationId: remove_access_group_account_tags
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
      responses:
        '200':
          description: The updated Access group.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/AccessGroup"
  /access-groups/{accessGroupId}/account-ids:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
    post:
      tags:
        - Authorization
      summary: Add account ids to an Access group
      operationId: add_access_group_account_ids
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: account_ids
              $ref: "#/components/schemas/AccessGroupAccountIdsRequest"
        description: Account ids to add to the Access group.
        required: true
      responses:
        '200':
          description: The updated Access group.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/AccessGroup"
  /access-groups/{accessGroupId}/account-ids/{accountId}:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
      - in: path
        name: accountId
        schema:
          type: integer
          format: int64
        required: true
        description: The ID of the account.
    delete:
      summary: Remove the account from the access group.
      operationId: remove_access_group_account_id
      tags:
        - Authorization
      responses:
        '200':
          description: The updated Access group.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/AccessGroup"
  /access-groups/{accessGroupId}/scopes:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
    post:
      tags:
        - Authorization
      summary: Add scopes to an Access group
      operationId: add_access_group_scopes
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: scopes
              $ref: "#/components/schemas/AccessGroupScopesRequest"
        description: Scopes to add to the Access group.
        required: true
      responses:
        '200':
          description: The updated Access group.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/AccessGroup"
  /access-groups/{accessGroupId}/scopes/{scopeId}:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
      - $ref: '#/components/parameters/scopeIdParam'
    delete:
      summary: Remove the scope from the Access group.
      operationId: remove_access_group_scope
      tags:
        - Authorization
      responses:
        '200':
          description: The updated Access group.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/AccessGroup"
    get:
      summary: Get access group scope.
      operationId: get_access_group_scope
      tags:
        - Authorization
      responses:
        '200':
          description: The access group scope.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/AccessGroupScope"
    patch:
      summary: Update access group scope.
      operationId: update_access_group_scope
      tags:
        - Authorization
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: scopes
              $ref: "#/components/schemas/UpdateAccessGroupScope"
        description: Access group scope to update.
        required: true
      responses:
        '200':
          description: The updated access group scope.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/AccessGroupScope"
  /access-groups/{accessGroupId}/scopes/{scopeId}/object-tags:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
      - $ref: '#/components/parameters/scopeIdParam'
    post:
      summary: Add object tags to the access group scope.
      operationId: add_tags_to_scope
      tags:
        - Authorization
      requestBody:
        content:
          application/json:
            schema:
              x-body-name:  access_group_scope_tags
              $ref: "#/components/schemas/ScopeTagsRequest"
        description: Object tags for the access group scope.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/ScopeTagsResponse"
  /access-groups/{accessGroupId}/scopes/{scopeId}/object-tags/delete:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
      - $ref: '#/components/parameters/scopeIdParam'
    post:
      tags:
        - Authorization
      summary: Remove tags from the access group scope.
      operationId: delete_access_group_scope_object_tags
      requestBody:
        $ref: "#/components/requestBodies/DeleteScopeObjectTags"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/ScopeTagsResponse"
  /access-groups/{accessGroupId}/scopes/{scopeId}/objects:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
      - $ref: '#/components/parameters/scopeIdParam'
    post:
      summary: Add objects to the access group scope.
      operationId: add_objects_to_access_group_scope
      tags:
        - Authorization
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: scope_objects
              $ref: "#/components/schemas/ScopedObjectsRequest"
        description: Add objects to the access group scope.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/ScopedObjectItemsResponse"
  /access-groups/{accessGroupId}/scopes/{scopeId}/objects/delete:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
      - $ref: '#/components/parameters/scopeIdParam'
    post:
      tags:
        - Authorization
      summary: Remove objects from the access group scope.
      operationId: delete_access_group_scope_objects
      requestBody:
        $ref: "#/components/requestBodies/DeleteObjects"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/ScopedObjectItemsResponse"
  /access-groups/{accessGroupId}/scopes/{scopeId}/always_allowed_permissions:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
      - $ref: '#/components/parameters/scopeIdParam'
    post:
      summary: Add always allowed permissions for given object type.
      operationId: add_always_allowed_permissions
      tags:
        - Authorization
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: scope_object_permissions
              $ref: "#/components/schemas/AlwaysAllowedPermissionRequest"
        description: Add always allowed permissions for given object type.
        required: true
      responses:
        '200':
          description: The access group scope.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/AccessGroupScope"
  /access-groups/{accessGroupId}/scopes/{scopeId}/always_allowed_permissions/delete:
    parameters:
      - $ref: '#/components/parameters/accessGroupIdParam'
      - $ref: '#/components/parameters/scopeIdParam'
    post:
      summary: Remove always allowed permissions for given object type.
      operationId: remove_always_allowed_permissions
      tags:
        - Authorization
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: scope_object_permissions
              $ref: "#/components/schemas/AlwaysAllowedPermissionRequest"
        description: Remove always allowed permissions for given object type.
        required: true
      responses:
        '200':
          description: The access group scope.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/AccessGroupScope"
  /connectors:
    get:
      tags:
        - Connectors
      summary: Retrieve the list of masking connectors.
      operationId: get_connectors
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/connectorsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListConnectorsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Connector'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /connectors/{connectorId}:
    parameters:
      - $ref: '#/components/parameters/connectorIdParam'
    get:
      summary: Retrieve a masking Connector by ID.
      operationId: get_connector_by_id
      tags:
        - Connectors
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connector'
    patch:
      summary: Update a masking Connector by ID.
      operationId: update_connector_by_id
      tags:
        - Connectors
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_connector_parameter
              $ref: '#/components/schemas/ConnectorUpdateParameters'
        description: The new data to update a masking Connector.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UpdateConnectorResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
  /connectors/{connectorId}/tags:
    parameters:
      - $ref: '#/components/parameters/connectorIdParam'
    post:
      tags:
        - Connectors
      summary: Create tags for a Connector.
      operationId: create_connector_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: connector_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Connector.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - Connectors
      summary: Get tags for a Connector.
      operationId: get_connector_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /connectors/{connectorId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/connectorIdParam'
    post:
      tags:
        - Connectors
      summary: Delete tags for a Connector.
      operationId: delete_connector_tag
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
        required: false
      responses:
        '204':
          description: No Content
  /connectors/search:
    post:
      summary: Search for masking Connectors.
      operationId: search_connectors
      tags:
        - Connectors
      x-filterable:
        fields:
          id:
            type: string
          engine_id:
            type: string
          type:
            type: string
          name:
            type: string
          hostname:
            type: string
          username:
            type: string
          port:
            type: integer
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/connectorsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchConnectorsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Connector'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /executions:
    get:
      tags:
        - Executions
      summary: Retrieve the list of masking executions.
      operationId: get_executions
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/executionsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListExecutionsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Execution'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /executions/search:
    post:
      tags:
        - Executions
      summary: Search masking executions.
      operationId: search_executions
      x-filterable:
        fields:
          id:
            type: string
          engine_id:
             type: string
          engine_name:
            type: string
          masking_job_id:
            type: string
          masking_job_name:
            type: string
          source_connector_id:
            type: string
          target_connector_id:
            type: string
          status:
            type: string
          rows_masked:
            type: integer
          rows_total:
            type: integer
          bytes_processed:
            type: integer
          bytes_total:
            type: integer
          start_time:
            type: string
          submit_time:
            type: string
          end_time:
            type: string
          hyperscale_instance_id:
            type: string
          task_events:
            type: array[object]
            fields:
              event:
                type: string
              status:
                type: string
          hyperscale_task_events:
            type: array[object]
            fields:
              name:
                type: string
              progress:
                type: number
              status:
                type: string
              processed_objects:
                type: integer
              processed_rows:
                type: integer
              total_constraints:
                type: integer
              processed_indexes:
                type: integer
              total_indexes:
                type: integer
              processed_triggers:
                type: integer
              total_triggers:
                type: integer
              start_time:
                type: string
              end_time:
                type: string
              errors:
                type: array[object]
                fields:
                  table_name:
                    type: string
                  error:
                    type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/executionsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchExecutionsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Execution'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /executions/{executionId}:
    parameters:
      - $ref: '#/components/parameters/executionIdParam'
    get:
      summary: Retrieve an Execution by ID.
      operationId: get_execution_by_id
      tags:
        - Executions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
  /executions/{executionId}/cancel:
    parameters:
      - $ref: '#/components/parameters/executionIdParam'
    post:
      summary: Cancel an Execution.
      operationId: cancel_execution
      tags:
        - Executions
      requestBody:
        required: false
        content:
          application/json:
            schema:
              x-body-name: cancel_execution
              $ref: '#/components/schemas/ExecutionCancelParameters'
      responses:
        '200':
          description: OK
  /executions/{executionId}/restart:
    parameters:
      - $ref: '#/components/parameters/executionIdParam'
    post:
      summary: Restart an Execution (Hyperscale only).
      operationId: restart_execution
      tags:
        - Executions
      responses:
        '200':
          description: Masking job execution restarted.
          content:
            application/json:
              schema:
                type: object
                title: RestartExecutionResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /executions/{executionId}/cleanup:
    parameters:
      - $ref: '#/components/parameters/executionIdParam'
    post:
      summary: Cleanup an Execution (Hyperscale only).
      operationId: cleanup_execution
      tags:
        - Executions
      responses:
        '200':
          description: Masking job execution cleaned up.
          content:
            application/json:
              schema:
                type: object
                title: CleanupExecutionResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /executions/{executionId}/events:
    parameters:
      - $ref: '#/components/parameters/executionIdParam'
    get:
      summary: Retrieve the list of events for a masking execution.
      operationId: get_execution_events
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/executionEventsSortParam'
      tags:
        - Executions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListExecutionEventsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExecutionEvent'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /executions/{executionId}/events/search:
    parameters:
      - $ref: '#/components/parameters/executionIdParam'
    post:
      tags:
        - Executions
      summary: Search masking executions events.
      operationId: search_execution_events
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/executionEventsSortParam'
      x-filterable:
        fields:
          id:
            type: string
          execution_id:
            type: string
          event_type:
            type: string
          severity:
            type: string
          cause:
            type: string
          count:
            type: integer
          timestamp:
            type: string
          masked_object_name:
            type: string
          algorithm_name:
            type: string
          exception_type:
            type: string
          exception_detail:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchExecutionEventsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExecutionEvent'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /executions/{executionId}/log:
    parameters:
      - $ref: '#/components/parameters/executionIdParam'
    get:
      summary: Retrieve the masking execution log.
      operationId: get_execution_log
      tags:
        - Executions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutionLog"
  /enable-scale-testing:
    x-internal: true
    post:
      tags:
        - Test
      summary: This is used for performance testing to enable engine and object duplication.
      operationId: enable_scale_testing
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnableScaleTestingRequest"
      responses:
        '200':
          description: OK
  /database-templates:
    get:
      tags:
        - DatabaseTemplates
      summary: Retrieve the list of database templates.
      operationId: get_database_templates
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/databaseTemplatesSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListDatabaseTemplatesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DatabaseTemplate'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
    post:
      tags:
        - DatabaseTemplates
      summary: Create a database template.
      operationId: create_database_template
      requestBody:
        $ref: '#/components/requestBodies/CreateDatabaseTemplate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: CreateDatabaseTemplateResponse
                properties:
                  database_template:
                    $ref: '#/components/schemas/DatabaseTemplate'
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /database-templates/{databaseTemplateId}:
    parameters:
      - $ref: '#/components/parameters/databaseTemplateIdParam'
    get:
      summary: Retrieve a DatabaseTemplate by ID.
      operationId: get_database_template_by_id
      tags:
        - DatabaseTemplates
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTemplate'
    delete:
      summary: Delete a DatabaseTemplate by ID.
      operationId: delete_database_template
      tags:
        - DatabaseTemplates
      responses:
        '200':
          description: DatabaseTemplate delete initiated.
          content:
            application/json:
              schema:
                type: object
                title: DeleteDatabaseTemplateResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
    patch:
      summary: Updates a DatabaseTemplate by ID
      operationId: update_database_template
      tags:
        - DatabaseTemplates
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_database_template_parameter
              $ref: '#/components/schemas/UpdateDatabaseTemplateParameters'
        description: The new data to update a VDB.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: UpdateDatabaseTemplateResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /database-templates/{databaseTemplateId}/tags:
    parameters:
      - $ref: '#/components/parameters/databaseTemplateIdParam'
    post:
      tags:
        - DatabaseTemplates
      summary: Create tags for a DatabaseTemplate.
      operationId: create_database_template_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: database_template_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for a DatabaseTemplate.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - DatabaseTemplates
      summary: Get tags for a DatabaseTemplate.
      operationId: get_database_template_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /database-templates/{databaseTemplateId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/databaseTemplateIdParam'
    post:
      tags:
        - DatabaseTemplates
      summary: Delete tags for a DatabaseTemplate.
      operationId: delete_database_template_tag
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
        required: false
      responses:
        '204':
          description: No Content
  /database-templates/search:
    post:
      tags:
        - DatabaseTemplates
      summary: Search DatabaseTemplates.
      operationId: search_database_templates
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          description:
            type: string
          source_type:
            type: string
          parameters:
            type: object
            fields:
              name:
                type: string
              value:
                type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/databaseTemplatesSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchDatabaseTemplatesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DatabaseTemplate'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /database-templates/import:
    post:
      tags:
        - DatabaseTemplates
      summary: Imports the database templates from an an engine.
      operationId: import_database_templates
      requestBody:
        description: Body containing the ID of the registered engine.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EngineIdBody"
      responses:
        '200':
          description: OK
  /database-templates/undo-import:
    post:
      tags:
        - DatabaseTemplates
      summary: Undo an import of DatabaseTemplates on an Engine.
      operationId: undo_import_database_templates
      requestBody:
        description: Body containing the ID of the registered engine.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EngineIdBody"
      responses:
        '200':
          description: OK
  /cdbs:
    get:
      summary: List all CDBs (Oracle only).
      operationId: get_cdbs
      tags:
        - CDBs
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/cdbsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListCDBsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/CDB'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"

  /cdbs/search:
    post:
      summary: Search for CDBs (Oracle only).
      operationId: search_cdbs
      tags:
        - CDBs
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          database_version:
            type: string
          environment_id:
            type: string
          size:
            type: integer
          jdbc_connection_string:
            type: string
          engine_id:
            type: string
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/cdbsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchCDBsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/CDB'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /cdbs/{cdbId}:
    parameters:
      - $ref: '#/components/parameters/cdbIdParam'
    get:
      summary: Get a CDB by ID (Oracle only).
      operationId: get_cdb_by_id
      tags:
        - CDBs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CDB'
  /cdbs/{cdbId}/tags:
    parameters:
      - $ref: '#/components/parameters/cdbIdParam'
    post:
      tags:
        - CDBs
      summary: Create tags for a CDB.
      operationId: create_cdb_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: cdb_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for CDB.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - CDBs
      summary: Get tags for a CDB.
      operationId: get_tags_cdb
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /cdbs/{cdbId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/cdbIdParam'
    post:
      tags:
        - CDBs
      summary: Delete tags for a CDB.
      operationId: delete_cdb_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
        required: false
      responses:
        '204':
          description: No Content
  /vcdbs:
    get:
      summary: List all vCDBs (Oracle only).
      operationId: get_vcdbs
      tags:
        - VCDBs
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/vcdbsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListVCDBsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VCDB'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /vcdbs/search:
    post:
      summary: Search for vCDBs (Oracle only).
      operationId: search_vcdbs
      tags:
        - VCDBs
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          database_version:
            type: string
          environment_id:
            type: string
          size:
            type: integer
          engine_id:
            type: string
          status:
            type: string
          parent_id:
            type: string
          creation_date:
            type: string
          group_name:
            type: string
          enabled:
            type: boolean
          content_type:
            type: string
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
          vcdb_restart:
            type: boolean
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/vcdbsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchVCDBsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VCDB'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /vcdbs/{vcdbId}:
    parameters:
      - $ref: '#/components/parameters/vcdbIdParam'
    get:
      summary: Get a CDB by ID (Oracle only).
      operationId: get_vcdb_by_id
      tags:
        - VCDBs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VCDB'
  /vcdbs/{vcdbId}/tags:
    parameters:
      - $ref: '#/components/parameters/vcdbIdParam'
    post:
      tags:
        - VCDBs
      summary: Create tags for a vCDB.
      operationId: create_vcdb_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: vcdb_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for vCDB.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - VCDBs
      summary: Get tags for a vCDB.
      operationId: get_tags_vcdb
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /vcdbs/{vcdbId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/vcdbIdParam'
    post:
      tags:
        - VCDBs
      summary: Delete tags for a vCDB.
      operationId: delete_vcdb_tags
      requestBody:
        $ref: '#/components/requestBodies/DeleteTags'
      responses:
        '204':
          description: No Content
  /masking-file-uploads:
    x-internal: true
    post:
      tags:
        - MaskingFiles
      summary: Upload a file for masking.
      operationId: upload_masking_file
      requestBody:
        $ref: '#/components/requestBodies/UploadMaskingFile'
      responses:
        '201':
          description: File has been uploaded.
          content:
            application/json:
              schema:
                type: object
                title: MaskingFileUploadResponse
                properties:
                  file:
                    $ref: '#/components/schemas/MaskingFileUpload'
                    description: The uploaded file.
  /masking-jobs:
    get:
      tags:
        - MaskingJobs
      summary: Retrieve the list of masking jobs.
      operationId: get_masking_jobs
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/maskingJobsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListMaskingJobsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingJob'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
    post:
      tags:
        - MaskingJobs
      summary: Create a Masking Job.
      operationId: create_masking_job
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: create_job_request
              $ref: "#/components/schemas/CreateMaskingJobRequest"
        description: Input params to create a masking job.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: CreateMaskingJobResponse
                properties:
                  id:
                    type: string
                    description: The ID of the created masking job.
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated DCT job.
  /masking-jobs/search:
    post:
      tags:
        - MaskingJobs
      summary: Search masking jobs.
      operationId: search_masking_jobs
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          is_on_the_fly_masking:
            type: boolean
          creation_date:
            type: string
          last_completed_execution_date:
            type: string
          last_execution_status:
            type: string
          last_execution_id:
            type: string
          connector_username:
            type: string
          on_the_fly_source_connector_username:
            type: string
          ruleset.type:
            type: string
          ruleset.name:
            type: string
          ruleset.refresh_drops_table:
            type: boolean
          ruleset.algorithms:
            type: array[string]
          hyperscale_instance_id:
            type: string
          description:
            type: string
          dataset_id:
            type: string
          retain_execution_data:
            type: string
          max_memory:
            type: integer
          min_memory:
            type: integer
          feedback_size:
            type: integer
          stream_row_limit:
            type: integer
          num_input_streams:
            type: integer
          max_concurrent_source_connections:
            type: integer
          max_concurrent_target_connections:
            type: integer
          parallelism_degree:
            type: integer
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/maskingJobsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchMaskingJobsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingJob'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /masking-jobs/source-engines:
    get:
      tags:
        - MaskingJobs
      summary: Retrieve the list of masking jobs along with their source engine.
      operationId: get_masking_job_source_engines
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/maskingJobSourceEnginesSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListMaskingJobSourceEnginesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingJobSourceEngine'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /masking-jobs/source-engines/search:
    post:
      tags:
        - MaskingJobs
      summary: Search the list of masking jobs along with their source engine.
      operationId: search_masking_job_source_engines
      x-filterable:
        fields:
          masking_job_id:
            type: string
          source_engine_id:
            type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/maskingJobSourceEnginesSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchMaskingJobSourceEnginesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingJobSourceEngine'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /masking-jobs/{maskingJobId}:
    parameters:
      - $ref: '#/components/parameters/maskingJobIdParam'
    delete:
      tags:
        - MaskingJobs
      summary: Delete a masking job.
      operationId: delete_masking_job
      parameters:
        - $ref: '#/components/parameters/maskingJobDeleteForceParam'
      responses:
        '200':
          description: Masking job delete initiated.
          content:
            application/json:
              schema:
                type: object
                title: DeleteMaskingJobResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
    get:
      summary: Retrieve a MaskingJob by ID.
      operationId: get_masking_job_by_id
      tags:
        - MaskingJobs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaskingJob'
    patch:
      summary: Update values of a MaskingJob.
      operationId: update_masking_job_by_id
      tags:
        - MaskingJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMaskingJobParameters'
        description: The new data to update a Masking Job.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaskingJob'
  /masking-jobs/{maskingJobId}/copy:
    parameters:
      - $ref: '#/components/parameters/maskingJobIdParam'
    post:
      tags:
        - MaskingJobs
      summary: Copies the masking job to another engine.
      operationId: copy_masking_job
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: copy_masking_job_params
              $ref: "#/components/schemas/CopyMaskingJobParameters"
      responses:
        '200':
          description: Copy masking job initiated.
          content:
            application/json:
              schema:
                type: object
                title: CopyMaskingJobResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
                  masking_job_id:
                    type: string
  /masking-jobs/{maskingJobId}/migrate:
    parameters:
      - $ref: '#/components/parameters/maskingJobIdParam'
    post:
      tags:
        - MaskingJobs
      summary: Migrates the masking job from its current source engine to another engine.
      operationId: migrate_masking_job
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: migrate_masking_job_params
              $ref: "#/components/schemas/MigrateMaskingJobParameters"
      responses:
        '200':
          description: Migrate masking job initiated.
          content:
            application/json:
              schema:
                type: object
                title: MigrateMaskingJobResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /masking-jobs/{maskingJobId}/connectors:
    parameters:
      - $ref: '#/components/parameters/maskingJobIdParam'
    get:
      tags:
        - MaskingJobs
      summary: Get connectors for a Masking Job by ID.
      operationId: get_masking_job_connectors
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/MaskingJobConnectorsResponse"

  /masking-jobs/{maskingJobId}/execute:
    parameters:
      - $ref: '#/components/parameters/maskingJobIdParam'
    post:
      summary: Execute a MaskingJob.
      operationId: execute_masking_job
      tags:
        - MaskingJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteMaskingJobParameters'
      responses:
        '200':
          description: Masking job execute initiated.
          content:
            application/json:
              schema:
                type: object
                title: ExecuteMaskingJobResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.

  /masking-jobs/{maskingJobId}/re-import:
    parameters:
      - $ref: '#/components/parameters/maskingJobIdParam'
    post:
      tags:
        - MaskingJobs
      summary: Re-import the dataset from the source MaskingJob (Hyperscale Job only).
      operationId: re_import_masking_job
      responses:
        '200':
          description: Masking job re-import initiated.
          content:
            application/json:
              schema:
                type: object
                title: ReImportMaskingJobResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.

  /masking-jobs/{maskingJobId}/tags:
    parameters:
      - $ref: '#/components/parameters/maskingJobIdParam'
    post:
      tags:
        - MaskingJobs
      summary: Create tags for a Masking Job.
      operationId: create_masking_job_tag
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: masking_job_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Masking Job.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - MaskingJobs
      summary: Get tags for a Masking Job.
      operationId: get_masking_job_tag
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /masking-jobs/{maskingJobId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/maskingJobIdParam'
    post:
      tags:
        - MaskingJobs
      summary: Delete tags for a Masking Job.
      operationId: delete_masking_job_tag
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
        required: false
      responses:
        '204':
          description: No Content
  /masking-jobs/{maskingJobId}/add-engine:
    parameters:
      - $ref: '#/components/parameters/maskingJobIdParam'
    post:
      tags:
        - MaskingJobs
      summary: Add an engine to a Masking Job (Hyperscale Job only).
      operationId: add_engine_to_masking_job
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: engine_id
              $ref: "#/components/schemas/EngineIdBody"
        description: Body containing the ID of the registered engine.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: AddEngineToJobResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
  /masking-jobs/{maskingJobId}/remove-engine:
    parameters:
      - $ref: '#/components/parameters/maskingJobIdParam'
    post:
      tags:
        - MaskingJobs
      summary: Remove an engine from a Masking Job (Hyperscale Job only).
      operationId: remove_engine_from_masking_job
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: engine_id
              $ref: "#/components/schemas/EngineIdBody"
        description: Body containing the ID of the registered engine.
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: RemoveEngineFromJobResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
  /virtualization-policies:
    get:
      tags:
        - VirtualizationPolicies
      summary: Fetch a list of all virtualization policies
      operationId: list_virtualization_policies
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/virtualizationPoliciesSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListVirtualizationPoliciesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VirtualizationPolicy'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /algorithms/{algorithmId}:
    parameters:
      - $ref: '#/components/parameters/algorithmIdParam'
    get:
      summary: Get an algorithm by ID.
      operationId: get_algorithm_by_id
      tags:
        - Algorithms
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Algorithm'
    delete:
      x-internal: true
      summary: Delete an algorithm.
      operationId: delete_algorithm
      tags:
        - Algorithms
      responses:
        '200':
          description: Algorithm delete initiated.
          content:
            application/json:
              schema:
                type: object
                title: DeleteAlgorithmResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /algorithms:
    get:
      tags:
        - Algorithms
      summary: Retrieve the list of algorithms.
      operationId: get_algorithms
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/algorithmsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListAlgorithmsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Algorithm'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
    post:
      x-internal: true
      tags:
        - Algorithms
      summary: Create a new algorithm.
      operationId: create_algorithm
      requestBody:
        $ref: '#/components/requestBodies/CreateAlgorithm'
        required: true
      responses:
        '201':
          description: Algorithm creation initiated
          content:
            application/json:
              schema:
                type: object
                title: CreateAlgorithmResponse
                properties:
                  id:
                    type: string
                    description: The created algorithm's ID.
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /algorithms/{algorithmId}/tags:
    parameters:
      - $ref: '#/components/parameters/algorithmIdParam'
    get:
      tags:
        - Algorithms
      summary: Get tags for an Algorithm.
      operationId: get_algorithm_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    post:
      tags:
        - Algorithms
      summary: Create tags for an Algorithm.
      operationId: create_algorithm_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: algorithm_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for Algorithm.
        required: true
      responses:
        '201':
          description: Algorithm tags created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /algorithms/{algorithmId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/algorithmIdParam'
    post:
      tags:
        - Algorithms
      summary: Delete tags for an Algorithm.
      operationId: delete_algorithm_tags
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
      responses:
        '204':
          description: No Content
  /algorithms/{algorithmId}/revisions:
    parameters:
      - $ref: '#/components/parameters/algorithmIdParam'
    get:
      tags:
        - Algorithms
      summary: Retrieve the list of algorithm revisions for the algorithm.
      operationId: get_algorithm_revisions
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/algorithmRevisionsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListAlgorithmRevisionsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/AlgorithmRevision'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
    post:
      x-internal: true
      tags:
        - Algorithms
      summary: Create a new algorithm revision.
      operationId: create_algorithm_revision
      requestBody:
        $ref: '#/components/requestBodies/CreateAlgorithmRevision'
        required: true
      responses:
        '201':
          description: Algorithm creation revision initiated
          content:
            application/json:
              schema:
                type: object
                title: CreateAlgorithmRevisionResponse
                properties:
                  id:
                    type: string
                    description: The created algorithm revision's ID.
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /algorithms/{algorithmId}/revisions/search:
    parameters:
      - $ref: '#/components/parameters/algorithmIdParam'
    post:
      tags:
        - Algorithms
      summary: Search for algorithm revisions.
      operationId: search_algorithm_revisions
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          note:
            type: string
          is_primary:
            type: boolean
          plugin_id:
            type: string
          framework_id:
            type: string
          is_default_instance:
            type: boolean
          create_date:
            type: string
          origin_engines:
            type: array[object]
            fields:
              engine_id:
                type: string
              engine_name:
                type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/algorithmRevisionsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchAlgorithmRevisionsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/AlgorithmRevision'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /algorithms/{algorithmId}/revisions/{revisionId}:
    parameters:
      - $ref: '#/components/parameters/algorithmIdParam'
      - $ref: '#/components/parameters/algorithmRevisionIdParam'
    get:
      tags:
        - Algorithms
      summary: Retrieve a specific revision of an algorithm.
      operationId: get_algorithm_revision_by_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlgorithmRevision'
    patch:
      summary: Update an algorithm revision
      operationId: update_algorithm_revision
      tags:
        - Algorithms
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: update_algorithm_revision_parameter
              $ref: '#/components/schemas/UpdateAlgorithmRevisionParameters'
        description: The new data to update an algorithm revision.
        required: true
      responses:
        '200':
          description: Algorithm revision update initiated.
          content:
            application/json:
              schema:
                type: object
                title: UpdateAlgorithmRevisionResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
    delete:
      x-internal: true
      summary: Delete an algorithm revision.
      operationId: delete_algorithm_revision
      tags:
        - Algorithms
      responses:
        '200':
          description: Algorithm revision delete initiated.
          content:
            application/json:
              schema:
                type: object
                title: DeleteAlgorithmRevisionResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /algorithms/{algorithmId}/revisions/{revisionId}/make-primary:
    x-internal: true
    parameters:
      - $ref: '#/components/parameters/algorithmIdParam'
      - $ref: '#/components/parameters/algorithmRevisionIdParam'
    post:
      tags:
        - Algorithms
      summary: Set an algorithm revision to be the primary revision for the algorithm.
      operationId: set_algorithm_primary_revision
      responses:
        '200':
          description: Primary revision modification initiated.
          content:
            application/json:
              schema:
                type: object
                title: SetAlgorithmPrimaryRevisionResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /algorithms/{algorithmId}/revisions/{revisionId}/tags:
    parameters:
      - $ref: '#/components/parameters/algorithmIdParam'
      - $ref: '#/components/parameters/algorithmRevisionIdParam'
    get:
      tags:
        - Algorithms
      summary: Get tags for an AlgorithmRevision.
      operationId: get_algorithm_revision_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    post:
      tags:
        - Algorithms
      summary: Create tags for an AlgorithmRevision.
      operationId: create_algorithm_revision_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: algorithm_revision_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for AlgorithmRevision.
        required: true
      responses:
        '201':
          description: AlgorithmRevision tags created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /algorithms/{algorithmId}/revisions/{revisionId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/algorithmIdParam'
      - $ref: '#/components/parameters/algorithmRevisionIdParam'
    post:
      tags:
        - Algorithms
      summary: Delete tags for an AlgorithmRevision.
      operationId: delete_algorithm_revision_tags
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
      responses:
        '204':
          description: No Content
  /algorithms/search:
    post:
      tags:
        - Algorithms
      summary: Search for algorithms.
      operationId: search_algorithms
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          description:
            type: string
          framework_name:
            type: string
          plugin_name:
            type: string
          create_date:
            type: string
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/algorithmsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchAlgorithmsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Algorithm'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /masking-environments:
    get:
      tags:
        - MaskingEnvironments
      summary: Retrieve the list of masking environments.
      operationId: get_masking_environments
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/maskingEnvironmentsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListMaskingEnvironmentsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingEnvironment'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /masking-environments/search:
    post:
      tags:
        - MaskingEnvironments
      summary: Search masking environments.
      operationId: search_masking_environments
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          engine_id:
            type: string
          engine_name:
            type: string
          purpose:
            type: string
          is_workflow_enabled:
            type: boolean
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/maskingEnvironmentsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchMaskingEnvironmentsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingEnvironment'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /masking-environments/{maskingEnvironmentId}:
    parameters:
      - $ref: '#/components/parameters/maskingEnvironmentId'
    get:
      summary: Retrieve a MaskingEnvironment by ID.
      operationId: get_masking_environment_by_id
      tags:
        - MaskingEnvironments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaskingEnvironment'
  /virtualization-policies/search:
    post:
      tags:
        - VirtualizationPolicies
      summary: Search Virtualization Policies.
      operationId: search_virtualization_policies
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          namespace:
            type: string
          engine_id:
            type: string
          policy_type:
            type: string
          timezone_id:
            type: string
          namespace_id:
            type: string
          namespace_name:
            type: string
          is_replica:
            type: boolean
          default_policy:
            type: boolean
          effective_type:
            type: string
          data_duration:
            type: integer
          data_unit:
            type: string
          log_duration:
            type: integer
          log_unit:
            type: string
          num_of_daily:
            type: integer
          num_of_weekly:
            type: integer
          day_of_week:
            type: string
          num_of_monthly:
            type: integer
          day_of_month:
            type: integer
          num_of_yearly:
            type: integer
          day_of_year:
            type: string
          size:
            type: integer
          schedules:
            type: array[object]
            fields:
              cron_string:
                type: string
              cutoff_time:
                type: integer
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/virtualizationPoliciesSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchVirtualizationPoliciesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/VirtualizationPolicy'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /virtualization-policies/{policyId}:
    get:
      tags:
        - VirtualizationPolicies
      summary: Fetch a virtualization policy by Id.
      operationId: get_virtualization_policy_by_id
      parameters:
        - $ref: "#/components/parameters/virtualizationPolicyIdParam"
      responses:
        "200":
          description: Retuns a single virtualization policy
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualizationPolicy"
        "404":
          description: Virtualization policy not found
  /enabled-features-flag:
    x-internal: true
    get:
      summary: Get enabled feature flags.
      operationId: get_enabled_features_flag
      tags:
        - FeatureFlag
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: List of enabled features.
                type: array
                items:
                  type: string
                example: [ENGINE_DEEP_LINK, DSOURCE_LINKING]
  /masking-plugins:
    x-internal: true
    get:
      tags:
        - MaskingPlugins
      summary: Retrieve the list of masking plugins.
      operationId: get_masking_plugins
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/maskingPluginsSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListMaskingPluginsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingPlugin'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
    post:
      tags:
        - MaskingPlugins
      summary: Install a custom masking plugin.
      operationId: install_masking_plugin
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: install_masking_plugin_parameters
              $ref: "#/components/schemas/InstallMaskingPluginParameters"
        required: true
      responses:
        '201':
          description: Plugin installation initiated
          content:
            application/json:
              schema:
                type: object
                title: InstallMaskingPluginResponse
                properties:
                  id:
                    type: string
                    description: The installed plugin's ID.
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /masking-plugins/{maskingPluginId}:
    x-internal: true
    parameters:
      - $ref: '#/components/parameters/maskingPluginIdParam'
    get:
      summary: Get a masking plugin by ID or name.
      operationId: get_masking_plugin_by_id
      tags:
        - MaskingPlugins
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaskingPlugin'
    delete:
      summary: Delete a custom masking plugin.
      operationId: delete_masking_plugin
      tags:
        - MaskingPlugins
      responses:
        '200':
          description: Masking plugin delete initiated.
          content:
            application/json:
              schema:
                type: object
                title: DeleteMaskingPluginResponse
                properties:
                  job:
                    $ref: '#/components/schemas/Job'
                    description: The initiated job.
  /masking-plugins/{maskingPluginId}/tags:
    x-internal: true
    parameters:
      - $ref: '#/components/parameters/maskingPluginIdParam'
    get:
      tags:
        - MaskingPlugins
      summary: Get tags for a masking plugin.
      operationId: get_masking_plugin_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    post:
      tags:
        - MaskingPlugins
      summary: Create tags for a masking plugin.
      operationId: create_masking_plugin_tags
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: masking_plugin_tags
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for masking plugin.
        required: true
      responses:
        '201':
          description: Masking plugin tags created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /masking-plugins/{maskingPluginId}/tags/delete:
    x-internal: true
    parameters:
      - $ref: '#/components/parameters/maskingPluginIdParam'
    post:
      tags:
        - MaskingPlugins
      summary: Delete tags for a masking plugin.
      operationId: delete_masking_plugin_tags
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
      responses:
        '204':
          description: No Content
  /masking-plugins/search:
    x-internal: true
    post:
      tags:
        - MaskingPlugins
      summary: Search for masking plugins.
      operationId: search_masking_plugins
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          plugin_type:
            type: string
          description:
            type: string
          install_date:
            type: string
          built_in:
            type: boolean
          sdk_version:
            type: string
          version:
            type: string
          author:
            type: string
          frameworks:
            type: array[object]
            fields:
              id:
                type: string
              name:
                type: string
              description:
                type: string
              masking_type:
                type: string
                enum:
                  - STRING
                  - DATE
                  - LOCAL_DATE_TIME
                  - BIG_DECIMAL
                  - BYTE_BUFFER
                  - GENERIC_DATA_ROW
                  - ADVANCED_OBJECT
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/maskingPluginsSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchMaskingPluginsResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/MaskingPlugin'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /replication-profiles:
    get:
      summary: List all ReplicationProfiles.
      operationId: get_replication_profiles
      tags:
        - Replication
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/replicationProfilesSortParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: ListReplicationProfilesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReplicationProfile'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /replication-profiles/search:
    post:
      summary: Search for ReplicationProfiles.
      operationId: search_replication_profiles
      tags:
        - Replication
      x-filterable:
        fields:
          id:
            type: string
          name:
            type: string
          engine_id:
            type: string
          replication_tag:
            type: string
          type:
            type: string
          replication_objects:
            type: array[string]
          tags:
            type: array[object]
            fields:
              key:
                type: string
              value:
                type: string
          enable_tag_replication:
            type: boolean
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/replicationProfilesSortParam'
      requestBody:
        $ref: "#/components/requestBodies/SearchBody"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: SearchReplicationProfilesResponse
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReplicationProfile'
                  response_metadata:
                    $ref: "#/components/schemas/PaginatedResponseMetadata"
  /replication-profiles/{replicationProfileId}:
    parameters:
      - $ref: '#/components/parameters/replicationProfileIdParam'
    get:
      summary: Get a ReplicationProfile by ID.
      operationId: get_replication_profile_by_id
      tags:
        - Replication
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationProfile'

  /replication-profiles/{replicationProfileId}/tags:
    parameters:
      - $ref: '#/components/parameters/replicationProfileIdParam'
    post:
      tags:
        - Replication
      summary: Create tags for a ReplicationProfile.
      operationId: create_replication_profile_tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagsRequest"
        description: Tags information for ReplicationProfiles.
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
    get:
      tags:
        - Replication
      summary: Get tags for a ReplicationProfile.
      operationId: get_replication_profile_tags
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/TagsResponse"
  /replication-profiles/{replicationProfileId}/tags/delete:
    parameters:
      - $ref: '#/components/parameters/replicationProfileIdParam'
    post:
      tags:
        - Replication
      summary: Delete tags for a ReplicationProfile.
      operationId: delete_repliation_profile_tags
      requestBody:
        $ref: "#/components/requestBodies/DeleteTags"
      responses:
        '204':
          description: No Content
  /replication-profiles/{replicationProfileId}/enable-tag-replication:
    parameters:
      - $ref: "#/components/parameters/replicationProfileIdParam"
    post:
      summary: Enable tag replication for given ReplicationProfile.
      operationId: enable_tag_replication
      tags:
        - Replication
      responses:
        '202':
          description: Accepted
  /replication-profiles/{replicationProfileId}/disable-tag-replication:
    parameters:
      - $ref: "#/components/parameters/replicationProfileIdParam"
    post:
      summary: Disable tag replication for given ReplicationProfile.
      operationId: disable_tag_replication
      tags:
        - Replication
      responses:
        '200':
          description: OK
components:
  parameters:
    replicationProfilesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, engine_id, -engine_id, replication_tag, -replication_tag, type, -type]
        nullable: true
        example: name
    auditLogsSummaryReportSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: account_first_name
      required: false
      schema:
        type: string
        enum: [ account_id, -account_id, account_first_name, -account_first_name, account_last_name, -account_last_name, vdb_refreshes, -vdb_refreshes, masking_jobs, -masking_jobs ]
        nullable: true
        example: account_first_name
    limit:
      name: limit
      in: query
      description: >-
        Maximum number of objects to return per query. The value must be between 1
        and 1000. Default is 100.
      example: 50
      schema:
        type: integer
        minimum: 1
        maximum: 1000
        default: 100
    limitExtendedParam:
      name: limit
      in: query
      description: >-
        Maximum number of objects to return per query. The value must be between 1
        and 1000. Default is 10000.
      example: 100
      schema:
        type: integer
        minimum: 1
        maximum: 10000
        default: 10000
    cursor:
      name: cursor
      in: query
      description: >-
        Cursor to fetch the next or previous page of results. The value of this property must be extracted from the 'prev_cursor' or 'next_cursor' property of a PaginatedResponseMetadata which is contained in the response of list and search API endpoints.
      schema:
        type: string
        minLength: 1
        maxLength: 4096
    startDate:
      name: start_date
      in: query
      description: Report start date/time. Defaults to first API request.
      example: "2022-05-29T15:00:00-04:00"
      schema:
        type: string
        format: date-time
    endDate:
      name: end_date
      in: query
      description: Report end date/time. Defaults to current time.
      example: "2022-06-07T15:10:00-04:00"
      schema:
        type: string
        format: date-time
    apiMetricKind:
      name: api_metric_kind
      in: query
      description: Restrict the list to API usage metric of the given kind
      example: automation
      schema:
        type: string
        enum: [automation, governance]
    permission:
      name: permission
      in: query
      description: Restrict the objects, which are allowed.
      example: READ
      schema:
        $ref: '#/components/schemas/PermissionEnum'
    maskingJobDeleteForceParam:
      name: force
      in: query
      description: If true, ignores any failures to remove a masking job on an engine.
      example: true
      schema:
        type: boolean
        default: false
    envSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, namespace, -namespace, engine_id, -engine_id, enabled, -enabled, is_cluster, -is_cluster ]
        nullable: true
        example: name
    roleSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, description, -description ]
        nullable: true
        example: name
    accessGroupsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name ]
        nullable: true
        example: name
    virtualizationStorageReportSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: engine_id
      required: false
      schema:
        type: string
        enum: [ engine_id, -engine_id, engine_name, -engine_name, engine_hostname, -engine_hostname, total_capacity, -total_capacity, free_storage, -free_storage, used_storage, -used_storage, used_percentage, -used_percentage, dsource_count, -dsource_count, vdb_count, -vdb_count, total_object_count, -total_object_count ]
        nullable: true
        example: engine_id
    storageSavingsReportSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: dependant_vdbs
      required: false
      schema:
        type: string
        enum: [ dependant_vdbs, -dependant_vdbs, unvirtualized_space, -unvirtualized_space, virtualized_space, -virtualized_space, name, -name, engine_name, -engine_name, dsource_id, -dsource_id, estimated_savings, -estimated_savings, estimated_savings_perc, -estimated_savings_perc ]
        nullable: true
        example: dependant_vdbs
    EnginePerformanceAnalyticReportSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: engine_name
      required: false
      schema:
        type: string
        enum: [ engine_id, -engine_id, engine_name, -engine_name, cpu_cores_count, -cpu_cores_count, cpu_utilization, -cpu_utilization, total_memory, -total_memory, average_disk_latency_read, -average_disk_latency_read, average_disk_latency_write, -average_disk_latency_write, average_disk_latency_total, -average_disk_latency_total, average_disk_throughput_read, -average_disk_throughput_read, average_disk_throughput_write, -average_disk_throughput_write, average_disk_throughput_total, -average_disk_throughput_total, average_disk_iops_read, -average_disk_iops_read, average_disk_iops_write, -average_disk_iops_write, average_disk_iops_total, -average_disk_iops_total, average_nfs_latency_read, -average_nfs_latency_read, average_nfs_latency_write, -average_nfs_latency_write, average_nfs_latency_total, -average_nfs_latency_total, average_nfs_throughput_read, -average_nfs_throughput_read, average_nfs_throughput_write, -average_nfs_throughput_write, average_nfs_throughput_total, -average_nfs_throughput_total, average_nfs_iops_read, -average_nfs_iops_read, average_nfs_iops_write, -average_nfs_iops_write, average_nfs_iops_total, -average_nfs_iops_total, average_iscsi_latency_read, -average_iscsi_latency_read, average_iscsi_latency_write, -average_iscsi_latency_write, average_iscsi_latency_total, -average_iscsi_latency_total, average_iscsi_throughput_read, -average_iscsi_throughput_read, average_iscsi_throughput_write, -average_iscsi_throughput_write, average_iscsi_throughput_total, -average_iscsi_throughput_total, average_iscsi_iops_read, -average_iscsi_iops_read, average_iscsi_iops_write, -average_iscsi_iops_write, average_iscsi_iops_total, -average_iscsi_iops_total, average_network_throughput_transmit, -average_network_throughput_transmit, average_network_throughput_receive, -average_network_throughput_receive ]
        nullable: true
        example: engine_name
    EnginePerformanceAnalyticTrendSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: engine_name
      required: false
      schema:
        type: string
        enum: [ engine_id, -engine_id, trend_type, -trend_type, aggregation_period, -aggregation_period ]
        nullable: true
        example: engine_name
    vdbInventoryReportSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: name
      required: false
      schema:
        type: string
        enum: [ name, -name, type, -type, version, -version, parent_id, -parent_id, parent_name, -parent_name, creation_date, -creation_date, last_refreshed_date, -last_refreshed_date, parent_timeflow_location, -parent_timeflow_location, parent_timeflow_timestamp, -parent_timeflow_timestamp, parent_timeflow_timezone, -parent_timeflow_timezone, enabled, -enabled, status, -status, engine_name, -engine_name, storage_size, -storage_size ]
        nullable: true
        example: name
    dSourceUsageReportSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: name
      required: false
      schema:
        type: string
        enum: [ name, -name, unvirtualized_space, -unvirtualized_space, actual_space, -actual_space, dependant_vdbs, -dependant_vdbs, engine_name, -engine_name ]
        nullable: true
        example: name
    dSourceConsumptionReportSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: name
      required: false
      schema:
        type: string
        enum: [ name, -name, status, -status, database_type, -database_type, engine_id, -engine_id, engine_name, -engine_name, last_consumption_date, -last_consumption_date, ingested_size, -ingested_size ]
        nullable: true
        example: name
    reportingScheduleSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: report_id
      required: false
      schema:
        type: string
        enum: [ report_id, -report_id, report_type, -report_type, cron_expression, -cron_expression, time_zone, -time_zone, message, -message, file_format, -file_format, enabled, -enabled, sort_column, -sort_column ]
        nullable: true
        example: report_id
    engineSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, uuid, -uuid, type, -type, version, -version, name, -name, hostname, -hostname, cpu_core_count, -cpu_core_count, memory_size, -memory_size, data_storage_capacity, -data_storage_capacity, data_storage_used, -data_storage_used, username, -username, hashicorp_vault_id, -hashicorp_vault_id, connection_status, -connection_status, connection_status_details, -connection_status_details, engine_connection_status, -engine_connection_status, engine_connection_status_details, -engine_connection_status_details, masking_memory_used, -masking_memory_used, masking_allocated_memory, -masking_allocated_memory, masking_jobs_running, -masking_jobs_running, masking_max_concurrent_jobs, -masking_max_concurrent_jobs, masking_available_cores, -masking_available_cores ]
        nullable: true
        example: name
    hyperscaleInstanceIdParam:
      in: path
      name: hyperscaleInstanceId
      required: true
      schema:
        type: string
        minLength: 1
      description: The ID of the Hyperscale Instance.
    hyperscaleInstancesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, hostname, -hostname, creation_date, -creation_date, status, -status, data_type, -data_type ]
        nullable: true
        example: name
    hyperscaleMountPointsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, hostname, -hostname, mount_type, -mount_type, options, -options, mount_path, -mount_path, hyperscale_instance_id, -hyperscale_instance_id ]
        nullable: true
        example: name
    hyperscaleConnectorsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, hyperscale_instance_id, -hyperscale_instance_id, data_type, -data_type, source_username, -source_username, source_jdbc_url, -source_jdbc_url, source_mongo_url, -source_mongo_url, target_username, -target_username, target_jdbc_url, -target_jdbc_url, target_mongo_url, -target_mongo_url]
        nullable: true
        example: source_username
    hyperscaleDatasetsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, hyperscale_instance_id, -hyperscale_instance_id, data_type, -data_type, connector_id, -connector_id, mount_point_id, -mount_point_id]
        nullable: true
        example: id
    hyperscaleDatasetTablesOrFilesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, schema_name, -schema_name, table_name, -table_name, database_name, -database_name, collection_name, -collection_name, filter_key, -filter_key, column_array_rows, -column_array_rows, unload_split, -unload_split, stream_size, -stream_size ]
        nullable: true
        example: table_name
    vdbsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, database_type, -database_type, name, -name, database_version, -database_version, size, -size, engine_id, -engine_id, status, -status, environment_id, -environment_id, ip_address, -ip_address, fqdn, -fqdn, parent_id, -parent_id, parent_dsource_id, -parent_dsource_id, group_name, -group_name, creation_date, -creation_date, last_refreshed_date, -last_refreshed_date, engine_name, -engine_name, storage_size, -storage_size, locked_by, -locked_by, locked_by_name, -locked_by_name, primary_object_id, -primary_object_id, primary_engine_id, -primary_engine_id, primary_engine_name, -primary_engine_name]
        nullable: true
        example: name
    toolkitSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [id,type,pretty_name,name,reference,version,display_name,plugin_id,external_version,engine_name,engine_id,type,-id,-type,-pretty_name,-name,-reference,-version,-display_name,-plugin_id,-external_version,-engine_name,-engine_id,-type]
        nullable: true
        example: name
    algorithmsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies a descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, description, -description, plugin_name, -plugin_name, framework_name, -framework_name, create_date, -create_date ]
        nullable: true
        example: name
    algorithmRevisionsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies a descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, note, -note, plugin_id, -plugin_id, framework_id, -framework_id, is_primary, -is_primary, is_default_instance, -is_default_instance, create_date, -create_date ]
        nullable: true
        example: name
    maskingJobsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies a descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, is_on_the_fly_masking, -is_on_the_fly_masking, creation_date, -creation_date, last_completed_execution_date, -last_completed_execution_date, last_execution_status, -last_execution_status, last_execution_id, -last_execution_id, ruleset.name, -ruleset.name, connector_type, -connector_type, description, -description, dataset_id, -dataset_id, retain_execution_data, -retain_execution_data, parallelism_degree, -parallelism_degree, max_concurrent_target_connections, -max_concurrent_target_connections, max_concurrent_source_connections, -max_concurrent_source_connections, num_input_streams, -num_input_streams, stream_row_limit, -stream_row_limit, feedback_size, -feedback_size, min_memory, -min_memory, max_memory, -max_memory ]
        nullable: true
        example: name
    maskingExecutionMetricsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies a descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, masking_job_name, -masking_job_name, connector_type, -connector_type, ruleset_name,
          -ruleset_name, rows_masked, -rows_masked,
          rows_total, -rows_total,
          bytes_masked, -bytes_masked,
          bytes_total, -bytes_total,
          duration, -duration,
          tables_files_count, -tables_files_count,
          masked_tables_files_count, -masked_tables_files_count,
          columns_fields_count, -columns_fields_count,
          masked_columns_fields_count, -masked_columns_fields_count,
          masking_job_type, -masking_job_type
        ]
        nullable: true
        example: name
    maskingEnvironmentsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies a descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, engine_id, -engine_id, engine_name, -engine_name, purpose, -purpose, is_workflow_enabled, -is_workflow_enabled ]
        nullable: true
        example: name
    virtualizationPoliciesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies a descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, engine_id, -engine_id, policy_type, -policy_type, timezone_id, -timezone_id, default_policy, -default_policy, effective_type, -effective_type, data_duration, -data_duration, data_unit, -data_unit, log_duration, -log_duration, log_unit, -log_unit, num_of_daily, -num_of_daily, num_of_weekly, -num_of_weekly, day_of_week, -day_of_week, num_of_monthly, -num_of_monthly, day_of_month, -day_of_month, num_of_yearly, -num_of_yearly, day_of_year, -day_of_year, size, -size ]
        nullable: true
        example: name
    maskingJobSourceEnginesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies a descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ masking_job_id, -masking_job_id, source_engine_id, -source_engine_id ]
        nullable: true
        example: name
    executionsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies a descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, engine_id, -engine_id, engine_name, -engine_name, masking_job_id, -masking_job_id, masking_job_name, -masking_job_name, source_connector_id, -source_connector_id, target_connector_id, -target_connector_id, status, -status, rows_masked, -rows_masked, rows_total, -rows_total, bytes_processed, -bytes_processed, bytes_total, -bytes_total, start_time, -start_time, end_time, -end_time, submit_time, -submit_time ]
        nullable: true
        example: name
    executionEventsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies a descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, execution_id, -execution_id, event_type, -event_type, severity, -severity, cause, -cause, count, -count, timestamp, -timestamp, masked_object_name, -masked_object_name, bytes_processed, -bytes_processed, algorithm_name, -algorithm_name, exception_type, -exception_type, exception_detail, -exception_detail ]
        nullable: true
        example: id
    connectorsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies a descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, engine_id, -engine_id, type, -type, name, -name, hostname, -hostname, username, -username, port, -port ]
        nullable: true
        example: name
    jobsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, status, -status, type, -type, localized_type, -localized_type, target_id, -target_id, target_name, -target_name, start_time, -start_time, update_time, -update_time, error_details, -error_details, trace_id, -trace_id, account_id, -account_id, account_name, -account_name ]
        nullable: true
        default: -start_time
        example: id
    dsourcesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, database_type, -database_type, name, -name, database_version, -database_version, data_uuid, -data_uuid, storage_size, -storage_size, plugin_version, -plugin_version, creation_date, -creation_date, group_name, -group_name, enabled, -enabled, engine_id, -engine_id, source_id, -source_id, status, -status, engine_name, -engine_name, primary_object_id, -primary_object_id, primary_engine_id, -primary_engine_id, primary_engine_name, -primary_engine_name, sync_policy_id, -sync_policy_id,retention_policy_id, -retention_policy_id, quota_policy_id, -quota_policy_id]
        nullable: true
        example: name
    sourcesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, database_type, -database_type, name, -name, database_version, -database_version, environment_id, -environment_id, data_uuid, -data_uuid, ip_address, -ip_address, fqdn, -fqdn, size, -size, jdbc_connection_string, -jdbc_connection_string, plugin_version, -plugin_version, is_dsource, -is_dsource ]
        nullable: true
        example: name
    stagingSourcesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, database_type, -database_type, database_name, -database_name, database_version, -database_version, environment_id, -environment_id, data_uuid, -data_uuid, ip_address, -ip_address, fqdn, -fqdn, repository, -repository, oracle_config_type, -oracle_config_type, cdb_type, -cdb_type, dsource_id, -dsource_id ]
        nullable: true
        example: name
    cdbsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, database_version, -database_version, environment_id, -environment_id, size, -size, jdbc_connection_string, -jdbc_connection_string, engine_id, -engine_id ]
        nullable: true
        example: name
    vcdbsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, database_version, -database_version, environment_id, -environment_id, size, -size, engine_id, -engine_id, status, -status, parent_id, -parent_id, creation_date, -creation_date, group_name, -group_name, enabled, -enabled ]
        nullable: true
        example: name
    bookmarksSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, creation_date, -creation_date, vdb_ids, -vdb_ids, retention, -retention ]
        nullable: true
        example: name
    apiUsageReportGroupByParam:
      name: group_by
      in: query
      description: The field to group results by.
      required: false
      schema:
        type: array
        items:
          enum: [ api_endpoint, api_method, kind, client_name, user_agent, dct_version ]
        minItems: 1
    apiUsageReportClientNameFilterParam:
      name: client_name
      in: query
      description: The Client names to be included in the report.
      required: false
      schema:
        type: array
        items:
          type: string
        minLength: 1
    apiUsageReportUserAgentFilterParam:
      name: user_agent
      in: query
      description: The UserAgent names to be included in the report.
      required: false
      schema:
        type: array
        items:
          type: string
        minLength: 1
    apiUsageReportDctVersionFilterParam:
      name: dct_version
      in: query
      description: The DCT versions to be included in the report.
      required: false
      schema:
        type: array
        items:
          type: string
        minLength: 1
    vdbGroupsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, locked_by, -locked_by, locked_by_name, -locked_by_name ]
        nullable: true
        example: name
    hashicorpVaultsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id ]
        nullable: true
        example: name
    accountsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, api_client_id, -api_client_id, username, first_name, last_name, email, -username, -first_name, -last_name, -email, last_access_time, -last_access_time, creation_time, -creation_time]
        nullable: true
        example: id
    databaseTemplatesSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, description, -description, source_type, -source_type ]
        nullable: true
        example: name
    snapshotsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, engine_id, -engine_id, namespace, -namespace, name, -name, consistency, -consistency, missing_non_logged_data, -missing_non_logged_data, dataset_id, -dataset_id, creation_time, -creation_time, start_timestamp, -start_timestamp, start_location, -start_location, timestamp, -timestamp, location, -location, expiration, -expiration, retain_forever, -retain_forever, effective_expiration, -effective_expiration, effective_retain_forever, -effective_retain_forever, timeflow_id, -timeflow_id, timezone, -timezone, version, -version, temporary, -temporary, appdata_toolkit, -appdata_toolkit, appdata_metadata, -appdata_metadata, ase_db_encryption_key, -ase_db_encryption_key, mssql_internal_version, -mssql_internal_version, mssql_backup_set_uuid, -mssql_backup_set_uuid, mssql_backup_software_type, -mssql_backup_software_type, mssql_backup_location_type, -mssql_backup_location_type, mssql_empty_snapshot, -mssql_empty_snapshot, oracle_from_physical_standby_vdb, -oracle_from_physical_standby_vdb, oracle_redo_log_size_in_bytes, -oracle_redo_log_size_in_bytes ]
        nullable: true
        example: name
    timeflowsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, engine_id, -engine_id, namespace, -namespace, name, -name, dataset_id, -dataset_id, creation_type, -creation_type, parent_snapshot_id, -parent_snapshot_id, parent_point_location, -parent_point_location, parent_point_timestamp, -parent_point_timestamp, parent_point_timeflow_id, -parent_point_timeflow_id, source_data_timestamp, -source_data_timestamp, oracle_incarnation_id, -oracle_incarnation_id, oracle_cdb_timeflow_id, -oracle_cdb_timeflow_id, oracle_tde_uuid, -oracle_tde_uuid, mssql_database_guid, -mssql_database_guid ]
        nullable: true
        example: name
    groupSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, engine_id, -engine_id, namespace, -namespace, name, -name, engine_name, -engine_name]
        nullable: true
        example: name
    groupIdParam:
      in: path
      name: groupId
      required: true
      schema:
        type: string
        minLength: 1
      description: The ID of the dataset group.
    kerberosConfigSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, engine_id, -engine_id, engine_name, -engine_name, namespace_id, -namespace_id, namespace_name, -namespace_name, name, -name,  realm, -realm, principal, -principal, enabled, -enabled ]
        nullable: true
        example: name
    passwordVaultSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [id, -id, engine_id, -engine_id, namespace, -namespace, name, -name, engine_name, -engine_name, type, -type]
        nullable: true
        example: name
    passwordVaultIdParam:
      in: path
      name: passwordVaultId
      required: true
      schema:
        type: string
        minLength: 1
      description: The ID of the password vault.
    kerberosConfigIdParam:
      in: path
      name: kerberosConfigId
      required: true
      schema:
        type: string
        minLength: 1
      description: The ID of the kerberos config.
    engineIdQueryParam:
      in: query
      name: engine_id
      description: ID of a registered engine.
      required: true
      schema:
        type: string
        minLength: 1
      example: 1
    vdbIdParam:
      in: path
      name: vdbId
      required: true
      schema:
        type: string
        minLength: 1
      description: The ID of the VDB.
    toolkitIdParam:
      in: path
      name: toolkitId
      required: true
      schema:
        type: string
        minLength: 1
      description: The ID of the toolkit.
    hyperscaleMountPointIdParam:
      in: path
      name: hyperscaleMountPointId
      required: true
      schema:
        type: string
        minLength: 1
      description: The ID of the Hyperscale Mount Point.
    hyperscaleConnectorIdParam:
      in: path
      name: hyperscaleConnectorId
      required: true
      schema:
        type: string
        minLength: 1
      description: The ID of the Hyperscale Connector.
    hyperscaleDatasetIdParam:
      in: path
      name: hyperscaleDatasetId
      required: true
      schema:
        type: string
        minLength: 1
      description: The ID of the Hyperscale Dataset.
    hyperscaleDatasetTableOrFileIdParam:
      in: path
      name: hyperscaleDatasetTableOrFileId
      required: true
      schema:
        type: string
        minLength: 1
      description: The ID of the Hyperscale Dataset table or file.
    datasetIdQueryParam:
      in: query
      required: true
      name: dataset_id
      schema:
        type: string
        minLength: 1
      description: The ID of the dSource or VDB.
      example: dataset-123
    replicationProfileIdParam:
      in: path
      name: replicationProfileId
      required: true
      schema:
        type: string
        minLength: 1
      description: The ID of the ReplicationProfile.
    virtualizationPolicyIdParam:
      in: path
      name: policyId
      required: true
      schema:
        type: string
        minLength: 1
      description: The ID of the Virtualization Policy.
    cdbIdParam:
      in: path
      name: cdbId
      required: true
      schema:
        type: string
        minLength: 1
      description: The ID of the CDB.
    sourceIdParam:
      in: path
      name: sourceId
      required: true
      schema:
        type: string
        minLength: 1
      description: The ID of the Source.
    stagingSourceIdParam:
      in: path
      name: stagingSourceId
      required: true
      schema:
        type: string
        minLength: 1
      description: The ID of the staging Source.
    vcdbIdParam:
      in: path
      name: vcdbId
      required: true
      schema:
        type: string
        minLength: 1
      description: The ID of the vCDB.
    vdbGroupIdParam:
      in: path
      name: vdbGroupId
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 256
      description: The ID or name of the VDBGroup.
    engineIdParam:
      in: path
      name: engineId
      schema:
        type: string
      required: true
      description: The ID of the registered engine.
    hyperscaleInstanceId:
      in: path
      name: hyperscaleInstanceId
      schema:
        type: string
      required: true
      description: The ID of hyperscale instance.
    dsourceIdParam:
      in: path
      name: dsourceId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the dSource.
    environmentIdParam:
      in: path
      name: environmentId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the environment.
    hostIdParam:
      in: path
      name: hostId
      schema:
        type: string
        minLength: 1
        maxLength: 256
      required: true
      description: The ID of the host.
    repositoryIdParam:
      in: path
      name: repositoryId
      schema:
        type: string
        minLength: 1
        maxLength: 256
      required: true
      description: The ID of the repository.
    userRefParam:
      in: path
      name: userRef
      schema:
        type: string
        minLength: 1
      required: true
      description: Environment user reference.
    reportIdParam:
      in: path
      name: reportId
      schema:
        type: integer
      required: true
      description: The ID of the report schedule.
    algorithmIdParam:
      in: path
      name: algorithmId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the Algorithm.
    algorithmRevisionIdParam:
      in: path
      name: revisionId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the Algorithm revision.
    maskingPluginIdParam:
      in: path
      name: maskingPluginId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the masking plugin.
    bookmarkIdParam:
      in: path
      name: bookmarkId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the Bookmark.
    snapshotIdParam:
      in: path
      name: snapshotId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the snapshot.
    timeflowIdParam:
      in: path
      name: timeflowId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the timeflow.
    accessGroupIdParam:
      in: path
      name: accessGroupId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the Access group.
    roleIdParam:
      in: path
      name: roleId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the role.
    scopeIdParam:
      in: path
      name: scopeId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the Access group scope.
    accountIdParam:
      in: path
      name: id
      schema:
        type: integer
        format: int64
      required: true
      description: Numeric ID of the Account.
    maskingJobIdParam:
      in: path
      name: maskingJobId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the Masking Job.
    maskingEnvironmentId:
      in: path
      name: maskingEnvironmentId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the Masking Environment.
    executionIdParam:
      in: path
      name: executionId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the Execution.
    connectorIdParam:
      in: path
      name: connectorId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the Connector.
    databaseTemplateIdParam:
      in: path
      name: databaseTemplateId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the Database Template.
    objectIdParam:
      in: path
      name: objectId
      schema:
        type: string
        minLength: 1
      required: true
      description: The ID of the DCT Object.
    objectTypeParam:
      in: path
      name: objectType
      schema:
        type: string
        enum: [ ACCESS_GROUP,ACCOUNT,AUDIT_LOGS_SUMMARY_REPORT,ROLE,API_USAGE_REPORT,BOOKMARK,CDB,DATABASE_TEMPLATE,DSOURCE,ENGINE,ENVIRONMENT,MASKING_JOB,MASKING_ENVIRONMENT,MASKING_JOB_SET,REPORT_SCHEDULE,SOURCE,VAULT,VCDB,VDB,VDB_GROUP,CONNECTOR,CONNECTIVITY_CHECK,DSOURCE_USAGE_REPORT,DSOURCE_CONSUMPTION_REPORT,JOB,PRODUCT_INFO,SMTP_CONFIG,MASKING_EXECUTION_METRICS_REPORT,STORAGE_SUMMARY_REPORT,STORAGE_SAVINGS_SUMMARY_REPORT,VDB_INVENTORY_REPORT,LDAP,SAML,PASSWORD_POLICY,GLOBAL_PROPERTIES,SYSTEM,API_CLASSIFICATION,VIRTUALIZATION_POLICY,HYPERSCALE_INSTANCE,HYPERSCALE_CONNECTOR,HYPERSCALE_DATASET,MASKING_PLUGIN,REPLICATION_PROFILE,ENGINE_PERFORMANCE_ANALYTIC_REPORT]
      required: true
      description: The type of the DCT object.
    maskingPluginsSortParam:
      name: sort
      in: query
      description: The field to sort results by. A property name with a prepended '-' signifies a descending order.
      example: id
      required: false
      schema:
        type: string
        enum: [ id, -id, name, -name, plugin_type, -plugin_type, description, -description, install_date, -install_date, built_in, -built_in, sdk_version, -sdk_version, version, -version, author, -author]
        nullable: true
        example: name
  schemas:
    ReplicationProfile:
      description: A set of rules that define what data is replicated from a source to a target.
      type: object
      properties:
        id:
          description: The ReplicationProfile ID.
          type: string
        name:
          description: The ReplicationProfile name.
          type: string
        type:
          description: The ReplicationProfile type.
          type: string
        engine_id:
          description: The ID of the engine that the ReplicationProfile belongs to.
          type: string
        replication_tag:
          description: Globally unique identifier for this ReplicationProfile.
          type: string
        replication_objects:
          description: The objects that are replicated by this ReplicationProfile.
          type: array
          items:
            type: string
        tags:
          description: The tags that are applied to this ReplicationProfile.
          type: array
          items:
              $ref: '#/components/schemas/Tag'
        enable_tag_replication:
          description: Indicates whether tag replication from primary object to replica object is enable or disabled for this ReplicationProfile.
          type: boolean
    EnableDsourceParameters:
      description: The parameters to enable a dSource.
      type: object
      properties:
        attempt_start:
          description: Whether to attempt a startup of the source after the enable.
          type: boolean
          default: true
    DisableDsourceParameters:
      type: object
      properties:
        attempt_cleanup:
          description: Whether to attempt a cleanup of the database from the environment before the disable.
          type: boolean
          default: true
    AuditLogsSummary:
      description: The summary of actions performed by an account.
      type: object
      properties:
        account_id:
          type: integer
          format: int64
        account_first_name:
          type: string
          minLength: 1
          maxLength: 256
        account_last_name:
          type: string
          minLength: 1
          maxLength: 256
        vdb_refreshes:
          description: The number of VDB refreshes performed by the account.
          type: integer
          format: int32
        masking_jobs:
          description: The number of compliance jobs executed by the account.
          type: integer
          format: int32
    EnginePerformanceAnalytic:
      description: Analytics Information of the engine.
      type: object
      properties:
        engine_name:
          description: The engine name.
          type: string
        engine_id:
          description: The engine id.
          type: string
        engine_type:
          description: The engine type.
          type: string
          enum: [ VIRTUALIZATION, MASKING, UNSET ]
        aggregation_period:
          description: The time period by which engine performance analytics data is being aggregated, in hours.
          type: integer
        cpu_cores_count:
          description: The total number of CPU cores on this engine.
          type: integer
        cpu_utilization:
          description: The total cpu utilization of this engine, in percentage.
          type: number
          format: double
        total_memory:
          description: The total amount of memory on this engine, in bytes.
          type: integer
          format: int64
        average_disk_latency_read:
          description: The average I/O latency of disk for read operation, in nanoseconds.
          type: integer
          format: int64
        average_disk_latency_write:
          description: The average I/O latency of disk for write operation, in nanoseconds.
          type: integer
          format: int64
        average_disk_latency_total:
          description: The average I/O latency of disk for both (read and write) operations, in nanoseconds.
          type: integer
          format: int64
        average_disk_throughput_read:
          description: The average I/O throughput of disk for read operation, in bytes/s.
          type: integer
          format: int64
        average_disk_throughput_write:
          description: The average I/O throughput of disk for write operation, in bytes/s.
          type: integer
          format: int64
        average_disk_throughput_total:
          description: The average I/O throughput of disk for both (read and write) operations, in bytes/s.
          type: integer
          format: int64
        average_disk_iops_read:
          description: The average number of read I/O operations of disk per seconds.
          type: integer
          format: int64
        average_disk_iops_write:
          description: The average number of write I/O operations of disk per seconds.
          type: integer
          format: int64
        average_disk_iops_total:
          description: The average number of read and write I/O operations of disk per seconds.
          type: integer
          format: int64
        average_nfs_latency_read:
          description: The average I/O latency of nfs for read operation, in nanoseconds.
          type: integer
          format: int64
        average_nfs_latency_write:
          description: The average I/O latency of nfs for write operation, in nanoseconds.
          type: integer
          format: int64
        average_nfs_latency_total:
          description: The average I/O latency of nfs for both (read and write) operation, in nanoseconds.
          type: integer
          format: int64
        average_nfs_throughput_read:
          description: The average I/O throughput of disk for read operations, in bytes/s.
          type: integer
          format: int64
        average_nfs_throughput_write:
          description: The average I/O throughput of nfs for write operations, in bytes/s.
          type: integer
          format: int64
        average_nfs_throughput_total:
          description: The average I/O throughput of nfs for both (read and write) operations, in bytes/s.
          type: integer
          format: int64
        average_nfs_iops_read:
          description: The average number of read I/O operations of nfs per seconds.
          type: integer
          format: int64
        average_nfs_iops_write:
          description: The average number of write I/O operations of nfs per seconds.
          type: integer
          format: int64
        average_nfs_iops_total:
          description: The average number of read and write I/O operations of nfs per seconds.
          type: integer
          format: int64
        average_iscsi_latency_read:
          description: The average I/O latency of iSCSI for read operation, in nanoseconds.
          type: integer
          format: int64
        average_iscsi_latency_write:
          description: The average I/O latency of iSCSI for write operation, in nanoseconds.
          type: integer
          format: int64
        average_iscsi_latency_total:
          description: The average I/O latency of iSCSI for both (read and write) operation, in nanoseconds.
          type: integer
          format: int64
        average_iscsi_throughput_read:
          description: The average I/O throughput of iSCSI read operations, in bytes/s.
          type: integer
          format: int64
        average_iscsi_throughput_write:
          description: The average I/O throughput of iSCSI for write operations, in bytes/s.
          type: integer
          format: int64
        average_iscsi_throughput_total:
          description: The average I/O throughput of iSCSI for both (read and write) operations, in bytes/s.
          type: integer
          format: int64
        average_iscsi_iops_read:
          description: The average number of read I/O operations of iSCSI per seconds.
          type: integer
          format: int64
        average_iscsi_iops_write:
          description: The average number of write I/O operations of iSCSI per seconds.
          type: integer
          format: int64
        average_iscsi_iops_total:
          description: The average number of read and write I/O operations of iSCSI per seconds.
          type: integer
          format: int64
        average_network_throughput_transmit:
          description: The average bytes transmitted on the network interface, in bytes/s.
          type: integer
          format: int64
        average_network_throughput_receive:
          description: The average bytes received on the network interface, in bytes/s.
          type: integer
          format: int64

    EnginePerformanceAnalyticTrend:
      type: object
      properties:
        trend_type:
          type: string
          enum:
            - CPU_UTILIZATION
            - NETWORK_THROUGHPUT_TRANSMIT
            - NETWORK_THROUGHPUT_RECEIVE
            - DISK_LATENCY_WRITE
            - DISK_LATENCY_READ
            - DISK_LATENCY_TOTAL
            - DISK_THROUGHPUT_WRITE
            - DISK_THROUGHPUT_READ
            - DISK_THROUGHPUT_TOTAL
            - DISK_IOPS_READ
            - DISK_IOPS_WRITE
            - DISK_IOPS_TOTAL
            - NFS_LATENCY_WRITE
            - NFS_LATENCY_READ
            - NFS_LATENCY_TOTAL
            - NFS_THROUGHPUT_WRITE
            - NFS_THROUGHPUT_READ
            - NFS_THROUGHPUT_TOTAL
            - NFS_IOPS_WRITE
            - NFS_IOPS_READ
            - NFS_IOPS_TOTAL
            - iSCSI_LATENCY_WRITE
            - iSCSI_LATENCY_READ
            - iSCSI_LATENCY_TOTAL
            - iSCSI_THROUGHPUT_WRITE
            - iSCSI_THROUGHPUT_READ
            - iSCSI_THROUGHPUT_TOTAL
            - iSCSI_IOPS_WRITE
            - iSCSI_IOPS_READ
            - iSCSI_IOPS_TOTAL
          example: 'CPU_UTILIZATION'
        engine_id:
          description: The engine id.
          type: string
        aggregation_period:
          description: The time period by which engine performance analytics data is being aggregated, in hours.
          type: integer
          example: 6
        datapoint:
          type: array
          items:
            type: object
            properties:
              data:
                type: integer
                format: int64
              time:
                type: string
                format: date-time

    AuditLogsSummaryTotals:
      description: The global totals of different actions performed across all accounts.
      type: object
      properties:
        total_vdb_refreshes:
          type: integer
          format: int32
        total_masking_jobs:
          type: integer
          format: int32
    ObjectPermissionsResponse:
      description: The object permissions for a given object in DCT based on object type and object id.
      type: object
      properties:
        accounts:
          description: The Accounts permitted for this object.
          type: array
          items:
            $ref: '#/components/schemas/ObjectPermissionAccount'
    ObjectPermissionAccount:
      description: The account details for object permission.
      type: object
      properties:
        id:
          description: Numeric ID of the Account.
          type: integer
          format: int64
        first_name:
          description:  First name of the Account.
          type: string
        last_name:
          description: Last name of the Account.
          type: string
        email:
          description: Email of the Account.
          type: string
        access_groups:
          description: Access groups of the Account.
          type: array
          items:
            $ref: '#/components/schemas/ObjectPermissionAccessGroups'
    ObjectPermissionAccessGroups:
      description: The account groups for object permission account.
      type: object
      properties:
        id:
          description: ID of the access group.
          type: string
        name:
          description: Name of the access group.
          type: string
        permissions:
          description: Permissions for the object in this access group.
          type: array
          items:
            type: string
    AccessGroup:
      description: An Access group is the DCT mechanism to grant roles to accounts. Each account has its own Access
        Group which can be used to manage permissions for that account, and an unlimited number of other
        Access groups can be created to manage permissions by groups of accounts.
      type: object
      required:
        - name
      properties:
        id:
          description: The Access group ID.
          type: string
          readOnly: true
        name:
          description: The Access group name
          type: string
          minLength: 1
          maxLength: 256
        single_account:
          description: Indicates that this Access group defines the permissions of a single account, and thus
            account and account tags cannot be modified. Instead create a new Access group to manage
            permissions of multiple accounts.
          type: boolean
        account_ids:
          description: List of accounts ids included individually (as opposed to added by tags) in the Access group.
          type: array
          items:
            type: integer
            format: int64
        tagged_account_ids:
          description: List of accounts ids included by tags in the Access group.
          readOnly: true
          type: array
          items:
            type: integer
            format: int64
        account_tags:
          description: List of account tags. Accounts matching any of these tags will be automatically added to
            the Access group.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        scopes:
          description: The Access group scopes.
          type: array
          items:
            $ref: '#/components/schemas/AccessGroupScope'
    AccessGroupUpdateParameters:
      type: object
      properties:
        name:
          description: The Access group name
          type: string
          minLength: 1
          maxLength: 256
    RoleUpdateParameters:
      type: object
      properties:
        name:
          description: The role name
          type: string
          minLength: 1
          maxLength: 256
        description:
          description: The role description
          type: string
          minLength: 1
          maxLength: 512
    PermissionObject:
      description: A Permission Object which is mapping between object type and its permissions.
      allOf:
        - $ref: '#/components/schemas/ObjectTypeProperty'
        - $ref: '#/components/schemas/PermissionProperty'
    ObjectTypeProperty:
      description: A DCT object type.
      type: object
      required:
        - object_type
      properties:
        object_type:
          description: Object type.
          type: string
          enum: [ ACCESS_GROUP,ACCOUNT,AUDIT_LOGS_SUMMARY_REPORT,ROLE,API_USAGE_REPORT,BOOKMARK,CDB,DATABASE_TEMPLATE,DSOURCE,ENGINE,ENVIRONMENT,MASKING_JOB,MASKING_ENVIRONMENT,MASKING_ALGORITHM_REVISION,MASKING_JOB_SET,REPORT_SCHEDULE,SOURCE,VAULT,VCDB,VDB,VDB_GROUP,CONNECTOR,CONNECTIVITY_CHECK,DSOURCE_USAGE_REPORT,DSOURCE_CONSUMPTION_REPORT,JOB,PHONEHOME_BUNDLE,PRODUCT_INFO,PRODUCT_REGISTRATION,PROXY_CONFIGURATION,SMTP_CONFIG,MASKING_EXECUTION_METRICS_REPORT,STORAGE_SUMMARY_REPORT,STORAGE_SAVINGS_SUMMARY_REPORT,VDB_INVENTORY_REPORT,LDAP,SAML,PASSWORD_POLICY,GLOBAL_PROPERTIES,SYSTEM,API_CLASSIFICATION,VIRTUALIZATION_POLICY,DATASET_GROUP,METADATA_DATABASE,ENGINE_VAULT,KERBEROS_CONFIG,TIMEFLOW,MASKING_ALGORITHM,HYPERSCALE_INSTANCE,HYPERSCALE_CONNECTOR,HYPERSCALE_DATASET,TOOLKIT,MASKING_PLUGIN,REPLICATION_PROFILE,ENGINE_PERFORMANCE_ANALYTIC_REPORT,STAGING_SOURCE]
          example: 'VDB'
    PermissionProperty:
      description: A Permission object.
      type: object
      required:
        - permissions
      properties:
        permissions:
          description: List of permissions.
          type: array
          items:
            type: string
            enum: [CREATE,READ,UPDATE,DELETE,EXECUTE,CANCEL,MIGRATE,REFRESH,DISABLE,ENABLE,GLOBAL_SYNC_ENGINES,ABANDON,VALIDATE,START,STOP,SNAPSHOT,COPY,REMOVE_JOB,PASSWORD_RESET,UNDO_IMPORT,IMPORT,PROVISION_FROM_BOOKMARK,PROVISION,REFRESH_FROM_BOOKMARK,REFRESH_FROM_SNAPSHOT,REFRESH_FROM_TIMESTAMP,CREATE_ENVIRONMENT,CREATE_BOOKMARK,CREATE_VDBGROUP, MANAGE_TAGS, SET_TAGS_AT_OBJECT_CREATION, SNAPSHOT_UPDATE, SNAPSHOT_DELETE, SWITCH_TIMEFLOW, UPDATE_TIMEFLOW, DELETE_TIMEFLOW,LINK, LOCK, UNLOCK, LOCK_FOR_OTHER_ACCOUNT, FORCE_UNLOCK, ADD_ENGINE_TO_HYPERSCALE, UPLOAD_MASKING_FILE]
          minItems: 1
          maxItems: 1000
          uniqueItems: true
    ApiClassificationObject:
      description: An API classification object which classifies APIs as automation or governance.
      type: object
      properties:
        api_method:
          description: HTTP method of the API.
          type: string
          enum: [ GET,POST,PUT,PATCH,DELETE ]
          example: 'POST'
        path:
          description: context path of the API.
          type: string
          minLength: 1
          maxLength: 256
          example: '/vdb-groups'
        is_automation:
          description: Either this API is automation or not.
          type: boolean
          example: true
        start_date:
          description: The start date and time from when this api's is_automation definition has changed.
          type: string
          format: date-time
        end_date:
          description: The end date and time from when this api's is_automation definition has changed.
          type: string
          format: date-time
    AllObjectPermissionsResponse:
      type: object
      properties:
        object_permissions:
          type: array
          items:
            $ref: '#/components/schemas/PermissionObject'
    AccessGroupScope:
      description: An Access group scope allows a role to be granted to accounts in the Access group.
      type: object
      required:
        - role_id
      properties:
        id:
          description: The Access group scope ID.
          type: string
          readOnly: true
        name:
          description: The Access group scope name.
          type: string
          minLength: 1
          maxLength: 256
        role_id:
          description: The Access group role id.
          type: string
          minLength: 1
          maxLength: 256
        scope_type:
          description: Specifies the type of the scope. Scope of type SIMPLE would grant access to all DCT objects. Scope of type SCOPED would grant access to all objects based on objects and object-tags and permissions defined in linked role. Scope of type ADVANCED would grant access to DCT objects based on objects and object-tags and the individual permissions.
          type: string
          enum:
            - SIMPLE
            - SCOPED
            - ADVANCED
          example: SCOPED
        object_tags:
          description: The permissions in this access group scope will be granted to all DCT objects tagged with tags matching this property. This is cumulative with objects defined in the 'objects' property, and mutually exclusive with scope_type 'SIMPLE'.
          type: array
          items:
            $ref: '#/components/schemas/ScopeTag'
        objects:
          description: The permissions in this access group scope will be granted to all DCT objects with matching object id and object type, mutually exclusive with  scope_type 'SIMPLE'.
          type: array
          items:
            $ref: '#/components/schemas/ScopedObjectItem'
        always_allowed_permissions:
          description: An array of always allowed permissions which can be used to specify object type and permission. An object with same object type and permission can not be added in 'objects' array.
          type: array
          items:
            $ref: '#/components/schemas/AlwaysAllowedPermission'
    UpdateAccessGroupScope:
      description: An Access group scope parameters that are allowed to update.
      type: object
      properties:
        name:
          description: The Access group scope name.
          type: string
          minLength: 1
          maxLength: 256
        scope_type:
          description: Specifies the type of the scope. Scope of type SIMPLE would grant access to all DCT objects. Scope of type SCOPED would grant access to all objects based on objects and object-tags and permissions defined in linked role. Scope of type ADVANCED would grant access to DCT objects based on objects and object-tags and the individual permissions.
          type: string
          enum:
            - SIMPLE
            - SCOPED
            - ADVANCED
          example: SCOPED
    Role:
      description: A role is a named collection of permissions on DCT objects.
      allOf:
        - $ref: '#/components/schemas/CreateRole'
        - type: object
          properties:
            id:
              description: The Role ID.
              type: string
            system_role:
              description: System role are pre defined roles. System roles cannot be modified.
              type: boolean
    CreateRole:
      description: A role Object to create a custom role.
      type: object
      required:
        - name
        - permission_objects
      properties:
        name:
          description: The Role name.
          type: string
        description:
          description: Role description.
          type: string
        permission_objects:
          description: The list of permissions granted by this role.
          type: array
          items:
            $ref: '#/components/schemas/PermissionObject'
          minItems: 1
          maxItems: 1000
          uniqueItems: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    AccessGroupAccountIdsRequest:
      type: object
      required:
        - account_ids
      properties:
        account_ids:
          type: array
          items:
            type: integer
            format: int64
          minItems: 1
          maxItems: 1000
          uniqueItems: true
    AccessGroupScopesRequest:
      type: object
      required:
        - scopes
      properties:
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/AccessGroupScope'
          minItems: 1
          maxItems: 1000
    Source:
      description: The Delphix representation of the source database (not typically managed by Delphix).
      type: object
      properties:
        id:
          description: The Source object entity ID.
          type: string
        database_type:
          description: The type of this source database.
          type: string
          nullable: true
        name:
          description: The name of this source database.
          type: string
          nullable: true
        namespace_id:
          description: The namespace id of this source database.
          type: string
          nullable: true
        namespace_name:
          description: The namespace name of this source database.
          type: string
          nullable: true
        is_replica:
          description: Is this a replicated object.
          type: boolean
          nullable: true
        database_version:
          description: The version of this source database.
          type: string
          nullable: true
        environment_id:
          description: A reference to the Environment that hosts this source database.
          type: string
          nullable: true
        data_uuid:
          description: A universal ID that uniquely identifies this source database.
          type: string
          nullable: true
        ip_address:
          description: The IP address of the source's host.
          type: string
          nullable: true
        fqdn:
          description: The FQDN of the source's host.
          type: string
          nullable: true
        size:
          description: The total size of this source database, in bytes.
          type: integer
          format: int64
          nullable: true
        jdbc_connection_string:
          description: The JDBC connection URL for this source database.
          type: string
          nullable: true
        plugin_version:
          description: The version of the plugin associated with this source database.
          type: string
          nullable: true
        toolkit_id:
          description: The ID of the toolkit associated with this source database(AppData only).
          type: string
        is_dsource:
          type: boolean
        repository:
          description: The repository id for this source
          type: string
        recovery_model:
          description: Recovery model of the source database (MSSql Only).
          example: FULL
          type: string
          nullable: true
        mssql_source_type:
          description: The type of this mssql source database (MSSql Only).
          example: MSSqlSIConfig
          type: string
          nullable: true
        appdata_source_type:
          description: The type of this appdata source database (Appdata Only).
          type: string
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      example:
        id: "source-123"
        database_type: "Oracle"
        name: "production01"
        database_version: "11.1.0.7.0"
        environment_id: "environment-123"
        data_uuid: "1734315df891991101eb96963535afa0"
        ip_address: "192.0.2.0"
        fqdn: "prod01.myhost.com"
        size: 856981504
        jdbc_connection_string: "jdbc:oracle:thin:@(DESCRIPTION=(ENABLE=broken)(ADDRESS=(PROTOCOL=tcp)(HOST=10.43.47.94)(PORT=1521))(CONNECT_DATA=(UR=A)(SID=production01)))"
        plugin_version: "1.0"
        repository: "1-REPOSITORY-1"
        appdata_source_type: "AppDataDirectSourceConfig"
        tags: [ { "key": "key1", "value": "value1" }, { "key": "key2", "value": "value2" } ]
    StagingSource:
      description: The Delphix representation of the staging source database (not typically managed by Delphix).
      type: object
      properties:
        id:
          description: The Staging Source object entity ID.
          type: string
        name:
          description: The name of this staging source database.
          type: string
          nullable: true
        database_type:
          description: The type of this staging source database.
          type: string
          nullable: true
        database_name:
          description: The name of container database of associated with this staging source database.
          type: string
          nullable: true
        database_version:
          description: The version of container database associated with this staging source database.
          type: string
          nullable: true
        environment_id:
          description: A reference to the Environment that hosts this staging source database.
          type: string
          nullable: true
        data_uuid:
          description: A universal ID that uniquely identifies this staging source database.
          type: string
          nullable: true
        ip_address:
          description: The IP address of the staging source's host.
          type: string
          nullable: true
        fqdn:
          description: The FQDN of the staging source's host.
          type: string
          nullable: true
        repository:
          description: The repository id for this staging source.
          type: string
        oracle_config_type:
          description: The type of oracle source configuration for this staging source. (Oracle only)
          type: string
          enum:
            - OracleRACConfig
            - OracleSIConfig
            - OraclePDBConfig
        cdb_type:
          description: The cdb type for this staging source. (Oracle only)
          type: string
        dsource_id:
          description: The dsource_id associated with this staging source.
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      example:
        id: "staging-source-123"
        name: "production01"
        database_type: "Oracle"
        database_name: "CDOM-EX1"
        database_version: "11.1.0.7.0"
        environment_id: "environment-123"
        data_uuid: "1734315df891991101eb96963535afa0"
        ip_address: "192.0.2.0"
        fqdn: "prod01.myhost.com"
        repository: "1-REPO-1"
        oracle_config_type: "OraclePDBConfig"
        cdb_type: "ROOT_CDB"
        dsource_id: "1-CONTAINER-1"
        tags: [ { "key": "key1", "value": "value1" }, { "key": "key2", "value": "value2" } ]
    DSource:
      description: The Delphix storage-based copy of the source database including its history.
      type: object
      properties:
        id:
          description: The dSource object entity ID.
          type: string
        database_type:
          description: The database type of this dSource.
          type: string
          nullable: true
        name:
          description: The container name of this dSource.
          type: string
          nullable: true
        namespace_id:
          description: The namespace id of this dSource.
          type: string
          nullable: true
        namespace_name:
          description: The namespace name of this dSource.
          type: string
          nullable: true
        is_replica:
          description: Is this a replicated object.
          type: boolean
          nullable: true
        database_version:
          description: The database version of this dSource.
          type: string
          nullable: true
        content_type:
          description: The content type of the dSource.
          type: string
          nullable: true
        data_uuid:
          description: A universal ID that uniquely identifies the dSource database.
          type: string
          nullable: true
        storage_size:
          description: The actual space used by this dSource, in bytes.
          type: integer
          format: int64
          nullable: true
        plugin_version:
          description: The version of the plugin associated with this source database.
          type: string
          nullable: true
        creation_date:
          description: The date this dSource was created.
          type: string
          format: date-time
          nullable: true
        group_name:
          description: The name of the group containing this dSource.
          type: string
          nullable: true
        enabled:
          description: A value indicating whether this dSource is enabled.
          type: boolean
          nullable: true
        engine_id:
          description: A reference to the Engine that this dSource belongs to.
          type: string
        source_id:
          description: A reference to the Source associated with this dSource.
          type: string
          nullable: true
        status:
          description: The runtime status of the dSource. 'Unknown' if all attempts to connect to the source failed.
          type: string
          nullable: true
        engine_name:
          description: Name of the Engine where this DSource is hosted
          type: string
          nullable: true
        cdb_id:
          description: A reference to the CDB associated with this dSource.
          type: string
          nullable: true
        current_timeflow_id:
          type: string
          description: A reference to the currently active timeflow for this dSource.
          example: "timeflow-123"
        previous_timeflow_id:
          type: string
          description: A reference to the previous timeflow for this dSource.
          example: "timeflow-123"
        is_appdata:
          description: Indicates whether this dSource has an AppData database.
          type: boolean
          example: true
        toolkit_id:
          description: The ID of the toolkit associated with this dSource(AppData only).
          type: string
        unvirtualized_space:
          description: This is the sum of unvirtualized space from the dependants VDBs of the dSource.
          type: integer
          format: int64
        dependant_vdbs:
          description: The number of VDBs that are dependant on this dSource. This includes all VDB descendants that have this dSource as an ancestor.
          type: integer
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        primary_object_id:
          description: The ID of the parent object from which replication was done.
          type: string
        primary_engine_id:
          description: The ID of the parent engine from which replication was done.
          type: string
        primary_engine_name:
          description: The name of the parent engine from which replication was done.
          type: string
        replicas:
          description: The list of replicas replicated from this object.
          type: array
          items:
            $ref: '#/components/schemas/Replica'
        hooks:
          $ref: "#/components/schemas/DSourceHooks"
        sync_policy_id:
          description: The id of the snapshot policy associated with this dSource.
          type: string
        retention_policy_id:
          description: The id of the retention policy associated with this dSource.
          type: string
        quota_policy_id:
          description: The id of the quota policy associated with this dSource.
          type: string
      example:
        id: "dsource-123"
        database_type: "Oracle"
        name: "prod01-main"
        database_version: "10.2.0.5.0"
        data_uuid: "1734315df891991101eb96963535afa0"
        storage_size: 339292672
        plugin_version: "1.0"
        creation_date: "2021-05-01T08:51:34.148000+00:00"
        group_name: "DSources"
        enabled: true
        engine_id: "engine-123"
        source_id: "source-123"
        status: "RUNNING"
        engine_name: "engine-123-name"
        cdb_id: "cdb-123"
        is_appdata: true
        tags: [ { "key": "key1", "value": "value1" }, { "key": "key2", "value": "value2" } ]
        primary_object_id: "1-CONTAINER-1"
        primary_engine_id: "1"
        primary_engine_name: "source-engine"
        replicas: [ { "replica_id" : "replica-1", "replica_engine_id" : "1", "replica_engine_name" : "replica-e1" }, { "replica_id" : "replica-2", "replica_engine_id" : "2", "replica_engine_name" : "replica-e2" }]
        hooks: { "pre_sync": [ { "name": "Print the current user", "command": "whoami", "shell": "bash", element_id: "0" } ] }
        snapshot_policy_id: "1-POLICY_SNAPSHOT-1"
        retention_policy_id: "1-POLICY_RETENTION-1"
        quota_policy_id: "1-POLICY_QUOTA-1"
    Replica:
      properties:
        replica_id:
          description: The ID of the replicated object.
          type: string
        replica_engine_id:
          description: The ID of the replicated object's engine.
          type: string
        replica_engine_name:
          description: The name of the replicated object's engine.
          type: string
        replica_namespace_id:
          description: The namespace id of the replicated object.
          type: string
    CDB:
      description: The Delphix representation of an Oracle Container Database.
      type: object
      properties:
        id:
          description: The CDB object entity ID.
          type: string
          example: "1-CDB-1"
        name:
          description: The name of this CDB.
          type: string
          nullable: true
          example: "Oracle CDB"
        namespace_id:
          description: The namespace id of this CDB.
          type: string
          example: '1-NAMESPACE-1'
        namespace_name:
          description: The namespace name of this CDB.
          type: string
          example: 'test-engine-1'
        is_replica:
          description: Is this a replicated object.
          type: boolean
          example: true
        database_version:
          description: The version of this CDB.
          type: string
          nullable: true
          example: "10.2.0.5.0"
        environment_id:
          description: A reference to the Environment that hosts this CDB.
          type: string
          nullable: true
          example: "1-ENVIRONMENT-1"
        size:
          description: The total size of the data files used by this CDB, in bytes.
          type: integer
          format: int64
          nullable: true
          example: 339292672
        jdbc_connection_string:
          description: The JDBC connection URL for this CDB.
          type: string
          nullable: true
          example: "jdbc:oracle:thin:@(DESCRIPTION=(ENABLE=broken)(ADDRESS=(PROTOCOL=tcp)(HOST=10.43.47.94)(PORT=1521))(CONNECT_DATA=(UR=A)(SID=production01)))"
        engine_id:
          description: A reference to the Engine that this CDB belongs to.
          type: string
          example: "engine-12"
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'

    VCDB:
      description: The Delphix Oracle Virtual Container Database.
      type: object
      properties:
        id:
          description: The vCDB object entity ID.
          type: string
          example: "1-CDB-1"
        name:
          description: The name of this vCDB.
          type: string
          nullable: true
          example: "Oracle CDB"
        namespace_id:
          description: The namespace id of this vCDB.
          type: string
          nullable: true
        namespace_name:
          description: The namespace name of this vCDB.
          type: string
          nullable: true
        is_replica:
          description: Is this a replicated object.
          type: boolean
          nullable: true
        database_version:
          description: The version of this vCDB.
          type: string
          nullable: true
          example: "10.2.0.5.0"
        environment_id:
          description: A reference to the Environment that hosts this vCDB.
          type: string
          nullable: true
          example: "1-ENVIRONMENT-1"
        size:
          description: The total size of the data files used by this vCDB, in bytes.
          type: integer
          format: int64
          nullable: true
          example: 339292672
        engine_id:
          description: A reference to the Engine that this vCDB belongs to.
          type: string
          example: "engine-12"
        status:
          description: The runtime status of the vCDB.
          type: string
          nullable: true
          example: "RUNNING"
        parent_id:
          description: A reference to the parent CDB of this vCDB.
          type: string
          example: "1-CDB-1"
        creation_date:
          description: The date this vCDB was created.
          type: string
          format: date-time
          nullable: true
          example: "2022-10-15T08:51:34.148000+00:00"
        group_name:
          description: The name of the group containing this vCDB.
          type: string
          nullable: true
          example: "Untitled"
        enabled:
          description: Whether the vCDB is enabled or not.
          type: boolean
          example: true
        content_type:
          description: The content type of the vcdb.
          type: string
          nullable: true
        vcdb_restart:
          description: Indicates whether the Engine should automatically restart this vcdb when
            target host reboot is detected.
          type: boolean
          example: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    MaskingFileUploadParameters:
      x-internal: true
      description: Parameters to upload a file for masking.
      type: object
      required:
        - file
      properties:
        file:
          description: The file to upload.
          type: string
          format: binary
    InstallMaskingPluginParameters:
      x-internal: true
      description: Parameters to install a custom masking plugin.
      type: object
      required:
        - plugin_file_reference
      properties:
        plugin_file_reference:
          description: File reference for the plugin JAR.
          type: string
          example: delphix-file://upload/f_0ea61f94f53c4441890e8fac88805048/plugin.jar
        tags:
          description: The tags of this plugin.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    AlgorithmCreateParameters:
      x-internal: true
      description: Parameters to create a masking algorithm.
      type: object
      required:
        - name
        - plugin_id
        - config
        - framework_name
      properties:
        name:
          description: The name of this Algorithm.
          type: string
          example: Address
        description:
          description: A description of this algorithm.
          type: string
        plugin_id:
          description: The id of the plugin which this algorithm will use.
          type: string
          example: dc91e41c-aade-4404-9084-179cb90d07c6
        config:
          description: The configuration of this algorithm.
          type: object
          additionalProperties: true
        framework_name:
          description: Name for the framework of this algorithm.
          type: string
        tags:
          description: The tags of this algorithm.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    AlgorithmRevisionCreateParameters:
      x-internal: true
      description: Parameters to create a masking algorithm revision.
      type: object
      required:
        - name
        - plugin_id
        - config
      properties:
        name:
          description: The name of this Algorithm.
          type: string
          example: Address
        note:
          description: A note of this algorithm.
          type: string
        plugin_id:
          description: The id of the plugin which this algorithm will use.
          type: string
          example: dc91e41c-aade-4404-9084-179cb90d07c6
        config:
          description: The configuration of this algorithm revision.
          type: object
          additionalProperties: true
        tags:
          description: The tags of this algorithm revision.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    UpdateAlgorithmRevisionParameters:
      x-internal: true
      description: Parameters to update a masking algorithm revision.
      type: object
      properties:
        name:
          description: The name of this algorithm revision.
          type: string
          example: Address
        note:
          description: A note of this algorithm revision.
          type: string
    Algorithm:
      description: A masking algorithm.
      type: object
      required:
        - id
        - name
        - plugin_name
        - framework_name
      properties:
        id:
          description: The algorithm entity ID.
          type: string
          example: a638d976-6b7e-43f4-9212-90f4dc6d405c
        name:
          description: The name of this algorithm.
          type: string
          example: Address
        description:
          description: A description of this algorithm.
          type: string
          nullable: true
        plugin_name:
          description: The name of the plugin that this algorithm belongs to.
          type: string
          example: dlpx-core
        framework_name:
          description: The name of the framework that this algorithm belongs to.
          type: string
          example: Secure Lookup
        create_date:
          description: The date and time this algorithm was created.
          type: string
          format: date-time
          example: "2022-11-30T08:51:34.148000+00:00"
        tags:
          description: The tags of this algorithm.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    AlgorithmRevision:
      description: A masking algorithm revision.
      type: object
      required:
        - id
        - name
        - algorithm_id
        - plugin_id
        - framework_id
        - is_primary
        - is_default_instance
      properties:
        id:
          description: The algorithm revision ID.
          type: string
          example: a638d976-6b7e-43f4-9212-90f4dc6d405c
        name:
          description: The name of this algorithm revision.
          type: string
          example: Dev
        note:
          description: A note of this algorithm.
          type: string
          nullable: true
        algorithm_id:
          description: The id of the algorithm that this revision belongs to.
          type: string
          example: a638d976-6b7e-43f4-9212-90f4dc6d405c
        plugin_id:
          description: The id of the plugin that this algorithm revision belongs to.
          type: string
          example: a638d976-6b7e-43f4-9212-90f4dc6d405c
        framework_id:
          description: The id of the framework that this algorithm revision belongs to.
          type: string
          example: a638d976-6b7e-43f4-9212-90f4dc6d405c
        is_primary:
          description: Whether this algorithm revision is the primary revision of its algorithm.
          type: boolean
        is_default_instance:
          description: Whether this algorithm revision is defined in a plugin as a default instance.
          type: boolean
        create_date:
          description: The date and time this algorithm revision was created.
          type: string
          format: date-time
          example: "2022-11-30T08:51:34.148000+00:00"
        origin_engines:
          description: The engines that this algorithm revision is originated from.
          type: array
          items:
            $ref: '#/components/schemas/AlgorithmRevisionOriginEngine'
        config:
          description: The configuration of this algorithm revision.
          type: object
          additionalProperties: true
        tags:
          description: The tags of this algorithm revision.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    AlgorithmRevisionOriginEngine:
      description: A record of engine that an algorithm revision originates from.
      type: object
      properties:
        engine_id:
          description: The id of the engine that this algorithm revision is originated from.
          type: string
          example: 123
        engine_name:
          description: The name of the engine that this algorithm revision is originated from.
          type: string
          example: dev engine
    MaskingRuleset:
      description: A masking ruleset.
      type: object
      properties:
        type:
          description: The Ruleset type.
          type: string
          enum:
            - FILE
            - DATABASE
            - MAINFRAME_DATASET
          nullable: true
        name:
          description: The name of this Ruleset.
          type: string
        refresh_drops_tables:
          description: Whether refresh drops tables. Only applicable to database ruleset type.
          type: boolean
          nullable: true
        algorithms:
          description: The list of algorithms for this Ruleset.
          type: array
          items:
            type: string
            minLength: 1
      example:
        type: DATABASE
        name: The best Ruleset
        refresh_drops_tables: true
    MaskingEnvironment:
      properties:
        id:
          description: The MaskingEnvironment entity ID.
          type: string
          example: masking-environment-1
        engine_id:
          description: The ID of the Engine where this MaskingEnvironment resides.
          type: string
          example: engine-123
        engine_name:
          description: The name of the Engine where this MaskingEnvironment resides.
          type: string
          example: engine-xyz
        name:
          description: The name of this MaskingEnvironment.
          type: string
          example: MyAppEnvironment
        purpose:
          description: The purpose of this MaskingEnvironment. MaskingEnvironments with a 'MASK' purpose will
              have access to Masking and Profiling jobs, whereas Environments with a 'TOKENIZE' purpose will have
              access to Tokenization and Re-Identification jobs. Note that any custom purposes created through the UI
              will be represented as 'MASK' purposes, due to the jobs that they have access to.
          enum: [MASK, TOKENIZE]
          type: string
        is_workflow_enabled:
          type: boolean
    MaskingFileUpload:
      x-internal: true
      description: An uploaded file.
      type: object
      properties:
        filename:
          type: string
          description: Name of this file.
        file_reference_id:
          type: string
          description: An reference to this file.
        file_size:
          type: integer
          format: int64
          description: Size of this file in bytes.
    MaskingJob:
      description: A masking job.
      type: object
      properties:
        id:
          description: The Masking Job entity ID.
          type: string
          readOnly: true
          example: masking-job-1
        name:
          description: The name of this Masking Job.
          type: string
          example: My favorite MaskingJob
        ruleset:
          description: The ruleset of this Masking job (Standard Job only). For hyperscale jobs, see dataset_id.
          $ref: '#/components/schemas/MaskingRuleset'
        connector_type:
          type: string
          description: The type of data being masked by this Job. If the Masking Job is masking a database
                       this is the type of the database (Standard Job only).
          example: MARIADB
        is_on_the_fly_masking:
          description: Whether this is an on-the-fly masking job (Standard Job only).
          type: boolean
          example: true
        creation_date:
          description: The date this MaskingJob was created (Standard Job only).
          type: string
          format: date-time
          example: "2022-11-30T08:51:34.148000+00:00"
        last_completed_execution_date:
          description: The date this MaskingJob was last executed to completion.
          type: string
          format: date-time
          example: "2022-11-30T09:51:34.148000+00:00"
        last_execution_status:
          description: The status of this MaskingJob's last execution.
          type: string
          enum: [ PENDING, CANCELLED, FAILED, QUEUED, RUNNING, SUCCEEDED]
          example: SUCCEEDED
        last_execution_id:
          description: The ID of this MaskingJob's last execution.
          type: string
          example: 00e38996-7da2-4827-8f3e-0503234de537
        connector_username:
          type: string
          description: The username of the Connector used by the MaskingJob (Standard Job only). For hyperscale jobs, see the connector of the dataset.
          nullable: true
          example: 'user123'
        connector_password:
          x-dct-toolkit-credential-field: true
          type: string
          description: The password of the Connector used by the MaskingJob (Standard Job only). For hyperscale jobs, see the connector of the dataset.
          nullable: true
          example: '*****'
        on_the_fly_source_connector_username:
          type: string
          description: The username of the source Connector used by the on-the-fly MaskingJob (Standard Job only).
          nullable: true
          example: 'user123'
        on_the_fly_source_connector_password:
          x-dct-toolkit-credential-field: true
          type: string
          description: The password of the source Connector used by the on-the-fly MaskingJob (Standard Job only).
          nullable: true
          example: '*****'
        job_type:
          type: string
          description: The type of this Job.
          enum:
            - STANDARD
            - HYPERSCALE
          example: STANDARD
        hyperscale_instance_id:
          description: The ID of the Hyperscale instance of this Job (Hyperscale Job only).
          type: string
          example: abc
        description:
          description: Description of the Job (Hyperscale Job only).
          type: string
          example: Job for app finance
        dataset_id:
          description: Dataset of the Hyperscale Job (Hyperscale Job only).
          type: string
          example: dataset-123
        retain_execution_data:
          description: Defines whether execution data will be stored after execution is complete (Hyperscale Job only).
          type: string
          enum: [ "NO", "ON_ERROR", "ALWAYS" ]
          example: NO
        max_memory:
          description: Maximum memory to be allocated for each Masking job (Hyperscale Job only).
          type: integer
          format: int32
          example: 1024
        min_memory:
          description: Minimum memory to be allocated for each Masking job (Hyperscale Job only).
          type: integer
          format: int32
          example: 1024
        feedback_size:
          description: Feedback Size for each Masking job (Hyperscale Job only).
          type: integer
          format: int32
          example: 32
        stream_row_limit:
          description: Stream Row Limit for each Masking job (Hyperscale Job only).
          type: integer
          format: int32
          example: 4
        num_input_streams:
          description: Number of input streams to be configured for Masking Job (Hyperscale Job only).
          type: integer
          format: int32
          example: 4
        max_concurrent_source_connections:
          description: Maximum number of parallel connection that the Hyperscale instance can have with the source datasource (Hyperscale Job only).
          type: integer
          format: int32
          example: 32
        max_concurrent_target_connections:
          description: Maximum number of parallel connection that the Hyperscale instance can have with the target datasource (Hyperscale Job only).
          type: integer
          format: int32
          example: 32
        parallelism_degree:
          description: The degree of parallelism (DOP) per Oracle job to recreate the index in the post-load process (Hyperscale Job only).
          type: integer
          format: int32
          example: 4
        source_masking_job_id:
          description: The ID of the MaskingJob that was used as the source to create this job (Hyperscale Job only).
          type: string
          example: masking-job-0
        engine_ids:
          description: List of engines that this job can run on (Hyperscale Job only).
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    MaskingExecutionMetrics:
      description: Metrics for a masking job.
      type: object
      properties:
        id:
          description: The MaskingJob entity ID.
          type: string
          example: masking-job-1
        masking_job_name:
          description: The name of the MaskingJob.
          type: string
          example: My favorite MaskingJob
        masking_job_type:
          type: string
          description: The type of the Masking job.
          enum:
            - STANDARD
            - HYPERSCALE
          example: STANDARD
        connector_type:
          type: string
          description: The type of data being masked by this Job. If the Masking Job is masking a database
            this is the type of the database, otherwise "FILE" or "MAINFRAME_DATASET".
          example: MARIADB
        ruleset_name:
          type: string
          description: Name of the ruleset for the Masking job.
          example: my-ruleset
        rows_masked:
          description: The number of rows masked. This is not applicable for JSON file type.
          type: integer
          format: int64
          example: 1000
        rows_total:
          description: The total number of rows. This is not applicable for JSON file type.
          type: integer
          format: int64
          example: 5000
        bytes_masked:
          description: The number of bytes masked. This is only applicable for JSON file type.
          type: integer
          format: int64
          example: 500
        bytes_total:
          description: The total number of bytes. This is only applicable for JSON file type.
          type: integer
          format: int64
          example: 5000000
        duration:
          description: The time taken by the execution in ms. Only available for successful executions.
          type: integer
          format: int64
          example: 5000000
        tables_files_count:
          description: The number of tables or files in the ruleset associated to the Masking job.
          type: integer
          format: int64
          example: 5000000
        masked_tables_files_count:
          description: The number of tables or files in the ruleset associated to the Masking job for which at
            least one column or field is masked.
          type: integer
          format: int64
          example: 5000000
        columns_fields_count:
          description: The number of columns or fields across all tables or files in the ruleset associated to the Masking job.
          type: integer
          format: int64
          example: 5000000
        masked_columns_fields_count:
          description: The number of columns or fields across all tables or files in the ruleset associated to the Masking job which are masked.
          type: integer
          format: int64
          example: 5000000
    MaskingJobSourceEngine:
      description: A masking job's source engine.
      type: object
      properties:
        masking_job_id:
          description: The MaskingJob entity ID.
          type: string
          example: masking-job-1
        source_engine_id:
          description: The ID of the Engine serving as the source for the MaskingJob.
          type: string
          example: engine-123
    MaskingJobConnectorsResponse:
      description: Connector(s) for a masking job.
      type: object
      properties:
        connector:
          $ref: '#/components/schemas/Connector'
        on_the_fly_connector:
          $ref: '#/components/schemas/Connector'
    MaskingPlugin:
      x-internal: true
      description: A masking plugin.
      type: object
      properties:
        id:
          description: The masking plugin entity ID.
          type: string
          example: dc91e41c-aade-4404-9084-179cb90d07c6
        name:
          description: The name of this plugin.
          type: string
          example: dlpx-core
        plugin_type:
          description: The plugin type.
          type: string
          enum:
            - EXTENDED_ALGORITHM
        description:
          description: A description of this plugin.
          type: string
          nullable: true
          example: Delphix Core Masking Algorithm Plugin
        install_date:
          description: The date and time when this plugin is installed.
          type: string
          format: date-time
        built_in:
          description: Whether this plugin is a built-in plugin.
          type: boolean
        sdk_version:
          description: The masking SDK version that this plugin is built from.
          type: string
          example: 1.20.0
        version:
          description: The version of this plugin.
          type: string
          example: 1.20.0
        author:
          description: The author of this plugin.
          type: string
          example: Delphix
        frameworks:
          description: The list of frameworks for this plugin.
          type: array
          items:
            $ref: '#/components/schemas/Framework'
          nullable: true
        tags:
          description: The tags of this plugin.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    Framework:
      x-internal: true
      description: A masking algorithm framework.
      type: object
      properties:
        id:
          description: The masking framework entity ID.
          type: string
          example: dc91e41c-aade-4404-9084-179cb90d07c6
        name:
          description: The name of this framework.
          type: string
          example: Secure Lookup
        description:
          description: A description of this framework.
          type: string
          nullable: true
          example: Secure Lookup Framework
        masking_type:
          description: The masking type of this framework.
          type: string
          enum:
            - STRING
            - DATE
            - LOCAL_DATE_TIME
            - BIG_DECIMAL
            - BYTE_BUFFER
            - GENERIC_DATA_ROW
            - ADVANCED_OBJECT
    Connector:
      description: Connectors are the way users define the data sources to which the Masking Engine should connect.
      type: object
      properties:
        id:
          description: The Connector entity ID.
          type: string
          example: "1-database-123"
        name:
          description: The Connector name.
          type: string
          example: "connector-name"
        engine_id:
          description: A reference to the Engine that this Connector belongs to.
          type: string
          example: "123"
        type:
          description: The type of Connector. One of Database, File, or Mainframe.
          type: string
          enum: [ DATABASE, FILE, MAINFRAME_DATASET ]
          example: DATABASE
        hostname:
          description: The network hostname or IP address of the database server.
          type: string
          example: database_server.mycompany.co
        port:
          description: The TCP port of the server.
          type: integer
          format: int32
          minimum: 1
          maximum: 65535
          example: 9100
        username:
          description: The username this Connector will use to connect to the database.
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      example:
        id: "1-database-123"
        name: "connector-name"
        engine_id: 123
        type: DATABASE
        hostname: database_server.mycompany.co
        port: 4322
        username: "user-123"
    ConnectorUpdateParameters:
      description: Parameters used to update a Masking Connector.
      type: object
      properties:
        name:
          description: The Connector name.
          type: string
        hostname:
          description: The network hostname or IP address of the database server.
          type: string
        port:
          description: The TCP port of the server.
          type: integer
          format: int32
          minimum: 1
          maximum: 65535
        username:
          description: The username this Connector will use to connect to the database.
          type: string
        password:
          x-dct-toolkit-credential-field: true
          description: The password this Connector will use to connect to the database.
          type: string
      example:
        name: "connector-name"
        hostname: database_server.mycompany.co
        port: 4322
        username: "user-123"
        password: "password123"
    Execution:
      description: The execution of a masking or profile job.
      type: object
      properties:
        id:
          description: The Execution entity ID.
          type: string
          example: "414ed52c-fa89-455d-9fb9-9c2fa5115f80"
        engine_id:
          description: The ID of the engine where this execution ran.
          type: string
          example: "1"
        hyperscale_instance_id:
          type: string
        engine_name:
          description: The name of the engine where this execution ran.
          type: string
          example: "prod01"
        masking_job_id:
          description: The ID of the masking job that is being executed.
          type: string
          example: "2"
        masking_job_name:
          description: The name of the masking job that is being executed.
          type: string
          example: "finance-masking-job"
        source_connector_id:
          description: The ID of the source connector. This field is only used for multi-tenant jobs that are also on-the-fly.
          type: string
          example: "1-DATABASE-2"
        target_connector_id:
          description: The ID of the target connector. This field is only used for multi-tenant jobs.
          type: string
          example: "1-DATABASE-3"
        status:
          description: The status of the execution regarding its completion.
          type: string
          enum: [ PENDING, QUEUED, RUNNING, CANCELLED, FAILED, SUCCEEDED ]
          example: "RUNNING"
        rows_masked:
          description: The number of rows masked or profiled so far by this execution. This is not applicable for JSON file type.
          type: integer
          format: int64
          example: 1000
        rows_total:
          description: The total number of rows that this execution should mask. This value is set to -1 while the total row count is being calculated. This is not applicable for JSON file type.
          type: integer
          format: int64
          example: 5000
        bytes_processed:
          description: The number of bytes masked so far by this execution. This is only applicable for JSON file type.
          type: integer
          format: int64
          example: 500
        bytes_total:
          description: The total number of bytes that this execution should mask. This value is set to -1 while the total byte count is being calculated. This is only applicable for JSON file type.
          type: integer
          format: int64
          example: 5000000
        start_time:
          description: The date and time that this execution was started.
          type: string
          format: date-time
          example: "2021-05-01T09:51:34.148000+00:00"
        submit_time:
          description: The date and time that this execution was submitted.
          type: string
          format: date-time
          example: "2021-05-01T08:51:34.148000+00:00"
        end_time:
          description: The date and time that this execution completed.
          type: string
          format: date-time
          example: "2021-05-01T11:51:34.148000+00:00"
        task_events:
          description: The progression of steps or events performed by this execution. Only available for executions on masking engines that are version 6.0.14.0 and higher.
          type: array
          items:
            $ref: '#/components/schemas/TaskEvent'
          example: [ { "event": "Initializing", "status": "SUCCEEDED" }, { "event": "Job Completed", "status": "FAILED" } ]
        hyperscale_task_events:
          type: array
          items:
            $ref: '#/components/schemas/HyperscaleTaskEvent'
        progress:
          description: Progress of the task (value between 0 and 1, Hyperscale executions only)
          type: number
          example: 0.34
    HyperscaleTaskEvent:
      properties:
        name:
          type: string
          description: Name of the task (Unload, Masking, Load, Post-Load)
          example: Unload
        progress:
          description: progress of the task (between 0 and 1)
          type: number
          example: 0.34
        status:
          type: string
          enum: [ CANCELLED, CANCEL_INITIATED, FAILED, RUNNING, SUCCEEDED ]
          example: FAILED
        processed_objects:
          description: The number of objects (tables) already processed by this task.
          type: integer
          format: int64
        processed_rows:
          description: The number of rows already processed by this task.
          type: integer
          format: int64
        processed_constraints:
          description: The number of constraints processed by this task (Post-load task only)
          type: integer
          format: int64
        total_constraints:
          description: The total number of constraints to be processed by this task (Post-load task only)
          type: integer
          format: int64
        processed_indexes:
          description: The number of indexes processed by this task (Post-load task only)
          type: integer
          format: int64
        total_indexes:
          description: The total number of indexes to be processed by this task (Post-load task only)
          type: integer
          format: int64
        processed_triggers:
          description: The number of triggered processed by this task (Post-load task only)
          type: integer
          format: int64
        total_triggers:
          description: The total number of triggers to be processed by this task (Post-load task only)
          type: integer
          format: int64
        start_time:
          description: The date and time that this task was started.
          type: string
          format: date-time
          example: "2022-01-02T05:11:24.148000+00:00"
        end_time:
          description: The date and time that this task completed.
          type: string
          format: date-time
          example: "2022-01-02T05:13:24.148000+00:00"
        errors:
          type: array
          items:
            $ref: '#/components/schemas/HyperscaleTaskError'
    HyperscaleTaskError:
      properties:
        table_name:
          type: string
          description: the name of the table for which the error occurred, including the schema.
          example: public_schema.table_x
        error:
          type: string
          description: A textual description of the error.
    TaskEvent:
      description: A step or event performed by a masking execution.
      type: object
      properties:
        event:
          description: The steps or events a task will perform.
          type: string
          example: "Job Completed"
        status:
          description: The state of result of the task event.
          type: string
          enum: [ CANCELLED, FAILED, QUEUED, RUNNING, SUCCEEDED, SKIPPED, NON_CONFORMANT ]
          example: "SUCCEEDED"
    ExecutionEvent:
      description: Events, such as warnings or errors, associated with job executions.
      type: object
      properties:
        id:
          description: The ExecutionEvent entity ID.
          type: string
          example: "1-EVENT-1"
        execution_id:
          description: The ID of the execution.
          type: string
          example: "414ed52c-fa89-455d-9fb9-9c2fa5115f80"
        event_type:
          description: The type of execution event.
          type: string
          enum: [ JOB_ABORTED, UNMASKED_DATA, MASKING_FALLBACK ]
          example: "JOB_ABORTED"
        severity:
          description: The severity of the execution event.
          type: string
          enum: [ INFO, WARNING, CRITICAL ]
          example: "INFO"
        cause:
          description: The cause of the execution event.
          type: string
          enum: [ UNHANDLED_EXCEPTION, IGNORED_EXCEPTION, PATTERN_MATCH_FAILURE, PREMASK_TYPE_CONVERSION_FAILURE, POSTMASK_TYPE_CONVERSION_FAILURE, EXTENDED_ALGORITHM_FAILURE, DRIVER_SUPPORT_TASK_FAILURE, DATA_NOT_FOUND_FAILURE ]
          example: "UNHANDLED_EXCEPTION"
        count:
          description: The number of times the execution event occurred.
          type: integer
          format: int64
          example: 1
        timestamp:
          description: The date and time that this execution event first occurred.
          type: string
          format: date-time
          example: "2023-03-20T08:51:34.148000+00:00"
        masked_object_name:
          description: The name of the column, field, or other object being masked when this event occurred, if applicable.
          type: string
          example: "ssn"
        algorithm_name:
          description: The name of the masking algorithm running when this event occurred, if applicable.
          type: string
          example: "SsnTK"
        exception_type:
          description: The Java class of the exception that triggered this event, if applicable.
          type: string
          example: "SQLException"
        exception_detail:
          description: The details associated with the Java exception that triggered this event, if applicable.
          type: string
          example: "Listener refused the connection with the following error: ORA-12505, TNS:listener does not currently know of SID given in connect descriptor"
    ExecutionLog:
      description: A log containing warnings or errors associated with a job execution.
      type: object
      properties:
        id:
          description: The ExecutionLog entity ID.
          type: string
          example: "1-LOG-1"
        execution_id:
          description: The ID of the execution.
          type: string
          example: "414ed52c-fa89-455d-9fb9-9c2fa5115f80"
        masking_job_id:
          description: The ID of the masking job that is being executed.
          type: string
          example: "2"
        status:
          description: The status of the execution regarding its completion.
          type: string
          enum: [ CANCELLED, FAILED, QUEUED, RUNNING, SUCCEEDED ]
        log:
          description: The log file contents.
          type: string
          example: "ORA-12505, TNS:listener does not currently know of SID given in connect descriptor"
    ExecutionCancelParameters:
      description: Parameters to cancel an execution.
      type: object
      properties:
        expected_status:
          description: The expected status of the execution to cancel to prevent cancelling a queued job that has transitioned to a running state since the request was issued (Standard Job only).
          type: string
          enum: [ QUEUED, RUNNING ]
          example: "QUEUED"
    DatasetGroup:
      description: A Delphix engine dataset group.
      type: object
      properties:
        id:
          description: The dataset group ID.
          type: string
          example: '1-GROUP-1'
        name:
          description: The name of this dataset group.
          type: string
          example: 'Untitled'
        namespace_id:
          description: The namespace id of this dataset group.
          type: string
          example: '1-NAMESPACE-1'
        namespace_name:
          description: The namespace name of this dataset group.
          type: string
          example: 'test-engine-1'
        is_replica:
          description: Is this a replicated object.
          type: boolean
          example: true
        engine_id:
          description: Id of the Engine that this dataset group belongs to.
          type: string
          example: '1'
        engine_name:
          description: Name of the Engine that this dataset group belongs to.
          type: string
          example: 'Engine-1'
        namespace:
          description: The namespace of this dataset group.
          type: string
          example: 'ns-1'
    Toolkit:
      description: A toolkit or plugin.
      type: object
      properties:
        id:
          description: Id of the toolkit.
          type: string
        type:
          description: Specifies whether this object is toolkit or plugin
          type: string
        reference:
          description: The object reference.
          type: string
        engine_name:
          description: Name of the engine.
          type: string
        engine_id:
          description: Id of the engine.
          type: string
        virtual_source_definition:
          description: Definition of how to provision virtual sources of this type
          type: object
          additionalProperties: true
        linked_source_definition:
          description: Definition of how to link sources of this type.
          type: object
          additionalProperties: true
        discovery_definition:
          description: Definition of how to discover sources of this type.
          type: object
          additionalProperties: true
        upgrade_definition:
          description: Definition of how to upgrade sources of this type.
          type: object
          additionalProperties: true
        snapshot_parameters_definition:
          description: The schema that defines the structure of the fields in AppDataSyncParameters.
          type: object
          additionalProperties: true
        tags:
          description: Tags associated to this toolkit.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    VDB:
      description: A Delphix virtual database or dataset.
      type: object
      properties:
        id:
          description: The VDB object entity ID.
          type: string
        database_type:
          description: The database type of this VDB.
          type: string
          nullable: true
        name:
          description: The container name of this VDB.
          type: string
          nullable: true
        namespace_id:
          description: The namespace id of this VDB.
          type: string
          example: '1-NAMESPACE-1'
        namespace_name:
          description: The namespace name of this VDB.
          type: string
          example: 'test-engine-1'
        is_replica:
          description: Is this a replicated object.
          type: boolean
          example: true
        is_locked:
          description: Is this VDB locked.
          type: boolean
          example: true
        locked_by:
          description: The ID of the account that locked this VDB.
          type: integer
          format: int64
          example: 1
        locked_by_name:
          description: The name of the account that locked this VDB.
          type: string
        database_version:
          description: The database version of this VDB.
          type: string
          nullable: true
        jdbc_connection_string:
          description: The JDBC connection URL for this VDB.
          type: string
        size:
          description: The total size of this VDB, in bytes.
          type: integer
          format: int64
          nullable: true
        storage_size:
          description: The actual space used by this VDB, in bytes.
          type: integer
          format: int64
          nullable: true
        engine_id:
          description: A reference to the Engine that this VDB belongs to.
          type: string
        status:
          description: The runtime status of the VDB. 'Unknown' if all attempts to connect to the dataset failed.
          type: string
          nullable: true
        masked:
          description: The VDB is masked or not.
          type: boolean
          nullable: true
        content_type:
          description: The content type of the vdb.
          type: string
          nullable: true
        parent_timeflow_timestamp:
          description: The timestamp for parent timeflow.
          type: string
          format: date-time
          nullable: true
        parent_timeflow_timezone:
          description: The timezone for parent timeflow.
          type: string
          nullable: true
        environment_id:
          description: A reference to the Environment that hosts this VDB.
          type: string
          nullable: true
        ip_address:
          description: The IP address of the VDB's host.
          type: string
          nullable: true
        fqdn:
          description: The FQDN of the VDB's host.
          type: string
          nullable: true
        parent_id:
          description: A reference to the parent dataset of this VDB.
          type: string
          nullable: true
        parent_dsource_id:
          description: A reference to the parent dSource of this VDB.
          type: string
          nullable: true
        group_name:
          description: The name of the group containing this VDB.
          type: string
          nullable: true
        engine_name:
          description: Name of the Engine where this VDB is hosted
          type: string
          nullable: true
        cdb_id:
          description: A reference to the CDB or VCDB associated with this VDB.
          type: string
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        creation_date:
          description: The date this VDB was created.
          type: string
          format: date-time
          nullable: true
        hooks:
          $ref: "#/components/schemas/VirtualDatasetHooks"
        appdata_source_params:
          description: The JSON payload conforming to the DraftV4 schema based on the type of application data being manipulated.
          type: object
          additionalProperties: true
          nullable: true
        template_id:
          description: A reference to the Database Template.
          type: string
          nullable: true
        config_params:
          description: Database configuration parameter overrides.
          type: object
          additionalProperties: true
          nullable: true
        additional_mount_points:
          description: Specifies additional locations on which to mount a subdirectory of an AppData container.
            Can only be updated while the VDB is disabled.
          type: array
          items:
            $ref: "#/components/schemas/AdditionalMountPoint"
          nullable: true
        appdata_config_params:
          description: The parameters specified by the source config schema in the toolkit
          type: object
          nullable: true
          additionalProperties: true
        mount_point:
          type: string
          description: Mount point for the VDB (Oracle, ASE, AppData).
          example: /var/mnt
        current_timeflow_id:
          type: string
          description: A reference to the currently active timeflow for this VDB.
          example: "timeflow-456"
        previous_timeflow_id:
          type: string
          description: A reference to the previous timeflow for this VDB.
          example: "timeflow-123"
        last_refreshed_date:
          description: The date this VDB was last refreshed.
          type: string
          format: date-time
          nullable: true
        vdb_restart:
          description: Indicates whether the Engine should automatically restart this vdb when
            target host reboot is detected.
          type: boolean
          example: true
        is_appdata:
          description: Indicates whether this VDB has an AppData database.
          type: boolean
          example: true
        toolkit_id:
          description: The ID of the toolkit associated with this VDB.
          type: string
        plugin_version:
          description: The version of the plugin associated with this VDB.
          type: string
          example: "1.0.0"
          nullable: true
        primary_object_id:
          description: The ID of the parent object from which replication was done.
          type: string
        primary_engine_id:
          description: The ID of the parent engine from which replication was done.
          type: string
        primary_engine_name:
          description: The name of the parent engine from which replication was done.
          type: string
        replicas:
          description: The list of replicas replicated from this object.
          type: array
          items:
            $ref: '#/components/schemas/Replica'
      example:
        id: "vdb-123"
        database_type: "Oracle"
        name: "prod01-copy01"
        database_version: "10.2.0.5.0"
        size: 339292672
        storage_size: 12345678
        engine_id: "engine-123"
        status: "RUNNING"
        environment_id: "environment-123"
        ip_address: "192.0.2.0"
        fqdn: "virtual-dbs.myhost.com"
        parent_id: "vdb-122"
        parent_dsource_id: "dsource-id"
        group_name: "VDBs"
        cdb_id: "cdb-123"
        engine_name: "engine-123-name"
        appdata_source_params: {"param": "value", "param2": "value2"}
        additional_mount_points: [{"shared_path": "/", "mount_path": "/work", "environment_id": "environment-123"}]
        appdata_config_params: {"foo": "bar"}
        tags: [ { "key": "key1", "value": "value1" }, { "key": "key2", "value": "value2" } ]
        creation_date: "2021-05-01T08:51:34.148000+00:00"
        last_refreshed_date: "2023-04-15T02:11:14.248000+00:00"
        hooks: { "pre_refresh": [ { "name": "Print the current user", "command": "whoami", "shell": "bash", element_id: "0" } ] }
        template_id: "DATABASE_TEMPLATE-1"
        is_appdata: false
        plugin_version: "1.0.0"
        primary_object_id: "1-CONTAINER-1"
        primary_engine_id: "1"
        primary_engine_name: "source-engine"
        replicas: [ { "replica_id": "replica-1", "replica_engine_id": "1", "replica_engine_name": "replica-e1" }, { "replica_id": "replica-2", "replica_engine_id": "2", "replica_engine_name": "replica-e2" } ]
    VDBGroup:
      description: A collection of virtual databases and datesets.
      type: object
      required:
        - id
        - name
        - vdb_ids
      properties:
        id:
          description: A unique identifier for the entity.
          type: string
          minLength: 1
          maxLength: 256
          readOnly: true
          example: '123'
        name:
          description: A unique name for the entity.
          type: string
          minLength: 1
          maxLength: 256
          example: 'my-first-vdb-group'
        vdb_ids:
          description: The list of VDB IDs in this VDBGroup.
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 256
          example: [ "vdb-123", "vdb-456" ]
        is_locked:
          description: Indicates whether the VDBGroup is locked.
          type: boolean
          example: false
        locked_by:
          description: The Id of the account that locked the VDBGroup.
          type: integer
          format: int64
          example: 1
        locked_by_name:
          description: The name of the account that locked the VDBGroup.
          type: string
          example: "admin"
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    ConfigSettingsStg:
      description: Custom Database-Level config settings.
      type: object
      properties:
        property_name:
          description: Name of the property.
          type: string
          pattern: "^$|^[_a-zA-Z0-9]*$"
          maxLength: 40
        value:
          type: string
          description: Value of the property.
          pattern: "^$|^''$|^[/_.:%@'+!*a-zA-Z0-9\\[\\]\\- ]*$"
          maxLength: 40
        comment_property:
          type: boolean
          description: Select this option to comment out the provided property name in the configuration file.
    AdditionalMountPoint:
      description: Specifies an additional location on which to mount a subdirectory of an AppData container.
      type: object
      properties:
        shared_path:
          description: Relative path within the container of the directory that should be mounted.
          type: string
          minLength: 1
          maxLength: 2048
          example: "/"
        mount_path:
          description: Absolute path on the target environment were the filesystem should be mounted
          type: string
          minLength: 1
          maxLength: 2048
          example: "/work/ws1"
        environment_id:
          description: The entity ID of the environment on which the file system will be mounted.
          type: string
          minLength: 1
          maxLength: 256
          example: "environment-123"
    BookmarkCreateParameters:
      description: A Data Control Tower object that references points in time for one or more datasets.
      type: object
      required:
        - name
      properties:
        name:
          description: The user-defined name of this bookmark.
          type: string
          minLength: 1
          maxLength: 256
          example: my-bookmark-123
        vdb_ids:
          description: The IDs of the VDBs to create the Bookmark on. This parameter is mutually exclusive with snapshot_ids and timeflow_ids.
          type: array
          items:
            type: string
          uniqueItems: true
          example: [ "vdb-123", "vdb-456" ]
        snapshot_ids:
          description: |
            The IDs of the snapshots that will be part of the Bookmark. This parameter is mutually exclusive with vdb_ids, timestamp, timestamp_in_database_timezone, location and timeflow_ids.
          type: array
          items:
            type: string
          uniqueItems: true
          example: ["snapshot-1", "snapshot-2"]
        timeflow_ids:
          description: The array of timeflow Id. Only allowed to set when timestamp, timestamp_in_database_timezone or location is provided.
          items:
            type: string
          uniqueItems: true
          example: [ "timeflow-1", "timeflow-2" ]
        timestamp:
          type: string
          format: date-time
          description: The point in time from which to execute the operation. Mutually exclusive with snapshot_ids, timestamp_in_database_timezone and location.
          example: '2021-05-01T08:51:34.148000+00:00'
        timestamp_in_database_timezone:
          description: The point in time from which to execute the operation, expressed as a date-time in the timezone of the source database. Mutually exclusive with snapshot_ids, timestamp and location.
          type: string
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{0,3})?'
          example: '2021-08-14T14:55:20.507'
        location:
          type: string
          description: The location to create bookmark from. Mutually exclusive with snapshot_ids, timestamp, and timestamp_in_database_timezone.
          minLength: 1
          maxLength: 256
          example: 112233
        retention:
          description: The retention policy for this bookmark, in days. A value of -1 indicates the bookmark should be kept forever.
              Deprecated in favor of expiration and retain_forever.
          type: integer
          format: int64
          example: 365
          deprecated: true
        expiration:
          description: The expiration for this bookmark. Mutually exclusive with retention and retain_forever.
          type: string
          format: date
          example: "2021-07-04"
        retain_forever:
          description: Indicates that the bookmark should be retained forever.
          type: boolean
          example: false
        tags:
          description: The tags to be created for this Bookmark.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          example:
            - key: key-1
              value: value-1
            - key: key-2
              value: value-2
        make_current_account_owner:
          type: boolean
          default: true
          description: Whether the account creating this bookmark must be configured as owner of the bookmark.
        inherit_parent_vdb_tags:
          type: boolean
          deprecated: true
          default: false
          description: This field has been deprecated in favour of new field 'inherit_parent_tags'.
        inherit_parent_tags:
          type: boolean
          default: false
          description: Whether this bookmark should inherit tags from the parent dataset.
    Bookmark:
      description: A Data Control Tower object that references points in time for one or more datasets.
      type: object
      properties:
        id:
          description: The Bookmark object entity ID.
          type: string
          readOnly: true
          example: bookmark-123
        name:
          description: The user-defined name of this bookmark.
          type: string
          minLength: 1
          maxLength: 256
          example: my-bookmark-123
        creation_date:
          description: The date and time that this bookmark was created.
          type: string
          format: date-time
          readOnly: true
          example: "2021-07-04T08:51:34.148000+00:00"
        vdb_ids:
          description: The list of VDB IDs associated with this bookmark.
          type: array
          items:
            type: string
          example: [ "vdb-123", "vdb-456" ]
        dsource_ids:
          description: The list of dSource IDs associated with this bookmark.
          type: array
          items:
            type: string
          example: [ "dsource-123", "dsource-456" ]
        retention:
          description: The retention policy for this bookmark, in days. A value of -1 indicates the bookmark should be kept forever.
             Deprecated in favor of expiration.
          type: integer
          format: int64
          example: 365
          deprecated: true
        expiration:
          description: The expiration for this bookmark. When unset, indicates the bookmark is kept forever except for bookmarks of replicated datasets. 
                       Expiration cannot be set for bookmarks of replicated datasets.
          type: string
          format: date
          example: "2021-07-04"
        status:
          description: A message with details about operation progress or state of this bookmark.
          type: string
          nullable: true
          readOnly: true
          example: RESTORED
        replicated_dataset:
          description: Whether this bookmark is created from a replicated dataset or not.
          type: boolean
        tags:
          description: The tags to be created for this Bookmark.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          example:
            - key: key-1
              value: value-1
            - key: key-2
              value: value-2
    Environment:
      description: A grouping of a single host or a cluster of hosts.
      type: object
      properties:
        id:
          description: The Environment object entity ID.
          type: string
          example: environment-123
        name:
          description: The name of this environment.
          type: string
          example: Linux Test Host
        namespace_id:
          description: The namespace id of this environment.
          type: string
          example: '1-NAMESPACE-1'
        namespace_name:
          description: The namespace name of this environment.
          type: string
          example: 'test-engine-1'
        is_replica:
          description: Is this a replicated object.
          type: boolean
          example: true
        namespace:
          description: The namespace of this environment for replicated and restored objects.
          type: string
          nullable: true
          example: NAMESPACE-1
        engine_id:
          description: A reference to the Engine that this Environment connection is associated with.
          type: string
          example: engine-123
        enabled:
          description: True if this environment is enabled.
          type: boolean
          example: true
        is_cluster:
          description: True if this environment is a cluster of hosts.
          type: boolean
          example: false
        cluster_home:
          description: Cluster home for RAC environment.
          type: string
          example: /u01/app/12.2.0.1/grid
        is_windows_target:
          description: True if this windows environment is a target environment.
          type: boolean
          example: false
        staging_environment:
          description: ID of the staging environment.
          type: string
          example: "1-WINDOWS_HOST-8"
        hosts:
          description: The hosts that are part of this environment.
          type: array
          items:
            $ref: '#/components/schemas/Host'
        tags:
          description: The tags to be created for this environment.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        repositories:
          description: Repositories associated with this environment. A Repository typically corresponds to a database installation.
          type: array
          items:
            $ref: '#/components/schemas/Repository'
        listeners:
          description: Oracle listeners associated with this environment.
          type: array
          items:
            $ref: '#/components/schemas/OracleListener'
    EnvironmentCreateParameters:
      type: object
      required:
        - engine_id
        - os_name
        - hostname
      properties:
        name:
          type: string
          description: The name of the environment.
          minLength: 1
          maxLength: 256
          example: oracle-environment
        engine_id:
          type: string
          description: The ID of the Engine onto which to create the environment.
          example: "12"
        os_name:
          type: string
          description: Operating system type of the environment.
          enum: [ UNIX, WINDOWS ]
          example: UNIX
        is_cluster:
          type: boolean
          description: Whether the environment to be created is a cluster.
          default: false
          example: true
        cluster_home:
          type: string
          description: Absolute path to cluster home drectory. This parameter is mandatory for UNIX cluster environments.
          minLength: 1
          maxLength: 256
          example: /u01/app/19.0.0.0/grid
        hostname:
          type: string
          description: host address of the machine.
          minLength: 1
          maxLength: 256
          example: db.host.com
        staging_environment:
          type: string
          description: Id of the connector environment which is used to connect to this source environment. This is mandatory parameter when creating Windows source environments.
          minLength: 1
          maxLength: 256
          example: 1-WINDOWS_HOST-1
        connector_port:
          type: integer
          format: int32
          description: Specify port on which Delphix connector will run. This is mandatory parameter when creating Windows target environments.
          minimum: 1
          maximum: 65535
          example: 9100
        connector_authentication_key:
          type: string
          description: Unique per Delphix key used to authenticate with the remote Delphix Connector.
          example: secret
        is_target:
          type: boolean
          description: Whether the environment to be created is a target cluster environment. This property is used only when creating Windows cluster environments.
          example: true
        ssh_port:
          type: integer
          format: int64
          description: ssh port of the host.
          minimum: 1
          maximum: 65535
          default: 22
          example: 22
        toolkit_path:
          type: string
          description: The path for the toolkit that resides on the host.
          minLength: 1
          maxLength: 256
          example: /work
        username:
          type: string
          description: Username of the OS.
          minLength: 1
          maxLength: 256
          example: oracle
        password:
          x-dct-toolkit-credential-field: true
          type: string
          description: Password of the OS.
          minLength: 1
          maxLength: 256
          example: oracle
        vault:
          type: string
          description: The name or reference of the vault from which to read the host credentials.
          minLength: 1
          maxLength: 256
          example: my-vault
        vault_username:
          type: string
          description: Delphix display name for the vault user
          minLength: 1
          maxLength: 256
          example: my-vault-user
        hashicorp_vault_engine:
          type: string
          description: Vault engine name where the credential is stored.
          minLength: 1
          maxLength: 256
          example: kv
        hashicorp_vault_secret_path:
          type: string
          description: Path in the vault engine where the credential is stored.
          minLength: 1
          maxLength: 256
          example: oracle-env
        hashicorp_vault_username_key:
          type: string
          description: Key for the username in the key-value store.
          minLength: 1
          maxLength: 256
          example: username
        hashicorp_vault_secret_key:
          type: string
          description: Key for the password in the key-value store.
          minLength: 1
          maxLength: 256
          example: secret
        cyberark_vault_query_string:
          type: string
          description: Query to find a credential in the CyberArk vault.
          minLength: 1
          maxLength: 256
          example: Safe=Test;Folder=Test;Object=Test
        use_kerberos_authentication:
          type: boolean
          description: Whether to use kerberos authentication.
          example: true
        use_engine_public_key:
          type: boolean
          description: Whether to use public key authentication.
          example: true
        nfs_addresses:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 256
          description: array of ip address or hostnames
          example: [ "192.168.10.2" ]
        ase_db_vault_username:
          type: string
          description: Delphix display name for the vault user
          minLength: 1
          maxLength: 256
          example: user-123
        ase_db_username:
          type: string
          description: username of the SAP ASE database.
          minLength: 1
          maxLength: 256
          example: user-123
        ase_db_password:
          x-dct-toolkit-credential-field: true
          type: string
          description: password of the SAP ASE database.
          minLength: 1
          maxLength: 256
          example: test
        ase_db_vault:
          type: string
          description: The name or reference of the vault from which to read the ASE database credentials.
          minLength: 1
          maxLength: 256
          example: my-vault
        ase_db_hashicorp_vault_engine:
          type: string
          description: Vault engine name where the credential is stored.
          minLength: 1
          maxLength: 256
          example: kv
        ase_db_hashicorp_vault_secret_path:
          type: string
          description: Path in the vault engine where the credential is stored.
          minLength: 1
          maxLength: 256
          example: oracle-env
        ase_db_hashicorp_vault_username_key:
          type: string
          description: Key for the username in the key-value store.
          minLength: 1
          maxLength: 256
          example: username
        ase_db_hashicorp_vault_secret_key:
          type: string
          description: Key for the password in the key-value store.
          minLength: 1
          maxLength: 256
          example: secret
        ase_db_cyberark_vault_query_string:
          type: string
          description: Query to find a credential in the CyberArk vault.
          minLength: 1
          maxLength: 256
          example: Safe=Test;Folder=Test;Object=Test
        ase_db_use_kerberos_authentication:
          type: boolean
          description: Whether to use kerberos authentication for ASE DB discovery.
          example: true
        java_home:
          type: string
          description: The path to the user managed Java Development Kit (JDK). If not specified, then the OpenJDK will be used.
          minLength: 1
          maxLength: 256
          example: /Library/Java/JavaVirtualMachines/jdk/Contents/Home
        dsp_keystore_path:
          type: string
          description: DSP keystore path.
          minLength: 1
          maxLength: 256
          example: /tmp/keystore.keystore
        dsp_keystore_password:
          x-dct-toolkit-credential-field: true
          type: string
          description: DSP keystore password.
          minLength: 1
          maxLength: 256
          example: temp123
        dsp_keystore_alias:
          type: string
          description: DSP keystore alias.
          minLength: 1
          maxLength: 256
          example: oracle-src
        dsp_truststore_path:
          type: string
          description: DSP truststore path.
          minLength: 1
          maxLength: 256
          example: /tmp/truststore.keystore
        dsp_truststore_password:
          x-dct-toolkit-credential-field: true
          type: string
          description: DSP truststore password.
          minLength: 1
          maxLength: 256
          example: truststore123
        description:
          type: string
          description: The environment description.
          minLength: 1
          maxLength: 1024
          example: Unix Orcale source host
        tags:
          type: array
          maxItems: 1000
          description: The tags to be created for this environment.
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 1
        make_current_account_owner:
          type: boolean
          default: true
          description: Whether the account creating this environment must be configured as owner of the environment.
    HostUpdateParameters:
      type: object
      properties:
        hostname:
          type: string
          description: host address of the machine.
          minLength: 1
          maxLength: 256
          example: db.host.com
        oracle_cluster_node_name:
          description: The name of the associated OracleClusterNode.
          type: string
          minLength: 1
          maxLength: 256
          example: "my-favorite-cluster-node"
        oracle_cluster_node_enabled:
          description: Whether the associated OracleClusterNode is enabled.
          type: boolean
          example: true
        oracle_cluster_node_virtual_ips:
          description: The Virtual IP addresses associated with the OracleClusterNode.
          type: array
          items:
            $ref: "#/components/schemas/OracleVirtualIP"
        nfs_addresses:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 256
          description: array of ip addresses or hostnames
          example: [ "192.168.10.2" ]
        ssh_port:
          type: integer
          format: int64
          description: ssh port of the host.
          minimum: 1
          maximum: 65535
          example: 22
        toolkit_path:
          type: string
          description: The path for the toolkit that resides on the host.
          minLength: 1
          maxLength: 256
          example: /work
        java_home:
          type: string
          description: The path to the user managed Java Development Kit (JDK). If not specified, then the OpenJDK will be used.
          minLength: 1
          maxLength: 256
          example: /Library/Java/JavaVirtualMachines/jdk/Contents/Home
        dsp_keystore_path:
          type: string
          description: DSP keystore path.
          minLength: 1
          maxLength: 256
          example: /tmp/keystore.keystore
        dsp_keystore_password:
          x-dct-toolkit-credential-field: true
          type: string
          description: DSP keystore password.
          minLength: 1
          maxLength: 256
          example: temp123
        dsp_keystore_alias:
          type: string
          description: DSP keystore alias.
          minLength: 1
          maxLength: 256
          example: oracle-src
        dsp_truststore_path:
          type: string
          description: DSP truststore path.
          minLength: 1
          maxLength: 256
          example: /tmp/truststore.keystore
        dsp_truststore_password:
          x-dct-toolkit-credential-field: true
          type: string
          description: DSP truststore password.
          minLength: 1
          maxLength: 256
          example: truststore123
        connector_port:
          type: integer
          format: int32
          description: Specify port on which Delphix connector will run.
          minimum: 1
          maximum: 65535
          example: 9100
        oracle_jdbc_keystore_password:
          x-dct-toolkit-credential-field: true
          description: The password for the user managed Oracle JDBC keystore.
          type: string
          format: password
          minLength: 1
        oracle_tde_keystores_root_path:
          description: The path to the root of the Oracle TDE keystores artifact directories.
          type: string
          minLength: 1
        ssh_verification_strategy:
          $ref: "#/components/schemas/SSHVerificationStrategy"
        connector_authentication_key:
          type: string
          description: Unique per Delphix key used to authenticate with the remote Delphix Connector.
          example: secret
    EnvironmentUpdateParameters:
      type: object
      properties:
        name:
          type: string
          description: The name of the environment.
          minLength: 1
          maxLength: 256
          example: oracle-environment
        staging_environment:
          type: string
          description: Id of the connector environment which is used to connect to this source environment.
          minLength: 1
          maxLength: 256
          example: 1-WINDOWS_HOST-1
        cluster_address:
          type: string
          description: Address of the cluster. This property can be modified for Windows cluster only.
          minLength: 1
          maxLength: 256
          example: db.host.com
        cluster_home:
          type: string
          description: Absolute path to cluster home directory. This parameter is for UNIX cluster environments.
          minLength: 1
          maxLength: 256
          example: /u01/app/19.0.0.0/grid
        ase_db_username:
          type: string
          description: username of the SAP ASE database.
          minLength: 1
          maxLength: 256
          example: user-123
        ase_db_password:
          x-dct-toolkit-credential-field: true
          type: string
          description: password of the SAP ASE database.
          minLength: 1
          maxLength: 256
          example: test
        ase_db_vault:
          type: string
          description: The name or reference of the vault from which to read the ASE database credentials.
          minLength: 1
          maxLength: 256
          example: my-vault
        ase_db_vault_username:
          type: string
          description: Delphix display name for the vault user
          minLength: 1
          maxLength: 256
          example: user-123
        ase_db_hashicorp_vault_engine:
          type: string
          description: Vault engine name where the credential is stored.
          minLength: 1
          maxLength: 256
          example: kv
        ase_db_hashicorp_vault_secret_path:
          type: string
          description: Path in the vault engine where the credential is stored.
          minLength: 1
          maxLength: 256
          example: oracle-env
        ase_db_hashicorp_vault_username_key:
          type: string
          description: Key for the username in the key-value store.
          minLength: 1
          maxLength: 256
          example: username
        ase_db_hashicorp_vault_secret_key:
          type: string
          description: Key for the password in the key-value store.
          minLength: 1
          maxLength: 256
          example: secret
        ase_db_cyberark_vault_query_string:
          type: string
          description: Query to find a credential in the CyberArk vault.
          minLength: 1
          maxLength: 256
          example: Safe=Test;Folder=Test;Object=Test
        ase_db_use_kerberos_authentication:
          type: boolean
          description: Whether to use kerberos authentication for ASE DB discovery.
          example: true
        description:
          type: string
          description: The environment description.
          minLength: 1
          maxLength: 1024
          example: Unix Orcale source host
    OracleVirtualIP:
      description: A virtual IP address.
      type: object
      properties:
        domain_name:
          description: The domain name for the VirtualIP.
          type: string
          minLength: 1
          example: virtual.domain.com
        ip:
          description: The IP address for this VirtualIP.
          type: string
          format: ipv4
          example: 192.168.0.1
        discovered:
          description: Whether this VirtualIP was discovered.
          type: boolean
          example: true
    OracleClusterNodeInstance:
      description: An oracle cluster node instance.
      type: object
      properties:
        instance_name:
          description: The name of this instance.
          type: string
        instance_number:
          type: integer
          description: The number of this instance.
    Host:
      description: A physical/virtual server.
      type: object
      properties:
        id:
          description: The entity ID of this Host.
          type: string
          minLength: 1
          maxLength: 256
          example: 3-UNIX_HOST-5
        hostname:
          description: The hostname or IP address of this host.
          type: string
          example: linux.dev.delphix.com
        os_name:
          description: The name of the OS on this host.
          type: string
          example: Linux
        os_version:
          description: The version of the OS on this host.
          type: string
          example: Red Hat Enterprise Linux Server release 7.3 (Maipo)
        memory_size:
          description: The total amount of memory on this host in bytes.
          type: integer
          format: int64
          example: 8382160896
        available:
          description: True if the host is up and a connection can be established from the engine.
          type: boolean
          example: false
        available_timestamp:
          description: The last time the available property was updated.
          type: string
          format: date-time
          example: "2022-06-02T17:49:11.457Z"
        not_available_reason:
          description: The reason why the host is not available.
          type: string
          example: "Failed to connect to host"
        oracle_cluster_node_reference:
          description: The reference to the associated OracleClusterNode.
          type: string
          example: ORACLE_CLUSTER_NODE-1
        oracle_cluster_node_name:
          description: The name of the associated OracleClusterNode.
          type: string
          example: "my-favorite-cluster-node"
        oracle_cluster_node_enabled:
          description: Whether the associated OracleClusterNode is enabled.
          type: boolean
          example: true
        oracle_cluster_node_discovered:
          description: Whether the associated OracleClusterNode was discovered.
          type: boolean
          example: true
        oracle_cluster_node_virtual_ips:
          description: The Virtual IP addresses associated with the OracleClusterNode.
          type: array
          items:
            $ref: "#/components/schemas/OracleVirtualIP"
        oracle_cluster_node_instances:
          description: The instances associated with the OracleClusterNode.
          type: array
          items:
            $ref: "#/components/schemas/OracleClusterNodeInstance"
        windows_cluster_node_reference:
          description: The reference to the associated WindowsClusterNode.
          type: string
          example: WINDOWS_CLUSTER_NODE-1
        windows_cluster_node_name:
          description: The name of the associated WindowsClusterNode.
          type: string
          example: "my-favorite-cluster-node"
        windows_cluster_node_discovered:
          description: Whether the associated Windows cluster node was discovered.
          type: boolean
          example: true
        nfs_addresses:
          description: The list of host/IP addresses to use for NFS export.
          type: array
          items:
            type: string
          uniqueItems: true
          example: [ "192.168.10.2" ]
        dsp_keystore_alias:
          description: The lowercase alias to use inside the user managed DSP keystore.
          type: string
          minLength: 1
          example: "oracle-env"
        dsp_keystore_path:
          description: The path to the user managed DSP keystore.
          type: string
          minLength: 1
          example: "/tmp/keystore.keystore"
        dsp_truststore_path:
          description: The path to the user managed DSP truststore.
          type: string
          minLength: 1
          example: "/tmp/truststore.keystore"
        java_home:
          description: The path to the user managed Java Development Kit (JDK). If not specified, then the OpenJDK will be used.
          type: string
          minLength: 1
          example: "/Library/Java/JavaVirtualMachines/jdk/Contents/Home"
        ssh_port:
          description: The port number used to connect to the host via SSH.
          type: integer
          example: 22
        toolkit_path:
          description: The path for the toolkit that resides on the host.
          type: string
          minLength: 1
          example: "/work"
        oracle_tde_keystores_root_path:
          description: The path to the root of the Oracle TDE keystores artifact directories.
          type: string
          minLength: 1
          example: "/keystore/root/path"
        processor_type:
          description: The platform for the host machine.
          type: string
          example: "x86_64"
        timezone:
          description: The OS timezone.
          type: string
          example: "America/New_York,EST-0500"
    VirtualDatasetHooks:
      description: VDB operation hooks.
      type: object
      properties:
        pre_refresh:
          type: array
          maxItems: 100
          description: The commands to execute on the target environment before refreshing the VDB.
          items:
            $ref: '#/components/schemas/Hook'
        post_refresh:
          type: array
          maxItems: 100
          description: The commands to execute on the target environment after refreshing the VDB.
          items:
            $ref: '#/components/schemas/Hook'
            deprecated: true
        pre_self_refresh:
          type: array
          maxItems: 100
          description: The commands to execute on the target environment before refreshing the VDB with data from itself.
          items:
            $ref: '#/components/schemas/Hook'
        post_self_refresh:
          type: array
          maxItems: 100
          description: The commands to execute on the target environment after refreshing the VDB with data from itself.
          items:
            $ref: '#/components/schemas/Hook'
        pre_rollback:
          deprecated: true
          type: array
          maxItems: 100
          description: The commands to execute on the target environment before rewinding the VDB.
          items:
            $ref: '#/components/schemas/Hook'
        post_rollback:
          deprecated: true
          type: array
          maxItems: 100
          description: The commands to execute on the target environment after rewinding the VDB.
          items:
            $ref: '#/components/schemas/Hook'
        configure_clone:
          type: array
          maxItems: 100
          description: The commands to execute on the target environment when the VDB is created or refreshed.
          items:
            $ref: '#/components/schemas/Hook'
        pre_snapshot:
          type: array
          maxItems: 100
          description: The commands to execute on the target environment before snapshotting a virtual source.
            These commands can quiesce any data prior to snapshotting.
          items:
            $ref: '#/components/schemas/Hook'
        post_snapshot:
          type: array
          maxItems: 100
          description: The commands to execute on the target environment after snapshotting a virtual source.
          items:
            $ref: '#/components/schemas/Hook'
        pre_start:
          type: array
          maxItems: 100
          description: The commands to execute on the target environment before starting a virtual source.
          items:
            $ref: '#/components/schemas/Hook'
        post_start:
          type: array
          maxItems: 100
          description: The commands to execute on the target environment after starting a virtual source.
          items:
            $ref: '#/components/schemas/Hook'
        pre_stop:
          type: array
          maxItems: 100
          description: The commands to execute on the target environment before stopping a virtual source.
          items:
            $ref: '#/components/schemas/Hook'
        post_stop:
          type: array
          maxItems: 100
          description: The commands to execute on the target environment after stopping a virtual source.
          items:
            $ref: '#/components/schemas/Hook'
    DSourceHooks:
      description: DSource operation hooks.
      type: object
      properties:
        ops_pre_sync:
          type: array
          maxItems: 100
          description: The commands to execute before syncing with external data.
          items:
            required:
              - command
            properties:
              name:
                type: string
                minLength: 1
                maxLength: 256
              command:
                type: string
                minLength: 1
                maxLength: 131072
              shell:
                type: string
                enum: [ "bash", "shell", "expect", "ps", "psd" ]
              element_id:
                type: string
                minLength: 1
                maxLength: 256
              has_credentials:
                type: boolean
        ops_pre_log_sync:
          type: array
          maxItems: 100
          description: The commands to execute after syncing with external data and before running the LogSync.
          items:
            required:
              - command
            properties:
              name:
                type: string
                minLength: 1
                maxLength: 256
              command:
                type: string
                minLength: 1
                maxLength: 131072
              shell:
                type: string
                enum: [ "bash", "shell", "expect", "ps", "psd" ]
              element_id:
                type: string
                minLength: 1
                maxLength: 256
              has_credentials:
                type: boolean
        ops_post_sync:
          type: array
          maxItems: 100
          description: The commands to execute after syncing a linked source.
          items:
            required:
              - command
            properties:
              name:
                type: string
                minLength: 1
                maxLength: 256
              command:
                type: string
                minLength: 1
                maxLength: 131072
              shell:
                type: string
                enum: [ "bash", "shell", "expect", "ps", "psd" ]
              element_id:
                type: string
                minLength: 1
                maxLength: 256
              has_credentials:
                type: boolean
        pre_validated_sync:
          x-internal: true
          type: array
          maxItems: 100
          description: The commands to execute on the staging source before performing a validated sync.
          items:
            required:
              - command
            properties:
              name:
                type: string
                minLength: 1
                maxLength: 256
              command:
                type: string
                minLength: 1
                maxLength: 131072
              shell:
                type: string
                enum: [ "bash", "shell", "expect", "ps", "psd" ]
              element_id:
                type: string
                minLength: 1
                maxLength: 256
              has_credentials:
                type: boolean
        post_validated_sync:
          x-internal: true
          type: array
          maxItems: 100
          description: The commands to execute on the staging source after performing a validated sync.
          items:
            required:
              - command
            properties:
              name:
                type: string
                minLength: 1
                maxLength: 256
              command:
                type: string
                minLength: 1
                maxLength: 131072
              shell:
                type: string
                enum: [ "bash", "shell", "expect", "ps", "psd" ]
              element_id:
                type: string
                minLength: 1
                maxLength: 256
              has_credentials:
                type: boolean
    BaseProvisionVDBParameters:
      allOf:
        - $ref: '#/components/schemas/VirtualDatasetHooks'
        - type: object
          properties:
            target_group_id:
              type: string
              description: The ID of the group into which the VDB will be provisioned. If unset, a group
                is selected randomly on the Engine.
              minLength: 1
              maxLength: 256
              example: group-123
            name:
              type: string
              description: The unique name of the provisioned VDB within a group.
                If unset, a name is randomly generated.
              minLength: 1
              maxLength: 256
              example: my-test-vdb
            database_name:
              type: string
              description: The name of the database on the target environment. Defaults to the value of the name property.
              minLength: 1
              maxLength: 256
              example: my-test-database
            cdb_id:
              x-dct-toolkit-subcommand: oracle
              type: string
              description: The ID of the container database (CDB) to provision an Oracle Multitenant database into. This corresponds to a CDB or VCDB API object. When this is not set, a new vCDB will be provisioned.
              minLength: 1
              maxLength: 256
              example: ORACLE_SINGLE_CONFIG-376
            cluster_node_ids:
              x-dct-toolkit-subcommand: oracle
              type: array
              items:
                type: string
                minLength: 1
                maxLength: 256
              minItems: 1
              description: The cluster node ids, name or addresses for this provision operation (Oracle RAC Only).
              example: [ "ORACLE_CLUSTER_NODE-1" ]
            cluster_node_instances:
              x-dct-toolkit-subcommand: oracle
              type: array
              items:
                $ref: "#/components/schemas/ClusterNodeInstance"
              minItems: 1
              description: The cluster node instances details for this provision operation(Oracle RAC Only).This property is mutually exclusive with cluster_node_ids.
              example: [ { node_reference: "ORACLE_CLUSTER_NODE-1", instance_number: 1, instance_name: "cluster_instance1" } ]
            truncate_log_on_checkpoint:
              x-dct-toolkit-subcommand: sybase
              type: boolean
              description: Whether to truncate log on checkpoint (ASE only).
              example: true
            os_username:
              x-dct-toolkit-subcommand: oracle
              type: string
              description: The name of the privileged user to run the provision operation (Oracle Only).
              minLength: 1
              maxLength: 256
              example: os-user-x
            os_password:
              x-dct-toolkit-credential-field: true
              x-dct-toolkit-subcommand: oracle
              type: string
              description: The password of the privileged user to run the provision operation (Oracle Only).
              minLength: 1
              maxLength: 256
              example: os-user-secret-password
            environment_id:
              type: string
              description: The ID of the target environment where to provision the VDB. If repository_id
                unambigously identifies a repository, this is unnecessary and ignored. Otherwise,
                a compatible repository is randomly selected on the environment.
              minLength: 1
              maxLength: 256
              example: environment-123
            environment_user_id:
              type: string
              description: The environment user ID to use to connect to the target environment.
              minLength: 1
              maxLength: 256
              example: environment-user-123
            repository_id:
              type: string
              description: The ID of the target repository where to provision the VDB. A repository typically corresponds
                to a database installation (Oracle home, database instance, ...). Setting this attribute
                implicitly determines the environment where to provision the VDB.
              minLength: 1
              maxLength: 256
              example: oracle-home-123
            auto_select_repository:
              type: boolean
              description: Option to automatically select a compatible environment and repository. Mutually exclusive with
                repository_id.
              example: true
            vdb_restart:
              type: boolean
              description: Indicates whether the Engine should automatically restart this virtual source when
                target host reboot is detected.
              example: true
            template_id:
              x-dct-toolkit-subcommand: oracle
              type: string
              description: The ID of the target VDB Template (Oracle Only).
              minLength: 1
              maxLength: 256
              example: template-123
            auxiliary_template_id:
              x-dct-toolkit-subcommand: oracle
              type: string
              description: The ID of the configuration template to apply to the auxiliary container database. This is only relevant when provisioning a Multitenant pluggable database into an existing CDB, i.e when the cdb_id property is set.(Oracle Only)
              minLength: 1
              maxLength: 256
              example: aux-template-123
            file_mapping_rules:
              x-dct-toolkit-subcommand: oracle
              type: string
              description: Target VDB file mapping rules (Oracle Only). Rules must be line separated (\n or \r)
                and each line must have the format "pattern:replacement". Lines are applied in order.
              minLength: 1
              maxLength: 131072
              example: "/datafile/dbdhcp3/oradata/dbdhcp3:/data\n/u03/app/ora11202/product/11.2.0/dbhome_1/dbs/dbv_R2V4.dbf:/data/dbv_R2V4.dbf"
            oracle_instance_name:
              x-dct-toolkit-subcommand: oracle
              type: string
              description: Target VDB SID name (Oracle Only).
              pattern: '^[a-zA-Z0-9_]+$'
              minLength: 1
              maxLength: 15
              example: dbdhcp2
            unique_name:
              x-dct-toolkit-subcommand: oracle
              type: string
              description: Target VDB db_unique_name (Oracle Only).
              pattern: '^[a-zA-Z0-9_\$#]+$'
              minLength: 1
              maxLength: 30
              example: dbdhcp2
            vcdb_name:
              x-dct-toolkit-subcommand: oracle
              type: string
              description: When provisioning an Oracle Multitenant vCDB (when the cdb_id property is not set), the name of the provisioned vCDB (Oracle Multitenant Only).
              pattern: '^[a-zA-Z0-9_]+$'
              minLength: 1
              maxLength: 256
              example: VCCD_6QQ
            vcdb_database_name:
              x-dct-toolkit-subcommand: oracle
              type: string
              description: When provisioning an Oracle Multitenant vCDB (when the cdb_id property is not set), the database name of the provisioned vCDB. Defaults to the value of the vcdb_name property. (Oracle Multitenant Only).
              minLength: 1
              maxLength: 8
              example: VCCD_6QQ
            mount_point:
              type: string
              description: Mount point for the VDB (Oracle, ASE, AppData).
              minLength: 1
              maxLength: 256 # 87 characters for ASE
              example: /var/mnt
            open_reset_logs:
              x-dct-toolkit-subcommand: oracle
              type: boolean
              description: Whether to open the database after provision (Oracle Only).
              example: true
            snapshot_policy_id:
              type: string
              description: The ID of the snapshot policy for the VDB.
              minLength: 1
              maxLength: 256
              example: snapshot-123
            retention_policy_id:
              type: string
              description: The ID of the retention policy for the VDB.
              minLength: 1
              maxLength: 256
              example: retention-policy-123
            recovery_model:
              x-dct-toolkit-subcommand: mssql
              type: string
              description: Recovery model of the source database (MSSql Only).
              enum: [ FULL, SIMPLE, BULK_LOGGED ]
              example: FULL
            pre_script:
              x-dct-toolkit-subcommand: mssql
              type: string
              description: PowerShell script or executable to run prior to provisioning (MSSql Only).
              minLength: 1
              maxLength: 1024
              example: C:\Program Files\Delphix\scripts\myscript.ps1
            post_script:
              x-dct-toolkit-subcommand: mssql
              type: string
              description: PowerShell script or executable to run after provisioning (MSSql Only).
              minLength: 1
              maxLength: 1024
              example: C:\Program Files\Delphix\scripts\myscript.ps1
            cdc_on_provision:
              x-dct-toolkit-subcommand: mssql
              type: boolean
              description: Option to enable change data capture (CDC) on both the provisioned VDB and
                subsequent snapshot-related operations (e.g. refresh, rewind) (MSSql Only).
              example: true
            online_log_size:
              x-dct-toolkit-subcommand: oracle
              description: Online log size in MB (Oracle Only).
              type: integer
              minimum: 4
              example: 4
            online_log_groups:
              x-dct-toolkit-subcommand: oracle
              description: Number of online log groups (Oracle Only).
              type: integer
              minimum: 2
              example: 2
            archive_log:
              x-dct-toolkit-subcommand: oracle
              description: Option to create a VDB in archivelog mode (Oracle Only).
              type: boolean
              example: true
            new_dbid:
              x-dct-toolkit-subcommand: oracle
              description: Option to generate a new DB ID for the created VDB (Oracle Only).
              type: boolean
              example: true
            masked:
              description: Indicates whether to mark this VDB as a masked VDB.
              type: boolean
              example: true
            listener_ids:
              x-dct-toolkit-subcommand: oracle
              description: The listener IDs for this provision operation (Oracle Only).
              type: array
              items:
                type: string
                minLength: 1
                maxLength: 256
              example: [ "listener-123", "listener-456" ]
            custom_env_vars:
              description: Environment variable to be set when the engine creates a VDB.
                See the Engine documentation for the list of allowed/denied environment variables and
                rules about substitution.
              type: object
              additionalProperties:
                type: string
                minLength: 1
                maxLength: 4096
              example:
                MY_ENV_VAR1: $ORACLE_HOME
                MY_ENV_VAR2: $CRS_HOME/after
            custom_env_files:
              description: Environment files to be sourced when the Engine creates a VDB.
                This path can be followed by parameters. Paths and parameters are separated by spaces.
              type: array
              items:
                type: string
                minLength: 1
                maxLength: 4096
              example: [ "/export/home/env_file_1", "/export/home/env_file_2" ]
            oracle_rac_custom_env_files:
              x-dct-toolkit-subcommand: oracle
              description: Environment files to be sourced when the Engine creates an Oracle RAC VDB.
                This path can be followed by parameters. Paths and parameters are separated by spaces.
              type: array
              items:
                $ref: "#/components/schemas/OracleRacCustomEnvFile"
              example: [{node_id: ORACLE_CLUSTER_NODE-1, path_parameters: "/export/home/env_file_1"}]
            oracle_rac_custom_env_vars:
              x-dct-toolkit-subcommand: oracle
              description: Environment variable to be set when the engine creates an Oracle RAC VDB.
                See the Engine documentation for the list of allowed/denied environment variables and
                rules about substitution.
              type: array
              items:
                $ref: "#/components/schemas/OracleRacCustomEnvVar"
              example: [{node_id: ORACLE_CLUSTER_NODE-1, name: MY_ENV_VAR1, value: $CRS_HOME/after}]
            parentTdeKeystorePath:
              x-dct-toolkit-subcommand: oracle
              description:  Path to a copy of the parent's Oracle transparent data
                encryption keystore on the target host. Required to provision from snapshots
                containing encrypted database files. (Oracle Multitenant Only)
              type: string
              minLength: 1
              maxLength: 1024
              example: "/foo/bar/tde"
            parent_tde_keystore_password:
              x-dct-toolkit-credential-field: true
              x-dct-toolkit-subcommand: oracle
              description: The password of the keystore specified in parentTdeKeystorePath. (Oracle Multitenant Only)
              type: string
              minLength: 1
              maxLength: 1024
              example: "password"
            tde_exported_key_file_secret:
              x-dct-toolkit-subcommand: oracle
              description: Secret to be used while exporting and importing vPDB encryption keys
                if Transparent Data Encryption is enabled on the vPDB. (Oracle Multitenant Only)
              type: string
              minLength: 1
              maxLength: 1024
              example: "secret"
            tde_key_identifier:
              x-dct-toolkit-subcommand: oracle
              description: ID of the key created by Delphix. (Oracle Multitenant Only)
              type: string
              minLength: 1
              maxLength: 256
              example: "tde-indentifier"
            target_vcdb_tde_keystore_path:
              x-dct-toolkit-subcommand: oracle
              description: Path to the keystore of the target vCDB. (Oracle Multitenant Only)
              type: string
              minLength: 1
              maxLength: 1024
              example: "/foo/cdb/tde"
            cdb_tde_keystore_password:
              x-dct-toolkit-credential-field: true
              x-dct-toolkit-subcommand: oracle
              description: The password for the Transparent Data Encryption keystore associated with the CDB. (Oracle Multitenant Only)
              type: string
              minLength: 1
              maxLength: 1024
              example: "cdb-password"
            vcdb_tde_key_identifier:
              x-dct-toolkit-subcommand: oracle
              description: ID of the key created by Delphix. (Oracle Multitenant Only)
              type: string
              minLength: 1
              maxLength: 256
              example: "vcdb-identifier"
            appdata_source_params:
              x-dct-toolkit-subcommand: appdata
              description: The JSON payload conforming to the DraftV4 schema based on the type of application data being manipulated.
              type: object
              additionalProperties: true
              example: {"param": "value"}
            additional_mount_points:
              x-dct-toolkit-subcommand: appdata
              description: Specifies additional locations on which to mount a subdirectory of an AppData container.
              type: array
              items:
                $ref: "#/components/schemas/AdditionalMountPoint"
              nullable: true
              example: [{"shared_path": "/", "mount_path": "/work", "environment_id": "environment-123"}]
            appdata_config_params:
              x-dct-toolkit-subcommand: appdata
              description: The list of parameters specified by the source config schema in the toolkit
              type: object
              additionalProperties: true
              nullable: true
              example: {"option": "value"}
            config_params:
              description: Database configuration parameter overrides.
              type: object
              additionalProperties: true
              nullable: true
              example: {"processes": 150}
            privileged_os_user:
              x-dct-toolkit-subcommand: postgres
              type: string
              description: This privileged unix username will be used to create the VDB. Leave this field blank if you do not want to use privilege elevation.
                           The unix privileged username should begin with a letter or an underscore, followed by letters, digits, underscores, or dashes. They can end with a dollar sign (postgres only).
              pattern: "^$|^[a-zA-Z_][a-zA-Z0-9_\\-]+[$]?$"
              maxLength: 32
            postgres_port:
              x-dct-toolkit-subcommand: postgres
              type: integer
              description: Port number for Postgres target database (postgres only).
              minimum: 1
              maximum: 65536
            config_settings_stg:
              x-dct-toolkit-subcommand: postgres
              type: array
              description: Custom Database-Level config settings (postgres only).
              items:
                $ref: "#/components/schemas/ConfigSettingsStg"
            vcdb_restart:
              x-dct-toolkit-subcommand: oracle
              type: boolean
              description: Indicates whether the Engine should automatically restart this vCDB when target host reboot is detected.
                If vdb_restart property value is not explicitly set and vcdb_restart is set as false - the vdb_restart property is defaulted to false.
              example: true
            mssql_failover_drive_letter:
              x-dct-toolkit-subcommand: mssql
              type: string
              description: Base drive letter location for mount points. (MSSql Only).
              minLength: 1
              maxLength: 1
            tags:
              type: array
              maxItems: 1000
              description: The tags to be created for VDB.
              items:
                $ref: '#/components/schemas/Tag'
              minItems: 1

    ProvisionVDBByTimestampParameters:
      allOf:
        - $ref: '#/components/schemas/BaseProvisionVDBParameters'
        - $ref: '#/components/schemas/DataPointByTimestampParameters'
        - type: object
          required:
            - source_data_id
          properties:
            engine_id:
              type: string
              description: The ID of the Engine onto which to provision. If the source ID unambiguously
                identifies a source object, this parameter is unnecessary and ignored.
              minLength: 1
              maxLength: 256
              example: engine-123
            source_data_id:
              type: string
              description: The ID of the source object (dSource or VDB) to provision from. All other
                objects referenced by the parameters must live on the same engine as
                the source.
              minLength: 1
              maxLength: 256
              example: source-123
            make_current_account_owner:
              type: boolean
              default: true
              description: Whether the account provisioning this VDB must be configured as owner of the VDB.
    ProvisionVDBByLocationParameters:
      allOf:
        - $ref: '#/components/schemas/BaseProvisionVDBParameters'
        - $ref: '#/components/schemas/DataPointByLocationParameters'
        - type: object
          properties:
            engine_id:
              type: string
              description: The ID of the Engine onto which to provision. If the source ID unambiguously
                identifies a source object, this parameter is unnecessary and ignored.
              minLength: 1
              maxLength: 256
              example: engine-123
            source_data_id:
              type: string
              description: The ID of the source object (dSource or VDB) to provision from. All other
                objects referenced by the parameters must live on the same engine as
                the source.
              minLength: 1
              maxLength: 256
              example: source-123
            make_current_account_owner:
              type: boolean
              default: true
              description: Whether the account provisioning this VDB must be configured as owner of the VDB.
    ProvisionVDBBySnapshotParameters:
      allOf:
        - $ref: '#/components/schemas/BaseProvisionVDBParameters'
        - $ref: '#/components/schemas/DataPointBySnapshotParameters'
        - type: object
          properties:
            engine_id:
              type: string
              description: The ID of the Engine onto which to provision. If the source ID unambiguously
                identifies a source object, this parameter is unnecessary and ignored.
              minLength: 1
              maxLength: 256
              example: engine-123
            source_data_id:
              type: string
              description: The ID of the source object (dSource or VDB) to provision from. All other
                objects referenced by the parameters must live on the same engine as the source. If this
                property is not set, the data_source of the snapshot_id will be used.
              minLength: 1
              maxLength: 256
              example: source-123
            make_current_account_owner:
              type: boolean
              default: true
              description: Whether the account provisioning this VDB must be configured as owner of the VDB.
    ProvisionVDBFromBookmarkParameters:
      allOf:
        - $ref: '#/components/schemas/BaseProvisionVDBParameters'
        - $ref: '#/components/schemas/DataPointFromBookmarkParameters'
        - type: object
          properties:
            make_current_account_owner:
              type: boolean
              default: true
              description: Whether the account provisioning this VDB must be configured as owner of the VDB.
    ProvisionVDBGroupFromBookmarkParameters:
      required:
        - name
        - bookmark_id
        - provision_parameters
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 256
          description: Name of the created VDB group name.
        bookmark_id:
          type: string
          minLength: 1
          maxLength: 256
          description: ID of a bookmark to provision this VDB Group from.
        provision_parameters:
          type: object
          description: Provision parameters for each of the VDBs which will need to be provisioned.
            The key must be the vdb_id of the corresponding entry from the bookmark, and the value the provision
            parameters for the VDB which will be cloned from the bookmark.
          additionalProperties:
            $ref: '#/components/schemas/BaseProvisionVDBParameters'
          example:
            "vdb_id1": { "auto_select_repository": true }
            "vdb_id2": { "auto_select_repository": true }
        tags:
          type: array
          maxItems: 1000
          description: The tags to be created for VDB Group.
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 1
        make_current_account_owner:
          type: boolean
          default: true
          description: Whether the account provisioning this VDB group must be configured as owner of the VDB group.
    DataPointByTimestampParameters:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: The point in time from which to execute the operation.
            Mutually exclusive with timestamp_in_database_timezone.
            If the timestamp is not set, selects the latest point.
          example: '2021-05-01T08:51:34.148000+00:00'
        timestamp_in_database_timezone:
          description: The point in time from which to execute the operation, expressed as a date-time
            in the timezone of the source database.
            Mutually exclusive with timestamp.
          type: string
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{0,3})?'
          example: '2021-08-14T14:55:20.507'
        timeflow_id:
          description: The Timeflow ID.
          type: string
          example: timeflow-123
    DataPointByLocationParameters:
      type: object
      properties:
        location:
          type: string
          description: The location to provision from.
          minLength: 1
          maxLength: 256
          example: 112233
        timeflow_id:
          type: string
          description: ID of the timeflow to provision from.
          minLength: 1
          maxLength: 256
          example: "timeflow_123"
    DataPointBySnapshotParameters:
      type: object
      properties:
        snapshot_id:
          type: string
          description: The ID of the snapshot from which to execute the operation.
            If the snapshot_id is not, selects the latest snapshot.
          minLength: 1
          maxLength: 256
    ProvisionVDBByTimestampDefaultsRequest:
      type: object
      required:
        - source_data_id
      properties:
        timestamp:
          type: string
          format: date-time
          description: The point in time from which to execute the operation.
            Mutually exclusive with timestamp_in_database_timezone.
            If the timestamp is not set, selects the latest point.
          example: '2021-05-01T08:51:34.148000+00:00'
        timestamp_in_database_timezone:
          description: The point in time from which to execute the operation, expressed as a date-time
            in the timezone of the source database.
            Mutually exclusive with timestamp.
          type: string
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{0,3})?'
          example: '2021-08-14T14:55:20.507'
        engine_id:
          type: string
          description: The ID of the Engine onto which to provision. If the source ID unambiguously
            identifies a source object, this parameter is unnecessary and ignored.
          minLength: 1
          maxLength: 256
          example: engine-123
        source_data_id:
          type: string
          description: The ID of the source object (dSource or VDB) to provision from. All other
            objects referenced by the parameters must live on the same engine as
            the source.
          minLength: 1
          maxLength: 256
          example: source-123
        timeflow_id:
          description: The Timeflow ID.
          type: string
          example: timeflow-123
    ProvisionVDBByLocationDefaultsRequest:
      type: object
      properties:
        source_data_id:
          type: string
          description: The ID of the source object (dSource or VDB) to provision from. All other
            objects referenced by the parameters must live on the same engine as
            the source.
          minLength: 1
          maxLength: 256
          example: source-123
        engine_id:
          type: string
          description: The ID of the Engine onto which to provision. If the source ID unambiguously
            identifies a source object, this parameter is unnecessary and ignored.
          minLength: 1
          maxLength: 256
          example: engine-123
        location:
          type: string
          description: The location to get the defaults from.
          minLength: 1
          maxLength: 256
          example: 112233
        timeflow_id:
          type: string
          description: ID of the timeflow to provision from.
          minLength: 1
          maxLength: 256
          example: "timeflow_123"
    ProvisionVDBBySnapshotDefaultsRequest:
      type: object
      properties:
        snapshot_id:
          type: string
          description: The ID of the snapshot from which to execute the operation.
          minLength: 1
          maxLength: 256
          example: snapshot-123
        engine_id:
          type: string
          description: The ID of the Engine onto which to provision. If the source ID unambiguously
            identifies a source object, this parameter is unnecessary and ignored.
          minLength: 1
          maxLength: 256
          example: engine-123
        source_data_id:
          type: string
          description: The ID of the source object (dSource or VDB) to provision from. If this
            property is not set, the data_source of the snapshot_id will be used.
          minLength: 1
          maxLength: 256
          example: source-123
    NameValuePair:
      type: object
      required:
        - var_name
        - var_value
      properties:
        var_name:
          type: string
          description: The name of the environment variable.
          minLength: 1
          maxLength: 256
          example: env-var-name-1
        var_value:
          type: string
          description: The value of the environment variable.
          minLength: 1
          maxLength: 256
          example: env-var-value-1
    SnapshotCompatibleRepositoryRequest:
      type: object
      properties:
        source_data_id:
          type: string
          description: The ID of the source object (dSource or VDB) to get the compatible repos. All other
            objects referenced by the parameters must live on the same engine as
            the source.
          minLength: 1
          maxLength: 256
          example: source-123
        engine_id:
          type: string
          description: The ID of the Engine from where to get the compatible repos. If the source ID unambiguously
            identifies a source object, this parameter is unnecessary and ignored.
          minLength: 1
          maxLength: 256
          example: engine-123
        snapshot_id:
          type: string
          description: The ID of the snapshot from which to execute the operation.
          minLength: 1
          maxLength: 256
          example: snapshot-123
        environment_id:
          type: string
          description: The ID or name of the target environment.
          minLength: 1
          maxLength: 256
          example: 1-UNIX_HOST_ENVIRONMENT-1
    TimestampCompatibleRepositoryRequest:
      type: object
      properties:
        source_data_id:
          type: string
          description: The ID of the source object (dSource or VDB) to get the compatible repos. All other
            objects referenced by the parameters must live on the same engine as
            the source.
          minLength: 1
          maxLength: 256
          example: source-123
        engine_id:
          type: string
          description: The ID of the Engine from where to get the compatible repos. If the source ID unambiguously
            identifies a source object, this parameter is unnecessary and ignored.
          minLength: 1
          maxLength: 256
          example: engine-123
        timestamp:
          type: string
          format: date-time
          description: The point in time from which to execute the operation.
            If the timestamp is not set, selects the latest point.
          example: '2021-05-01T08:51:34.148000+00:00'
        timeflow_id:
          type: string
          description: ID of the timeflow from which compatible repos need to be fetched, mutually exclusive with source_data_id.
          minLength: 1
          maxLength: 256
          example: "timeflow_123"
        environment_id:
          type: string
          description: The ID or name of the target environment.
          minLength: 1
          maxLength: 256
          example: 1-UNIX_HOST_ENVIRONMENT-1
    BookmarkCompatibleRepositoryRequest:
      type: object
      required:
        - bookmark_id
      properties:
        bookmark_id:
          type: string
          description: The ID of the bookmark from which to execute the operation. The bookmark must contain only one VDB.
          minLength: 1
          maxLength: 256
        environment_id:
          type: string
          description: The ID or name of the target environment.
          minLength: 1
          maxLength: 256
          example: 1-UNIX_HOST_ENVIRONMENT-1
    LocationCompatibleRepositoryRequest:
      type: object
      properties:
        source_data_id:
          type: string
          description: The ID of the source object (dSource or VDB) to get the compatible repos. All other
            objects referenced by the parameters must live on the same engine as
            the source.
          minLength: 1
          maxLength: 256
          example: source-123
        engine_id:
          type: string
          description: The ID of the Engine from where to get the compatible repos. If the source ID unambiguously
            identifies a source object, this parameter is unnecessary and ignored.
          minLength: 1
          maxLength: 256
          example: engine-123
        location:
          type: string
          description: location from where compatible repo to be fetched.
          minLength: 1
          maxLength: 256
        timeflow_id:
          type: string
          description: ID of the timeflow from which compatible repos need to be fetched.
          minLength: 1
          maxLength: 256
          example: "timeflow_123"
        environment_id:
          type: string
          description: The ID or name of the target environment.
          minLength: 1
          maxLength: 256
          example: 1-UNIX_HOST_ENVIRONMENT-1
    ProvisionVDBFromBookmarkDefaultsRequest:
      type: object
      required:
        - bookmark_id
      properties:
        bookmark_id:
          type: string
          description: The ID of the bookmark from which to execute the operation. The bookmark must contain only one VDB.
          minLength: 1
          maxLength: 256
    DataPointFromBookmarkParameters:
      type: object
      required:
        - bookmark_id
      properties:
        bookmark_id:
          type: string
          description: The ID of the bookmark from which to execute the operation.
            The bookmark must contain only one VDB.
          minLength: 1
          maxLength: 256
    RollbackVDBByTimestampParameters:
      deprecated: true
      allOf:
        - $ref: '#/components/schemas/DataPointByTimestampParameters'
    RollbackVDBBySnapshotParameters:
      deprecated: true
      allOf:
        - $ref: '#/components/schemas/DataPointBySnapshotParameters'
    RollbackVDBFromBookmarkParameters:
      deprecated: true
      allOf:
        - $ref: '#/components/schemas/DataPointFromBookmarkParameters'
    RefreshVDBByTimestampParameters:
      allOf:
        - $ref: '#/components/schemas/DataPointByTimestampParameters'
        - type: object
          properties:
            dataset_id:
              type: string
              description: ID of the dataset to refresh to, mutually exclusive with timeflow_id.
              minLength: 1
              maxLength: 256
              example: "123-CONTAINER_1"
            timeflow_id:
              type: string
              description: ID of the timeflow to refresh to, mutually exclusive with dataset_id.
              minLength: 1
              maxLength: 256
              example: "timeflow_123"
    RefreshVDBBySnapshotParameters:
      allOf:
        - $ref: '#/components/schemas/DataPointBySnapshotParameters'
    RefreshVDBFromBookmarkParameters:
      allOf:
        - $ref: '#/components/schemas/DataPointFromBookmarkParameters'
    RefreshVDBByLocationParameters:
        type: object
        description: Parameters to refresh by a database-specific identifier (SCN, LSN, etc).
        properties:
          location:
            type: string
            description: The database specific identifier for tracking transactions (SCN, LSN, etc).
            minLength: 1
            maxLength: 256
            example: "1234567"
          dataset_id:
            type: string
            description: ID of the dataset to refresh to, mutually exclusive with timeflow_id.
            minLength: 1
            maxLength: 256
            example: "123-CONTAINER_1"
          timeflow_id:
            type: string
            description: ID of the timeflow to refresh to, mutually exclusive with dataset_id.
            minLength: 1
            maxLength: 256
            example: "timeflow_123"
    RefreshVDBGroupParameters:
      type: object
      description: Parameters to refresh a VDB Group.
      required:
        - bookmark_id
      properties:
        bookmark_id:
          type: string
          minLength: 1
          maxLength: 256
          description: ID of a bookmark to refresh this VDB Group to.
    RollbackVDBGroupParameters:
      type: object
      description: Parameters to rollback a VDB Group.
      required:
        - bookmark_id
      properties:
        bookmark_id:
          type: string
          minLength: 1
          maxLength: 256
          description: ID of a bookmark to rollback this VDB Group to.
    UpdateVDBGroupParameters:
      type: object
      description: Parameters to update a VDB group.
      properties:
        name:
          type: string
          description: The name of the VDB group.
          minLength: 1
          maxLength: 256
          example: my-vdb-group
        vdb_ids:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 256
          minItems: 1
          example: [ "vdb-1", "vdb-2" ]
    UpdateSnapshotParameters:
      type: object
      description: Parameters to update the expiration of a Snapshot.
      properties:
        expiration:
          description: The expiration for this snapshot. Mutually exclusive with retain_forever.
          type: string
          format: date
          example: "2021-07-04"
        retain_forever:
          description: Indicates that the snapshot should be retained forever.
          type: boolean
          example: false
    UpdateBookmarkParameters:
      type: object
      description: Parameters to update a Bookmark.
      properties:
        name:
          description: The user-defined name of this bookmark.
          type: string
          minLength: 1
          maxLength: 256
          example: my-bookmark-123
        expiration:
          description: The expiration for this Bookmark. Mutually exclusive with retain_forever.
          type: string
          format: date
          example: "2021-07-04"
        retain_forever:
          description: Indicates that the Bookmark should be retained forever.
          type: boolean
          example: false
    UpdateMaskingJobParameters:
      type: object
      description: Parameters to update a MaskingJob.
      properties:
        name:
          type: string
          description: The name of the MaskingJob.
          minLength: 1
          maxLength: 1024
          example: 'My favorite MaskingJob'
        connector_username:
          type: string
          description: The username of the Connector used by the MaskingJob. (Standard Job only).
          minLength: 1
          maxLength: 256
          example: 'user123'
        connector_password:
          x-dct-toolkit-credential-field: true
          type: string
          description: The password of the Connector used by the MaskingJob. (Standard Job only).
          minLength: 1
          maxLength: 4096
          example: 'password123'
        on_the_fly_source_connector_username:
          type: string
          description: The username of the source Connector used by the on-the-fly MaskingJob. (Standard Job only).
          minLength: 1
          maxLength: 256
          example: 'user123'
        on_the_fly_source_connector_password:
          x-dct-toolkit-credential-field: true
          type: string
          description: The password of the source Connector used by the on-the-fly MaskingJob. (Standard Job only).
          minLength: 1
          maxLength: 4096
          example: 'password123'
        description:
          description: Description of the Job (Hyperscale Job only).
          type: string
          example: Job for app finance
        dataset_id:
          description: Dataset of the Hyperscale Job (Hyperscale Job only).
          type: string
          example: dataset-123
        retain_execution_data:
          description: Defines whether execution data will be stored after execution is complete (Hyperscale Job only).
          type: string
          enum: [ "NO", "ON_ERROR", "ALWAYS" ]
          example: NO
        max_memory:
          description: Maximum memory to be allocated for each Masking job (Hyperscale Job only).
          type: integer
          format: int32
          example: 1024
        min_memory:
          description: Minimum memory to be allocated for each Masking job (Hyperscale Job only).
          type: integer
          format: int32
          example: 1024
        feedback_size:
          description: Feedback Size for each Masking job (Hyperscale Job only).
          type: integer
          format: int32
          example: 32
        stream_row_limit:
          description: Stream Row Limit for each Masking job (Hyperscale Job only).
          type: integer
          format: int32
          example: 4
        num_input_streams:
          description: Number of input streams to be configured for Masking Job (Hyperscale Job only).
          type: integer
          format: int32
          example: 4
        max_concurrent_source_connections:
          description: Maximum number of parallel connection that the Hyperscale instance can have with the source datasource (Hyperscale Job only).
          type: integer
          format: int32
          example: 32
        max_concurrent_target_connections:
          description: Maximum number of parallel connection that the Hyperscale instance can have with the target datasource (Hyperscale Job only).
          type: integer
          format: int32
          example: 32
        parallelism_degree:
          description: The degree of parallelism (DOP) per Oracle job to recreate the index in the post-load process (Hyperscale Job only).
          type: integer
          format: int32
          example: 4
    UpdateTimeflowParameters:
      type: object
      description: Parameters to update a Timeflow.
      properties:
        name:
          type: string
          description: The name of the timeflow.
          minLength: 1
          maxLength: 1024
          example: 'Latest on parent refresh #02'
    ExecuteMaskingJobParameters:
      type: object
      description: Parameters to execute a MaskingJob.
      properties:
        engine_id:
          type: string
          description: The ID of the Engine to execute this MaskingJob on (Standard job only).
          minLength: 1
          example: 'engine-123'
    DSourceSnapshotParameters:
      type: object
      description: Parameters to snapshot a DSource.
      properties:
        drop_and_recreate_devices:
          type: boolean
          description: |
            If this parameter is set to true, older devices will be dropped and new
            devices created instead of trying to remap the devices. This might increase
            the space utilization on Delphix Engine. (ASE only)
        sync_strategy:
          type: string
          enum: [ "latest_backup", "new_backup", "specific_backup" ]
          description: |
            Determines how the Delphix Engine will take a backup:
            * `latest_backup` - Use the most recent backup.
            * `new_backup` - Delphix will take a new backup of your source database.
            * `specific_backup` - Use a specific backup. Using this option requires setting
              `ase_backup_files` for ASE dSources or `mssql_backup_uuid` for MSSql dSources.
            Default is `new_backup`.
            (ASE, MSSql only)
        ase_backup_files:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 4096
          description: When using the `specific_backup` sync_strategy, determines the backup files. (ASE Only)
        mssql_backup_uuid:
          type: string
          minLength: 1
          maxLength: 4096
          description: When using the `specific_backup` sync_strategy, determines the Backup Set UUID. (MSSql only)
        compression_enabled:
          type: boolean
          description: When using the `new_backup` sync_strategy, determines if compression must be enabled. Defaults
            to the configuration of the ingestion strategy configured on the Delphix Engine for this dSource. (MSSql only)
        availability_group_backup_policy:
          type: string
          enum: [ "primary", "secondary_only", "prefer_secondary" ]
          description: |
            When using the `new_backup` sync_strategy for an MSSql Availability Group, determines the backup policy:
            * `primary` - Backups only go to the primary node.
            * `secondary_only` - Backups only go to secondary nodes. If secondary nodes are down, backups will fail.
            * `prefer_secondary` - Backups go to secondary nodes, but if secondary nodes are down, backups will go to the primary node.
            (MSSql only)
        do_not_resume:
          type: boolean
          description: |
            Indicates whether a fresh SnapSync must be started regardless if it was possible to
            resume the current SnapSync. If true, we will not resume but instead ignore previous progress
            and backup all datafiles even if already completed from previous failed SnapSync. This does not
            force a full backup, if an incremental was in progress this will start a new incremental snapshot.
            (Oracle only)
        double_sync:
          type: boolean
          description: |
            Indicates whether two SnapSyncs should be performed in immediate succession to reduce the number
            of logs required to provision the snapshot. This may significantly reduce the time necessary to
            provision from a snapshot.
            (Oracle only).
        force_full_backup:
          type: boolean
          description: Whether or not to take another full backup of the source database. (Oracle only)
        skip_space_check:
          type: boolean
          description: |
            Skip check that tests if there is enough space available to store the database in
            the Delphix Engine. The Delphix Engine estimates how much space a database will occupy after
            compression and prevents SnapSync if insufficient space is available. This safeguard can be
            overridden using this option. This may be useful when linking highly compressible databases.
            (Oracle only)
        files_for_partial_full_backup:
          type: array
          minItems: 1
          maxItems: 10000
          items:
            type: integer
            format: int64
          description: |
            List of datafiles to take a full backup of. This would be useful in situations
            where certain datafiles could not be backed up during previous SnapSync due to corruption
            or because they went offline.
            (Oracle only)
    UpdateVDBParameters:
      type: object
      description: Parameters to update a VDB.
      properties:
        name:
          type: string
          description: The unique name of the VDB within a group.
          minLength: 1
          maxLength: 256
          example: my-vdb
        db_username:
          type: string
          description: The username of the database user (Oracle, ASE Only).
          minLength: 1
          maxLength: 256
          example: db-username
        db_password:
          x-dct-toolkit-credential-field: true
          type: string
          description: The password of the database user (Oracle, ASE Only).
          minLength: 1
          maxLength: 256
          example: db-password
        validate_db_credentials:
          type: boolean
          default: true
          description: Whether db_username and db_password must be validated, if present, against the VDB.
            This must be set to false when credentials validation is not possible, for instance if the
            VDB is known to be disabled.
          example: true
        auto_restart:
          type: boolean
          description: Whether to enable VDB restart.
        environment_user_id:
          type: string
          description: The environment user ID to use to connect to the target environment.
          minLength: 1
          maxLength: 256
          example: environment-user-123
        template_id:
          type: string
          description: The ID of the target VDB Template (Oracle Only).
          minLength: 1
          maxLength: 256
          example: template-123
        listener_ids:
          description: The listener IDs for this provision operation (Oracle Only).
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 256
          example: [ "listener-123", "listener-456" ]
        new_dbid:
          type: boolean
          description: Whether to enable new DBID for Oracle
        cdc_on_provision:
          type: boolean
          description: Whether to enable CDC on provision for MSSql
        pre_script:
          type: string
          description: Pre script for MSSql.
          minLength: 1
          maxLength: 1024
        post_script:
          type: string
          description: Post script for MSSql.
          minLength: 1
          maxLength: 1024
        hooks:
          $ref: "#/components/schemas/VirtualDatasetHooks"
        custom_env_vars:
          description: Environment variable to be set when the engine administers a VDB.
            See the Engine documentation for the list of allowed/denied environment variables and
            rules about substitution. Custom environment variables can only be updated while the VDB is disabled.
          type: object
          additionalProperties:
            type: string
            minLength: 1
            maxLength: 4096
          example:
            MY_ENV_VAR1: $ORACLE_HOME
            MY_ENV_VAR2: $CRS_HOME/after
        custom_env_files:
          description: Environment files to be sourced when the Engine administers a VDB.
            This path can be followed by parameters. Paths and parameters are separated by spaces.
            Custom environment variables can only be updated while the VDB is disabled.
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 4096
          example: [ "/export/home/env_file_1", "/export/home/env_file_2" ]
        oracle_rac_custom_env_files:
          description: Environment files to be sourced when the Engine administers an Oracle RAC VDB.
            This path can be followed by parameters. Paths and parameters are separated by spaces.
            Custom environment variables can only be updated while the VDB is disabled.
          type: array
          items:
            $ref: "#/components/schemas/OracleRacCustomEnvFile"
          example: [{node_id: ORACLE_CLUSTER_NODE-1, path_parameters: "/export/home/env_file_1"}]
        oracle_rac_custom_env_vars:
          description: Environment variable to be set when the engine administers an Oracle RAC VDB.
            See the Engine documentation for the list of allowed/denied environment variables and
            rules about substitution. Custom environment variables can only be updated while the VDB is disabled.
          type: array
          items:
            $ref: "#/components/schemas/OracleRacCustomEnvVar"
          example: [{node_id: ORACLE_CLUSTER_NODE-1, name: MY_ENV_VAR1, value: $CRS_HOME/after}]
        parent_tde_keystore_path:
          description: Path to a copy of the parent's Oracle transparent data
            encryption keystore on the target host. Required to provision from snapshots
            containing encrypted database files. (Oracle Multitenant Only)
          type: string
          minLength: 1
          maxLength: 1024
          example: "/foo/bar/tde"
        parent_tde_keystore_password:
          x-dct-toolkit-credential-field: true
          description: The password of the keystore specified in parentTdeKeystorePath. (Oracle Multitenant Only)
          type: string
          minLength: 1
          maxLength: 1024
          example: "password"
        tde_key_identifier:
          description: ID of the key created by Delphix. (Oracle Multitenant Only)
          type: string
          minLength: 1
          maxLength: 256
          example: "tde-indentifier"
        target_vcdb_tde_keystore_path:
          description: Path to the keystore of the target vCDB. (Oracle Multitenant Only)
          type: string
          minLength: 1
          maxLength: 1024
          example: "/foo/cdb/tde"
        cdb_tde_keystore_password:
          x-dct-toolkit-credential-field: true
          description: The password for the Transparent Data Encryption keystore associated with the CDB. (Oracle Multitenant Only)
          type: string
          minLength: 1
          maxLength: 1024
          example: "cdb-password"
        appdata_source_params:
          description: The JSON payload conforming to the DraftV4 schema based on the type of application data being manipulated.
          type: object
          additionalProperties: true
          example: {"param": "value"}
        additional_mount_points:
          description: Specifies additional locations on which to mount a subdirectory of an AppData container.
            Can only be updated while the VDB is disabled.
          type: array
          items:
            $ref: "#/components/schemas/AdditionalMountPoint"
          nullable: true
          example: [{"shared_path": "/", "mount_path": "/work", "environment_id": "environment-123"}]
        appdata_config_params:
          description: The parameters specified by the source config schema in the toolkit
          type: object
          additionalProperties: true
          nullable: true
          example: {"option": "value"}
        config_params:
          description: Database configuration parameter overrides.
          type: object
          additionalProperties: true
          nullable: true
          example: {"processes": 150}
        mount_point:
          type: string
          description: Mount point for the VDB (AppData only), can only be updated while the VDB is disabled.
          example: /var/mnt
    EnableVDBParameters:
      type: object
      description: Parameters to enable a VDB.
      properties:
        attempt_start:
          type: boolean
          description: Whether to attempt a startup of the VDB after the enable.
          default: true
    DisableVDBParameters:
      type: object
      description: Parameters to disable a VDB.
      properties:
        attempt_cleanup:
          type: boolean
          description: Whether to attempt a cleanup of the VDB before the disable.
          default: true
    DeleteVDBParameters:
      type: object
      description: Parameters to delete a VDB.
      properties:
        force:
          type: boolean
          description: Whether to continue the operation upon failures.
          default: false
    SwitchTimeflowParameters:
      type: object
      description: Parameters to switch the timeflow of a VDB.
      properties:
        timeflow_id:
          type: string
          description: The ID of the timeflow to switch to.
          example: "timeflow-123"
    Errors:
      description: Sadly, sometimes requests to the API are not successful. Failures can occur for a wide range of reasons. The Errors object contains information about full or partial failures which might have occurred during the request.
      type: array
      items:
        $ref: '#/components/schemas/Error'
    Error:
      type: object
      properties:
        message:
          type: string
          readOnly: true
          description: >-
            Message providing more detail about the error that occurred, if
            available.
        object_name:
          type: string
          readOnly: true
          description: >-
            Name of the object affected by the error.
    Account:
      properties:
        id:
          description: Numeric ID of the Account.
          type: integer
          format: int64
          readOnly: true
        api_client_id:
          description: The unique ID which is used to identify the identity of an API request. The web server (nginx)
            configuration must be configured so as to include the external ID as the value of the X_CLIENT_ID HTTP
            request header when requests are proxied. For OAuth2/JWT based authentication, this typically corresponds
            to a value extracted from the JWT, uniquely identifying the Account.
          type: string
          minLength: 1
          maxLength: 1024
        first_name:
          description: An optional first name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        last_name:
          description: An optional last name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        email:
          description: An optional email for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        username:
          description: The username for username/password authentication. This can also be used to provide an
            optional logical name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        ldap_principal:
          description: This value will be used for linking this account to an LDAP user when authenticated with
            the same LDAP principal. When accounts authenticate with LDAP, an LDAP principal value is calculated
            based on the username, msad_domain_name, search_base and username_pattern.
          type: string
          minLength: 1
          maxLength: 1024
        last_access_time:
          description: last time this account made a (successful or failed) API call. Note that updates to this
             property are asynchronous and make take some time to be reflected.
          type: string
          format: date-time
        creation_time:
          description: Creation time of this Account. This value is null for accounts created prior to
             version 9.0.0 of the product.
          type: string
          format: date-time
        effective_scopes:
          description: Access group scopes associated with this account.
          type: array
          items:
            $ref: '#/components/schemas/EffectiveScope'
        tags:
          description: The tags to be created for this Account.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          example:
            - key: key-1
              value: value-1
            - key: key-2
              value: value-2
        enabled:
          type: boolean
          description: Whether this account can be used to make API calls.
    EffectiveScope:
      properties:
        id:
          description: Id of the access group scope.
          type: string
        name:
          description: Name of the access group scope.
          type: string
    AccountCreateParameter:
      properties:
        is_admin:
          description: Whether the created account must be granted to admin role.
          type: boolean
          default: false
        generate_api_key:
          description: Whether an API key must be generated for this Account. This must be set if the Account
            will be used for API key based authentication, and unset otherwise.
          type: boolean
          default: false
        api_client_id:
          description: The unique ID which is used to identify the identity of an API request. The web server (nginx)
            configuration must be configured so as to include the external ID as the value of the X_CLIENT_ID HTTP
            request header when requests are proxied. If this value isn't set, the application will automatically
            generate one. For OAuth2/JWT based authentication, this typically corresponds to a value extracted from
            the JWT, uniquely identifying the Account.
          type: string
          minLength: 1
          maxLength: 1024
        first_name:
          description: An optional first name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        last_name:
          description: An optional last name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        email:
          description: An optional email for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        username:
          description: The username for username/password authentication. This can also be used to provide an
            optional logical name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        password:
          x-dct-toolkit-credential-field: true
          description: The password for username/password authentication.
          type: string
          minLength: 1
          maxLength: 1024
        ldap_principal:
          description: This value will be used for linking this account to an LDAP user when authenticated with
            the same LDAP principal. When accounts authenticate with LDAP, an LDAP principal value is calculated
            based on the username, msad_domain_name, search_base and username_pattern.
          type: string
          minLength: 1
          maxLength: 1024
        tags:
          description: The tags to be created for this Account.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          example:
            - key: key-1
              value: value-1
            - key: key-2
              value: value-2
    AccountCreateResponse:
      properties:
        token:
          description: |
            The opaque token to use to authenticate for other API calls. The token must be included in all HTTP API calls
            in a request header named "Authorization", and prefixed with "apk " to denote that it is a proprietary API key format.
            For instance, if the token is "abc123", request must contain the following HTTP request header:
            "Authorization: apk abc123".
          type: string
        id:
          type: integer
          format: int64
          description: Numeric ID of the created Account.
        first_name:
          description: First name of the created Account.
          type: string
          minLength: 1
          maxLength: 1024
        last_name:
          description: Last name of the created Account.
          type: string
          minLength: 1
          maxLength: 1024
        email:
          description: Email of the created Account.
          type: string
          minLength: 1
          maxLength: 1024
        username:
          description: Username of the created Account.
          type: string
          minLength: 1
          maxLength: 1024
        ldap_principal:
          description: The LDAP principal of the created Account.
          type: string
          minLength: 1
          maxLength: 1024
        tags:
          description: The tags to be created for this Account.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          example:
            - key: key-1
              value: value-1
            - key: key-2
              value: value-2
    ChangePasswordParameter:
      required:
        - old_password
      properties:
        old_password:
          x-dct-toolkit-credential-field: true
          description: Old password that needs to be changed for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        new_password:
          x-dct-toolkit-credential-field: true
          description: New password that needs to be set for the Account. Set this to null for unsetting the current password. Not including this property also results in unsetting of the current password.
          type: string
          minLength: 1
          maxLength: 1024
    ResetPasswordParameter:
      properties:
        new_password:
          x-dct-toolkit-credential-field: true
          description: New password that needs to be set for the Account. Set this to null for unsetting the current password. Not including this property also results in unsetting of the current password.
          type: string
          minLength: 1
          maxLength: 1024
    AccountUpdateParameter:
      properties:
        id:
          description: Numeric ID of the Account.
          type: integer
          format: int64
          readOnly: true
        api_client_id:
          description: The unique ID which is used to identify the identity of an API request. The web server (nginx)
            configuration must be configured so as to include the external ID as the value of the X_CLIENT_ID HTTP
            request header when requests are proxied. For OAuth2/JWT based authentication, this typically corresponds
            to a value extracted from the JWT, uniquely identifying the Account.
          type: string
          minLength: 1
          maxLength: 1024
        first_name:
          description: An optional first name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        last_name:
          description: An optional last name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        email:
          description: An optional email for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        username:
          description: The username for username/password authentication. This can also be used to provide an
            optional logical name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        ldap_principal:
          description: This value will be used for linking this account to an LDAP user when authenticated with
            the same LDAP principal. When accounts authenticate with LDAP, an LDAP principal value is calculated
            based on the username, msad_domain_name, search_base and username_pattern.
          type: string
          minLength: 1
          maxLength: 1024
    AccountLoginParameter:
      required:
        - username
        - password
      properties:
        username:
          description: Username of the account that needs to login
          type: string
          minLength: 1
          maxLength: 1024
        password:
          x-dct-toolkit-credential-field: true
          description: Password of the account that needs to login.
          type: string
          minLength: 1
          maxLength: 1024
    PasswordPoliciesParams:
      title: PasswordPoliciesParameters
      type: object
      description: Parameters to read or update password policies
      properties:
        enabled:
          description: True if password policies are enforced/enabled.
          type: boolean
          example: false
          default: true
        min_length:
          description: Minimum length for password.
          type: integer
          minimum: 0
          example: 8
          default: 15
        reuse_disallow_limit:
          description: The password can not be the same as any of the previous n passwords.
          type: integer
          minimum: 0
          maximum: 20
          example: 3
          default: 2
        digit:
          description: Mandate at least one digit in password.
          type: boolean
          example: false
          default: true
        uppercase_letter:
          description: Mandate at least one uppercase letter in password.
          type: boolean
          example: false
          default: true
        lowercase_letter:
          description: Mandate at least one lower letter in password.
          type: boolean
          example: false
          default: true
        special_character:
          description: Mandate at least one special character in password.
          type: boolean
          example: false
          default: true
        disallow_username_as_password:
          description: Disallows password containing case-insensitive user name or reversed user name.
          type: boolean
          example: false
          default: true
        maximum_password_attempts:
          description: The number of allowed attempts for incorrect password, after which the account gets locked.
          type: integer
          minimum: 0
          maximum: 100
          default: 5
          example: 3

    LoginToken:
      required:
        - access_token
        - token_type
        - expires_in
      properties:
        access_token:
          description: |
            Opaque token that validates the successful account login and is used to authenticate subsequent api calls.
            This token needs to be sent as part of 'Authorization' header for all api calls prefixed with value contained in 'token_type' property.
            For example, if the 'access_token' value is "abc123" and 'token_type' is "Bearer" then HTTP requests should contain following header :
            "Authorization: Bearer abc123"
          type: string
          minLength: 1
          maxLength: 2048
        token_type:
          description: Type of the token returned in 'access_token' property.
          type: string
          minLength: 1
          maxLength: 1024
        expires_in:
          description: Seconds duration after which the token will expire.
          type: integer
          format: int64
    TokenInfoRequest:
      required:
        - token
      properties:
        token:
          description: API Key or JWT token for fetching information
          x-dct-toolkit-credential-field: true
          type: string
          minLength: 1
          maxLength: 2048
          example: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIyIiwiaXNzIjoiYXBpZ3ctc2VydmljZXMtYXBwIiwiaWF0IjoxNjYwMDI1MTczLCJlbWFpbCI6ImppdGVuZHJhLm1hdGh1ckBkZWxwaGl4LmNvbSIsInVzZXJuYW1lIjoidXNlci00MjciLCJleHAiOjE2NjAxMTE1NzN9._9LgnIlkKUr2KVqjeFYqru3GxJr2-ztSmP0XO3vBkRo
    TokenInfoResponse:
      properties:
        active:
          description: Flag to identify if the token is active.
          type: boolean
        token_type:
          description: Type of the token.
          type: string
          minLength: 1
          maxLength: 1024
        account_id:
          description: Numeric ID of the account.
          type: integer
          format: int64
        first_name:
          description: First name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        last_name:
          description: Last name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        email:
          description: Email for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        username:
          description: The username or logical name for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        ldap_principal:
          description: The LDAP Principal for the Account.
          type: string
          minLength: 1
          maxLength: 1024
        exp:
          description: Seconds duration after which the token will expire.
          type: integer
          format: int64
    ApiUsageData:
      required:
        - api_count
      properties:
        api_endpoint:
          description: API called.
          type: string
          minLength: 1
          example: "/v2/management/engines"
        api_method:
          description: HTTP method for API called.
          type: string
          minLength: 1
          example: GET
        api_count:
          description: Count of API calls over the requested timeframe.
          type: integer
          format: int64
          example: 4200
        kind:
          description: Whether the API calls are of kind automation or governance
          type: string
          example: automation
          enum: [automation, governance]
        client_name:
          description: Name of the api client that called the API endpoint
          type: string
          example: client-123
        user_agent:
          description: Version of the api client that called the API endpoint
          type: string
          example: 1.0-beta
        dct_version:
          description: DCT version at the time of api call
          type: string
          example: 2.2.0

    ListSnapshotsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Snapshot'
        response_metadata:
          $ref: '#/components/schemas/PaginatedResponseMetadata'
    SnapshotDayRange:
      description: Count of TimeFlow snapshots aggregated by day.
      type: object
      properties:
        count:
          description: Number of TimeFlow snapshots on that day.
          type: integer
          format: int64
          example: 1
        date:
          description: Date for which TimeFlow snapshots have been aggregated.
          type: string
          format: date
          example: "2019-09-20"
        start_of_day:
          description: Start of day of this range in the time zone used for computation.
          type: string
          format: date-time
          example: "2019-09-20T07:00:00.000Z"
        end_of_day:
          description: End of day of this range in the time zone used for computation.
          type: string
          format: date-time
          example: "2019-09-21T07:00:00.000Z"
    SnapshotsDayRangesResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SnapshotDayRange'
    Job:
      description: An asynchronous task.
      type: object
      properties:
        id:
          description: The Job entity ID.
          type: string
          example: job-123
        status:
          description: The status of the job.
          type: string
          enum: [ PENDING, STARTED, TIMEDOUT, RUNNING, CANCELED, FAILED, SUSPENDED, WAITING, COMPLETED, ABANDONED ]
          example: RUNNING
        is_waiting_for_telemetry:
          description: Indicates that the operations performed by this Job have completed successfully, but the
                       object changes are not yet reflected. This is only set when when the JOB is in STARTED status,
                       with the guarantee that the job will not transition to the FAILED status.
                       Note that this flag will likely be replaced with a new status in future API versions and be
                       deprecated.
          type: boolean
        type:
          description: The type of job being done.
          type: string
          deprecated: true
          example: DB_REFRESH
        localized_type:
          description: The i18n translated type of job being done.
          type: string
          example: DB Refresh
        error_details:
          description: Details about the failure for FAILED jobs.
          type: string
          example: Unable to connect to the engine.
        warning_message:
          description: Warnings for the job.
          type: string
          example: "Failed to remove local MaskingJob, engineId: 3 localMaskingJobId: 7."
        target_id:
          description: A reference to the job's target.
          type: string
          example: vdb-123
        target_name:
          description: A reference to the job's target name.
          type: string
          example: vdb
        start_time:
          description: The time the job started executing.
          type: string
          format: date-time
          example: "2022-01-02T05:11:24.148000+00:00"
        update_time:
          description: The time the job was last updated.
          type: string
          format: date-time
          example: "2022-01-02T06:11:24.148000+00:00"
        trace_id:
          description: traceId of the request which created this Job
          type: string
        engine_ids:
          description: IDs of the engines this Job is executing on.
          type: array
          items:
            type: string
          deprecated: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        engines:
          type: array
          items:
            $ref: "#/components/schemas/Engine"
        account_id:
          description: The ID of the account who initiated this job.
          type: integer
          example: 1
        account_name:
          description: The account name which initiated this job. It can be either firstname and lastname combination or
                        firstname or lastname or username or email address or Account-<id>.
          type: string
          example: "User 1"
        percent_complete:
          description: Completion percentage of the Job.
          type: integer
          minimum: 0
          maximum: 100
          example: "50"
        virtualization_tasks:
          type: array
          items:
            $ref: "#/components/schemas/VirtualizationTask"

    VirtualizationTask:
      properties:
        id:
          type: string
        parent_job_id:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        title:
          type: string
        percent_complete:
          type: integer
          minimum: 0
          maximum: 100
        events:
          type: array
          items:
            $ref: "#/components/schemas/VirtualizationTaskEvent"
        status:
          type: string
          enum: [ PENDING, STARTED, TIMEDOUT, RUNNING, CANCELED, FAILED, SUSPENDED, WAITING, COMPLETED, ABANDONED ]

    VirtualizationTaskEvent:
      properties:
        message_details:
          type: string

    Engine:
      properties:
        engine_id:
          type: string
          minLength: 1
          maxLength: 4000
        engine_name:
          type: string
          minLength: 1
          maxLength: 4000

    Snapshot:
      description: Virtualization Engine Snapshot of a dSource or VDB.
      type: object
      properties:
        id:
          description: The Snapshot ID.
          type: string
          example: snapshot-123
        engine_id:
          description: The id of the engine the snapshot belongs to.
          type: string
          example: 1
        namespace:
          description: Alternate namespace for this object, for replicated and restored snapshots.
          type: string
          nullable: true
          example: NAMESPACE-1
        name:
          description: The snapshot's name.
          type: string
          example: "@2023-02-02T14:30:00.589"
        namespace_id:
          description: The namespace id of this snapshot.
          type: string
          example: '1-NAMESPACE-1'
        namespace_name:
          description: The namespace name of this snapshot.
          type: string
          example: 'test-engine-1'
        is_replica:
          description: Is this a replicated object.
          type: boolean
          example: true
        consistency:
          description: Indicates what type of recovery strategies must be invoked when provisioning from this snapshot.
          type: string
          enum: [ CONSISTENT, INCONSISTENT, CRASH_CONSISTENT, PLUGGABLE ]
          example: CONSISTENT
        missing_non_logged_data:
          description: Indicates if a virtual database provisioned from this snapshot will be missing nologging changes.
          type: boolean
          example: false
        dataset_id:
          type: string
          description: The ID of the Snapshot's dSource or VDB.
          example: dataset-123
        creation_time:
          description: The time when the snapshot was created.
          type: string
          format: date-time
          example: "2023-02-02T19:30:00.589Z"
        start_timestamp:
          description: |
            The timestamp within the parent TimeFlow at which this snapshot was initiated. \
            No recovery earlier than this point needs to be applied in order to provision a database from \
            this snapshot. If start_timestamp equals timestamp, then no recovery needs to be \
            applied in order to provision a database.
          type: string
          format: date-time
          example: "2021-05-01T08:51:34.148000+00:00"
        start_location:
          description: |
            The database specific indentifier within the parent TimeFlow at which this snapshot was initiated. \
            No recovery earlier than this point needs to be applied in order to provision a database from \
            this snapshot. If start_location equals location, then no recovery needs to be \
            applied in order to provision a database.
          type: string
          example: "1178883"
        timestamp:
          description: The logical time of the data contained in this Snapshot.
          type: string
          format: date-time
          example: "2021-05-01T08:51:34.148000+00:00"
        location:
          description: Database specific identifier for the data contained in this Snapshot,
            such as the Log Sequence Number (LSN) for MSsql databases, System
            Change Number (SCN) for Oracle databases.
          type: string
          example: "1178883"
        retention:
          description: Retention policy, in days. A value of -1 indicates the snapshot should be kept forever.
              Deprecated in favor of expiration and retain_forever.
          deprecated: true
          type: integer
          format: int64
          example: -1
        expiration:
          description: The expiration date of this snapshot. If this is unset and retain_forever is false,
             and the snapshot is not included in a Bookmark, the snapshot is subject to the retention policy
             of its dataset.
          type: string
          format: date
          example: "2021-07-04"
        retain_forever:
          description: Indicates that the snapshot is protected from retention, i.e it will be kept forever.
             If false, see expiration.
          type: boolean
          example: false
        effective_expiration:
          description: The effective expiration is that max of the snapshot expiration and the expiration of any
            Bookmark which includes this snapshot.
          type: string
          format: date
          example: "2021-07-04"
        effective_retain_forever:
          description: True if retain_forever is set or a Bookmark retains this snapshot forever.
          type: boolean
          example: false
        timeflow_id:
          description: The TimeFlow this snapshot was taken on.
          type: string
          example: 1-ORACLE_TIMEFLOW-1
        timezone:
          description: Time zone of the source database at the time the snapshot was taken.
          type: string
          example: "America/New_York,EST-0500"
        version:
          description: Version of database source repository at the time the snapshot was taken.
          type: string
          example: "11.2.0.4.0"
          nullable: true
        temporary:
          description: Indicates that this snapshot is in a transient state and should not be user visible.
          type: boolean
          example: false
        appdata_toolkit:
          description: The toolkit associated with this snapshot.
          type: string
          example: APPDATA_TOOLKIT-1
        appdata_metadata:
          description: The JSON payload conforming to the DraftV4 schema based on the type of application data being manipulated.
          type: string
          example: {}
        ase_db_encryption_key:
          description: Database encryption key present for this snapshot.
          type: string
          example: keyname
        mssql_internal_version:
          description: Internal version of the source database at the time the snapshot was taken.
          type: integer
          format: int32
          example: 706
        mssql_backup_set_uuid:
          description: UUID of the source database backup that was restored for this snapshot.
          type: string
          example: "54290b71-58cd-463d-bd62-7219d4c4d2d5"
        mssql_backup_software_type:
          description: Backup software used to restore the source database backup for this snapshot
          type: string
          enum: [ AZURE_NATIVE, NATIVE, LITESPEED, REDGATE, NETBACKUP, COMMVAULT ]
          example: NATIVE
        mssql_backup_location_type:
          description: Backup software used to restore the source database backup for this snapshot
          type: string
          enum: [ DISK, AZURE, BACKUP_SERVER ]
          example: BACKUP_SERVER
        mssql_empty_snapshot:
          description: True if the staging push dSource snapshot is empty.
          type: boolean
          example: true
        oracle_from_physical_standby_vdb:
          description: True if this snapshot was taken of a standby database.
          type: boolean
          example: false
        oracle_redo_log_size_in_bytes:
          description: Online redo log size in bytes when this snapshot was taken.
          type: integer
          format: int64
          example: 314572800
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    Timeflow:
      description: Virtualization Engine Timeflow of a dSource or VDB.
      type: object
      properties:
        id:
          description: The Timeflow ID.
          type: string
          example: timeflow-123
        engine_id:
          description: The ID of the engine the timeflow belongs to.
          type: string
          example: 1
        namespace:
          description: Alternate namespace for this object, for replicated and restored timeflows.
          type: string
          nullable: true
          example: NAMESPACE-1
        namespace_id:
          description: The namespace id of this timeflows.
          type: string
          nullable: true
          example: '1-NAMESPACE-1'
        namespace_name:
          description: The namespace name of this timeflows.
          type: string
          nullable: true
          example: 'test-engine-1'
        is_replica:
          description: Is this a replicated object.
          type: boolean
          example: true
        name:
          description: The timeflow's name.
          type: string
          example: "DB_PROVISION@2023-01-25T09:00:30"
        dataset_id:
          type: string
          description: The ID of the timeflow's dSource or VDB.
          example: dataset-123
        creation_type:
          description: The source action that created the timeflow.
          type: string
          enum: [ INITIAL, INDETERMINATE, REFRESH, ROLLBACK, TEMPORARY, TRANSFORMATION, V2P, PDB_PLUG, ORACLE_LIVE_SOURCE_RESYNC, SOURCE_CONTINUITY ]
          example: "REFRESH"
        parent_snapshot_id:
          type: string
          description: The ID of the timeflow's parent snapshot.
          example: snapshot-123
        parent_point_location:
          type: string
          description: The location on the parent timeflow from which this timeflow was provisioned. This will not be present for timeflows derived from linked sources.
          example: "1178883"
        parent_point_timestamp:
          type: string
          description: The timestamp on the parent timeflow from which this timeflow was provisioned. This will not be present for timeflows derived from linked sources.
          format: date-time
          example: "2021-05-01T08:51:34.148000+00:00"
        parent_point_timeflow_id:
          type: string
          description: A reference to the parent timeflow from which this timeflow was provisioned. This will not be present for timeflows derived from linked sources.
          example: "timeflow-123"
        source_data_timestamp:
          type: string
          description: The timestamp on the root ancestor timeflow from which this timeflow originated. This logical time acts as reference to the origin source data.
          format: date-time
          example: "2021-05-01T08:51:34.148000+00:00"
        oracle_incarnation_id:
          type: string
          description: Oracle-specific incarnation identifier for this timeflow.
          example: "123"
        oracle_cdb_timeflow_id:
          type: string
          description: A reference to the mirror CDB timeflow if this is a timeflow for a PDB.
          example: "cdb-123"
        oracle_tde_uuid:
          type: string
          description: The unique identifier for timeflow-specific TDE objects that reside outside of Delphix storage.
          example: "tde-indentifier"
        mssql_database_guid:
          type: string
          description: MSSQL-specific recovery branch identifier for this timeflow.
          example: "DATABASE-1"
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    TimeflowRange:
      description: Represents a time range within a timeflow.
      type: object
      properties:
        start_point_location:
          type: string
          description: The starting location of this range.
          example: "1178883"
        start_point_timestamp:
          type: string
          description: The starting timestamp of this range.
          format: date-time
          example: "2023-04-01T08:51:34.148000+00:00"
        end_point_location:
          type: string
          description: The ending location of this range.
          example: "1178884"
        end_point_timestamp:
          type: string
          description: The ending timestamp of this range.
          format: date-time
          example: "2023-04-01T09:51:34.148000+00:00"
        timeflow_id:
          type: string
          description: A reference to the timeflow of this range.
          example: "timeflow-123"
        provisionable:
          type: boolean
          description: Whether or not this range is provisionable.
          example: true
    HashicorpVault:
      title: HashicorpVault
      type: object
      description: Configuration required to connect and authenticate with an Hashicorp Vault which stores engines username and passwords.
      properties:
        id:
          type: integer
          format: int64
          nullable: false
          readOnly: true
        env_variables:
          x-dct-toolkit-credential-field: true
          description: |
            Environment variables to set when invoking the Vault CLI tool. The environment variables will be used both
            to login to the vault (if this step is required) and to retrieve engine username and passwords.
          example:
            VAULT_ADDR: "https://vault.company.co:8200"
            VAULT_TOKEN: "token-to-retrieve-secrets"
          type: object
          additionalProperties:
            type: string
            minLength: 1
            maxLength: 4096
        login_command_args:
          x-dct-toolkit-credential-field: true
          description: |
            Arguments to the "vault" CLI tool to be used to fetch a client token (or "login").
            If supporting files, such as TLS certificates, must be used to authenticate, they can be
            mounted to the /etc/config directory.
            This property must not be set when using the TOKEN authentication method as login is not required.
          example:
            - login
            - "-method=cert"
            - "-client-cert=/etc/config/cert.pem"
            - "-client-key=/etc/config/key.pem"
            - write
            - auth/approle/login
            - role_id=123
            - secret_id=456
          type: array
          minItems: 1
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 4096
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    RegisteredEngine:
      title: RegisteredEngine
      type: object
      description: A registered engine's connection and authentication settings.
      properties:
        id:
          description: The Engine object entity ID.
          type: string
          readOnly: true
        uuid:
          description: The unique identifier generated by this engine.
          type: string
          nullable: true
        type:
          description: The type of this engine.
          type: string
          enum: [ VIRTUALIZATION, MASKING, BOTH, UNSET ]
          nullable: true
        version:
          description: The engine version.
          type: string
          nullable: true
        name:
          description: The name of this engine.
          type: string
        ssh_public_key:
          description: The ssh public key of this engine.
          type: string
        hostname:
          description: The hostname of this engine.
          type: string
        cpu_core_count:
          description: The total number of CPU cores on this engine.
          type: integer
          format: int32
          nullable: true
        memory_size:
          description: The total amount of memory on this engine, in bytes.
          type: integer
          format: int64
          nullable: true
        data_storage_capacity:
          description: The total amount of storage allocated for engine objects and system metadata, in bytes.
          type: integer
          format: int64
          nullable: true
        data_storage_used:
          description: The amount of storage used by engine objects and system metadata, in bytes.
          type: integer
          format: int64
          nullable: true
        insecure_ssl:
          description: |
            Allow connections to the engine over HTTPs without validating the TLS certificate. Even though
            the connection to the engine might be performed over HTTPs, setting this property eliminates
            the protection against a man-in-the-middle attach for connections to this engine. Instead,
            consider creating a truststore with a Certificate Authority to validate the engine's certificate,
            and set the truststore_filename property.
          type: boolean
        unsafe_ssl_hostname_check:
          description: |
            Ignore validation of the name associated to the TLS certificate when connecting to the engine over HTTPs.
            Setting this value must only be done if the TLS certificate of the engine does not match the hostname,
            and the TLS configuration of the engine cannot be fixed. Setting this property reduces the protection
            against a man-in-the-middle attack for connections to this engine.
            This is ignored if insecure_ssl is set.
          type: boolean
        truststore_filename:
          description: |
            File name of a truststore which can be used to validate the TLS certificate of the engine. The truststore
            must be available at /etc/config/certs/<truststore_filename>
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
          pattern: '^[a-zA-Z0-9_\.]+$'
        truststore_password:
          x-dct-toolkit-credential-field: true
          description: |
            Password to read the truststore.
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
        status:
          description: |
            the status of the engine
          type: string
          enum: [ CREATED, DELETING ]
          nullable: true
          readOnly: true
        connection_status:
          description: The status of the connection to the engine. Deprecated; use "engine_connection_status" instead.
          deprecated: true
          type: string
          enum: [ ONLINE, OFFLINE ]
          nullable: true
          readOnly: true
        engine_connection_status:
          description: The state of the connection to the engine.
          type: string
          enum: [ ONLINE, CONNECTION_ERROR, MISSING_CREDENTIALS, BAD_CREDENTIALS]
          readOnly: true
        connection_status_details:
          deprecated: true
          description: If set, details about the status of the connection to the engine. Deprecated; use "engine_connection_status_details" instead.
          type: string
          nullable: true
          readOnly: true
        engine_connection_status_details:
          description: If set, details about the state of the connection to the engine.
          type: string
          readOnly: true
        username:
          description: The virtualization domain admin username.
          type: string
          nullable: true
          minLength: 1
          maxLength: 256
        password:
          x-dct-toolkit-credential-field: true
          description: The virtualization domain admin password.
          type: string
          nullable: true
          minLength: 1
          maxLength: 4096
        masking_username:
          description: The masking admin username.
          type: string
          nullable: true
          minLength: 1
          maxLength: 256
        masking_password:
          x-dct-toolkit-credential-field: true
          description: The masking admin password.
          type: string
          nullable: true
          minLength: 1
          maxLength: 4096
        hashicorp_vault_username_command_args:
          description: "Arguments to pass to the Vault CLI tool to retrieve the virtualization username for the engine."
          example:
            - [ "kv", "get", "-field=username",  "kv-v2/delphix-secrets/delphixUser" ]
          type: array
          nullable: true
          minItems: 1
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 4096
        hashicorp_vault_masking_username_command_args:
          description: "Arguments to pass to the Vault CLI tool to retrieve the masking username for the engine."
          example:
            - [ "kv", "get", "-field=username",  "kv-v2/delphix-secrets/delphixUser" ]
          type: array
          nullable: true
          minItems: 1
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 4096
        hashicorp_vault_password_command_args:
          description: "Arguments to pass to the Vault CLI tool to retrieve the virtualization password for the engine."
          example:
            - [ "kv", "get", "-field=password",  "kv-v2/delphix-secrets/delphixUser" ]
          type: array
          nullable: true
          minItems: 1
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 4096
        hashicorp_vault_masking_password_command_args:
          description: "Arguments to pass to the Vault CLI tool to retrieve the masking password for the engine."
          example:
            - [ "kv", "get", "-field=password",  "kv-v2/delphix-secrets/delphixUser" ]
          type: array
          nullable: true
          minItems: 1
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 4096
        masking_hashicorp_vault_id:
          description: Reference to the Hashicorp vault to use to retrieve masking engine credentials.
          type: integer
          format: int64
          nullable: true
        hashicorp_vault_id:
          description: Reference to the Hashicorp vault to use to retrieve virtualization engine credentials.
          type: integer
          format: int64
          nullable: true
        tags:
          description: The tags to be created for this engine.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        masking_memory_used:
          description: The current amount of memory used by running masking jobs in bytes.
          type: integer
          format: int64
          nullable: true
        masking_allocated_memory:
          description: The maximum amount of memory available for running masking jobs in bytes.
          type: integer
          format: int64
          nullable: true
        masking_jobs_running:
          description: The number of masking jobs currently running.
          type: integer
          nullable: true
        masking_max_concurrent_jobs:
          description: The maximum number of masking jobs that can be running at the same time.
          type: integer
          nullable: true
        masking_available_cores:
          description: The number of CPU cores available to the masking engine.
          type: integer
          nullable: true
        hyperscale_instance_ids:
          description: List of Hyperscale Instances that this engine is connected to.
          nullable: true
          type: array
          items:
            type: string
        hyperscale_truststore_filename:
          description: |
            File name of a truststore which can be used to validate the TLS certificate of the engine as expected by associated hyperscale instances.
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
          pattern: '^[a-zA-Z0-9_\.]+$'
        hyperscale_truststore_password:
          x-dct-toolkit-credential-field: true
          description: |
            Password to read the truststore as expected by associated hyperscale instances.
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
      example:
        id: "engine-123"
        uuid: "54290b71-58cd-463d-bd62-7219d4c4d2d5"
        type: "VIRTUALIZATION"
        version: "6.0.7.0"
        name: "My Favorite Engine"
        hostname: "eng09.dev.delphix.com"
        cpu_core_count: 4
        memory_size: 16000000000
        data_storage_capacity: 100000000000
        data_storage_used: 85000000000
        tags: [ { "key": "key1", "value": "value1" }, { "key": "key2", "value": "value2" } ]
        connection_status: "OFFLINE"
        connection_status_details: "Unable to authenticate with engine"
        hyperscale_instance_ids: [ "hyperscale-1" ]
        hyperscale_truststore_filename: "trustfile1"
        hyperscale_truststore_password: "*****"
    HyperscaleMountPoint:
      title: HyperscaleMountPoint
      type: object
      description: A Mount Point for the Hyperscale instance to write to a staging area and engines to read from.
      required:
        - hyperscale_instance_id
        - name
        - hostname
        - mount_path
        - mount_type
      properties:
        id:
          description: The ID of the Hyperscale Mount Point.
          type: string
          readOnly: true
        hyperscale_instance_id:
          description: The ID of the Hyperscale instance of this Mount Point.
          type: string
        name:
          description: Name of the mount, unique for a hyperscale instance. This name will be used as a directory
            name by the Hyperscale instance.
          type: string
        hostname:
          description: The host name of the server.
          type: string
          nullable: false
        mount_path:
          description: The path to the directory on the filesystem to mount.
          type: string
          nullable: false
        mount_type:
          description: The type of filesystem. Enum having values- CIFS, NFS3, NFS4.
          type: string
          enum: [ CIFS, NFS3, NFS4 ]
        options:
          type: string
          description: The options for mount. The endpoint will return all default options and user specified options.
    HyperscaleMountPointUpdateParameters:
      title: HyperscaleMountPointUpdateParameters
      type: object
      description: The updatable properties of a Hyperscale Mount Point.
      properties:
        name:
          description: Name of the mount, unique for a hyperscale instance.
          type: string
        hostname:
          description: The host name of the server.
          type: string
        mount_path:
          description: The path to the directory on the filesystem to mount.
          type: string
        mount_type:
          description: The type of filesystem.
          type: string
          enum: [ CIFS, NFS3, NFS4 ]
        options:
          type: string
          description: The mount options.
    HyperscaleConnector:
      title: HyperscaleConnector
      type: object
      description: A Hyperscale connector to read/write data from/to a datasource.
      properties:
        database_type:
          type: string
        id:
          description: The ID of the Hyperscale Connector.
          type: string
          readOnly: true
        hyperscale_instance_id:
          description: The ID of the Hyperscale instance of this Dataset.
          type: string
        data_type:
          $ref: '#/components/schemas/HyperscaleDataTypeEnum'
        name:
          type: string
        source_username:
          description: The username this Connector will use to connect to the source database.
          type: string
        source_password:
          x-dct-toolkit-credential-field: true
          description: The password this Connector will use to connect to the source database.
          type: string
        source_jdbc_url:
          description: The JDBC URL used to connect to the source database.
          type: string
        source_mongo_url:
          description: The MongoDB URL used to connect to the source database.
          type: string
          example: "mongodb://host:27017"
        source_filesystem_path:
          description: The path on the filesystem where source files must be read (Delimited files Only).
          type: string
        source_connection_properties:
          additionalProperties:
            type: string
        target_username:
          description: The username this Connector will use to connect to the target database.
          type: string
        target_password:
          x-dct-toolkit-credential-field: true
          description: The username this Connector will use to connect to the target database.
          type: string
        target_jdbc_url:
          description: The JDBC URL used to connect to the target database.
          type: string
        target_mongo_url:
          description: The MongoDB URL used to connect to the target database.
          type: string
          example: "mongodb://host:27017"
        target_filesystem_path:
          description: The path on the filesystem where target files must be written (Delimited files Only).
          type: string
        target_connection_properties:
          additionalProperties:
            type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    HyperscaleConnectorUpdateParameters:
      title: HyperscaleConnectorUpdateParameters
      type: object
      description: The updatable properties of a Hyperscale Connector.
      properties:
        name:
          type: string
        source_username:
          description: The username this Connector will use to connect to the source database.
          type: string
        source_password:
          x-dct-toolkit-credential-field: true
          description: The password this Connector will use to connect to the source database.
          type: string
        source_jdbc_url:
          description: The JDBC URL used to connect to the source database.
          type: string
        source_mongo_url:
          description: The MongoDB URL used to connect to the source database.
          type: string
          example: "mongodb://host:27017"
        source_filesystem_path:
          description: The path on the filesystem where source files must be read (Delimited files Only).
          type: string
        source_connection_properties:
          additionalProperties:
            type: string
        target_username:
          description: The username this Connector will use to connect to the target database.
          type: string
        target_password:
          x-dct-toolkit-credential-field: true
          description: The username this Connector will use to connect to the target database.
          type: string
        target_jdbc_url:
          description: The JDBC URL used to connect to the target database.
          type: string
        target_mongo_url:
          description: The MongoDB URL used to connect to the target database.
          type: string
          example: "mongodb://host:27017"
        target_filesystem_path:
          description: The path on the filesystem where target files must be written (Delimited files Only).
          type: string
        target_connection_properties:
          additionalProperties:
            type: string
    CreateMaskingJobRequest:
      title: CreateMaskingJobRequest
      type: object
      description: Parameters to create a MaskingJob.
      properties:
        name:
          description: The name to give the Masking Job.
          type: string
          example: My favorite MaskingJob
        description:
          description: The description of the Job (Hyperscale Job only).
          type: string
          example: Job for app finance DB
        job_type:
          type: string
          description: The type of Job.
          enum: [HYPERSCALE]
          example: HYPERSCALE
        hyperscale_instance_id:
          description: The ID of the HyperscaleInstance to create this Job on (Hyperscale Job only).
          type: string
          example: hyperscale-123
        source_masking_job_id:
          description: The ID of the Masking Job to use as the source (Hyperscale Job only).
          type: string
          example: masking-job-123
        hyperscale_source_connector_username:
          description: The username to set for the Source Connector that will be imported (Hyperscale Job only).
          type: string
          example: db-user-123
        hyperscale_source_connector_password:
          x-dct-toolkit-credential-field: true
          description: The password to set for the Source Connector that will be imported (Hyperscale Job only).
          type: string
          example: dp-pass-123
        hyperscale_target_connector_username:
          description: The username to set for the Target Connector that will be imported (Hyperscale Job only).
          type: string
          example: db-user-123
        hyperscale_target_connector_password:
          x-dct-toolkit-credential-field: true
          description: The password to set for the Target Connector that will be imported (Hyperscale Job only).
          type: string
          example: dp-pass-123
        mount_point_id:
          description: The ID of the MountPoint to use for the resulting dataset (Hyperscale Job only).
          type: string
          example: mount-point-123
        unload_split:
          description: The number of unloaded files to be generated from the source database (Hyperscale Job only).
          type: integer
          format: int64
          example: 4
        stream_size:
          description: The stream size to be used by the sqlldr oracle utility which specifies the size (in bytes) of the data stream sent from the client to the server (Hyperscale Job only).
          type: integer
          format: int64
          example: 65536
        retain_execution_data:
          description: Defines whether execution data will be stored after execution is complete (Hyperscale Job only).
          type: string
          enum: [ "NO", "ON_ERROR", "ALWAYS" ]
          example: NO
        max_memory:
          description: Maximum memory, in MB, to be allocated for each Masking job (Hyperscale Job only).
          type: integer
          format: int32
          example: 1024
        min_memory:
          description: Minimum memory, in MB, to be allocated for each Masking job (Hyperscale Job only).
          type: integer
          format: int32
          example: 1024
        feedback_size:
          description: The granularity with which the masking engine provides updates on the progress of the masking job. For instance, a feedbackSize of 50000 results in log updates whenever 50000 rows are processed during the masking phase (Hyperscale Job only).
          type: integer
          format: int32
          example: 10000
        stream_row_limit:
          description: The stream row limit constrains the total number of rows that may enter the job for each masking stream. Setting this value to 0 allows unlimited rows into each stream, while leaving it blank will select a default limit based on job type (Hyperscale Job only).
          type: integer
          format: int32
          example: 0
        num_input_streams:
          description: Number of input streams to be configured for Masking Job (Hyperscale Job only).
          type: integer
          format: int32
          example: 4
        max_concurrent_source_connections:
          description: Maximum number of parallel connection that the Hyperscale instance can have with the source datasource (Hyperscale Job only).
          type: integer
          format: int32
          example: 32
        max_concurrent_target_connections:
          description: Maximum number of parallel connection that the Hyperscale instance can have with the target datasource (Hyperscale Job only).
          type: integer
          format: int32
          example: 32
        parallelism_degree:
          description: The degree of parallelism (DOP) per Oracle job to recreate the index in the post-load process (Hyperscale Job only).
          type: integer
          format: int32
          example: 4
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    HyperscaleDataset:
      title: HyperscaleDataset
      type: object
      description: A Hyperscale Dataset.
      properties:
        id:
          description: The ID of the Hyperscale Dataset.
          type: string
        hyperscale_instance_id:
          description: The ID of the Hyperscale instance of this Dataset.
          type: string
        data_type:
          $ref: '#/components/schemas/HyperscaleDataTypeEnum'
        mount_point_id:
          description: The Id of the Hyperscale Mount Point used for this Dataset.
          type: string
        connector_id:
          description: Id the Hyperscale Connector used to read sensitive data and write masked data.
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    HyperscaleDatasetUpdateParameters:
      title: HyperscaleDatasetUpdateParameters
      type: object
      description: The updatable properties of a Hyperscale Dataset.
      properties:
        mount_point_id:
          description: The Id of the Hyperscale Mount Point used for this Dataset.
          type: string
        connector_id:
          description: Id the Hyperscale Connector used to read sensitive data and write masked data.
          type: string
    HyperscaleDatasetTableOrFile:
      title: HyperscaleDatasetTableOrFile
      type: object
      description: A table or file which is part of a hyperscale dataset.
      properties:
        id:
          description: The ID of the Hyperscale Dataset table or file.
          type: string
        schema_name:
          type: string
          description: Name of the table schema (Oracle/MSSql only).
        table_name:
          type: string
          description: Name of the table (Oracle/MSSql only).
        collection_name:
          type: string
          description: Name of the collection (MongoDB only).
        database_name:
          type: string
          description: Name of the database (MongoDB only).
        filter_key:
          description: The unique database column field to filter the source data.
          type: string
        column_array_rows:
          description: The number of column array rows to be used by the sqlldr oracle utility which determines the number of rows loaded before the stream buffer is built.
          type: integer
          format: int64
        unload_split:
          description: The number of unloaded files to be generated from the source database.
          type: integer
          format: int64
        stream_size:
          description: Long The stream size to be used by the sqlldr oracle utility which specifies the size (in bytes) of the data stream sent from the client to the server.
          type: integer
          format: int64
        end_of_record:
          description: The end of line character. Support values are \n, \r  and \r\n (Delimited files only).
          type: string
        delimiter:
          description: The single character length delimiter used in source files (Delimited files only).
          type: string
        enclosure:
          description: The single character length quote character used in the source files (Delimited files only).
          type: string
        enclosure_escape_character:
          description: The escape character used to escape quote characters (Delimited files only).
          type: string
        escape_enclosure_escape_character:
          description: Whether to escape the enclosure escape character (Delimited files only).
          type: boolean
        has_headers:
          description: Whether source files have header column names or not (Delimited files only).
                       If set to true, format files with the same column names are created and the same can be used for the masking inventory.
                       If set to false, the column names of pattern f0, f1, f2, and so on are used to create the format files for delimited file masking.
          type: boolean
        unique_source_files_identifier:
          description: This is the source key that maps the load-service and masking-service data sets with the unload-service data set (Delimited files only).
                       Please ensure that this value is different for each HyperscaleDatasetTableOrFile.
          type: string
        source_files:
          description: List of all source files that need to be masked (Delimited files only).
                       All files should have the same delimiter character and other helper characters.
                       All files should have the same number of columns and same column names if it has a header line.
          type: array
          items:
            type: string
        perform_join:
          description: Whether the split files must be joined (Delimited files only).
          type: boolean
        masking_inventory:
          type: array
          description: DataSet information for masking inventory.
          items:
            type: object
            title: HyperscaleColumnOrField
            properties:
              field_name:
                description: Name of the field.
                type: string
              domain_name:
                description: The name of the domain assigned to this field.
                type: string
              algorithm_name:
                description: The name of the algorithm assigned to this field.
                type: string
              date_format:
                description: The format of the date assigned to this field.
                type: string
              algorithm_field_name:
                description: The name of the algorithm field that is associated with this algorithm.
                type: string
              algorithm_group_no:
                description: The group number of the algorithm to identify a set of columns associated with one instance of algorithm.
                type: integer
                format: int64
    HyperscaleDatasetTableOrFileUpdateParameters:
      title: HyperscaleDatasetTableOrFile
      type: object
      description: The updatable properties of a table or file which is part of a hyperscale dataset.
      properties:
        filter_key:
          description: The unique database column field to filter the source data.
                       Set this property to an empty string to clear the value.
          type: string
        column_array_rows:
          description: The number of column array rows to be used by the sqlldr oracle utility which determines the number of rows loaded before the stream buffer is built.
          type: integer
          format: int64
        unload_split:
          description: The number of unloaded files to be generated from the source database.
          type: integer
          format: int64
        stream_size:
          description: Long The stream size to be used by the sqlldr oracle utility which specifies the size (in bytes) of the data stream sent from the client to the server.
          type: integer
          format: int64
        end_of_record:
          description: The end of line character. Support values are \n, \r  and \r\n (Delimited files only).
          type: string
        delimiter:
          description: The single character length delimiter used in source files (Delimited files only).
          type: string
        enclosure:
          description: The single character length quote character used in the source files (Delimited files only).
          type: string
        enclosure_escape_character:
          description: The escape character used to escape quote characters (Delimited files only).
          type: string
        escape_enclosure_escape_character:
          description: Whether to escape the enclosure escape character (Delimited files only).
          type: boolean
        has_headers:
          description: Whether source files have header column names or not (Delimited files only).
            If set to true, format files with the same column names are created and the same can be used for the masking inventory.
            If set to false, the column names of pattern f0, f1, f2, and so on are used to create the format files for delimited file masking.
          type: boolean
        unique_source_files_identifier:
          description: This is the source key that maps the load-service and masking-service data sets with the unload-service data set (Delimited files only).
            Please ensure that this value is different for each HyperscaleDatasetTableOrFile.
          type: string
        source_files:
          description: List of all source files that need to be masked (Delimited files only).
            All files should have the same delimiter character and other helper characters.
            All files should have the same number of columns and same column names if it has a header line.
          type: array
          items:
            type: string
        perform_join:
          description: Whether the split files must be joined (Delimited files only).
          type: boolean
    HyperscaleInstance:
      title: HyperscaleInstance
      type: object
      description: A registered Hyperscale instance's connection and authentication settings.
      required:
        - name
        - hostname
        - api_key
      properties:
        id:
          description: The Hyperscale instance entity ID.
          type: string
          readOnly: true
        name:
          description: The name of this hyperscale instance.
          type: string
        hostname:
          description: The hostname of this hyperscale instance.
          type: string
        data_type:
          $ref: '#/components/schemas/HyperscaleDataTypeEnum'
        creation_date:
          description: The date this hyperscale instance was registered.
          type: string
          format: date-time
        tags:
          description: The tags to be created for this hyperscale instance.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        api_key:
          description: API key to connect to the hyperscale instance.
          type: string
        insecure_ssl:
          description: |
            Allow connections to the hyperscale instance over HTTPs without validating the TLS certificate. Even though
            the connection to the hyperscale instance might be performed over HTTPs, setting this property eliminates
            the protection against a man-in-the-middle attach for connections to this engine. Instead,
            consider creating a truststore with a Certificate Authority to validate the hyperscale instance's certificate,
            and set the truststore_filename property.
          type: boolean
          default: false
        unsafe_ssl_hostname_check:
          description: |
            Ignore validation of the name associated to the TLS certificate when connecting to the hyperscale instance over HTTPs.
            Setting this value must only be done if the TLS certificate of the hyperscale instance does not match the hostname,
            and the TLS configuration of the hyperscale instance cannot be fixed. Setting this property reduces the protection
            against a man-in-the-middle attack for connections to this hyperscale instance.
            This is ignored if insecure_ssl is set.
          type: boolean
          default: false
        truststore_filename:
          description: |
            File name of a truststore which can be used to validate the TLS certificate of the hyperscale instance. The truststore
            must be available at /etc/config/certs/<truststore_filename>
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
          pattern: '^[a-zA-Z0-9_\.]+$'
        truststore_password:
          x-dct-toolkit-credential-field: true
          description: |
            Password to read the truststore.
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
        status:
          description: The status of this hyperscale instance.
          type: string
          enum: [ CREATED, DELETING ]
          nullable: true
          readOnly: true
    HyperscaleDataTypeEnum:
      type: string
      description: The data type designation for the hyperscale deployment.
      enum:
        - ORACLE
        - MSSQL
      example: ORACLE
    HyperscaleInstanceUpdateParams:
      title: HyperscaleInstanceUpdateParams
      type: object
      description: Parameters to update a Hyperscale instances.
      properties:
        name:
          type: string
          description: Name in DCT of the Hyperscale instance.
          minLength: 1
          maxLength: 256
        hostname:
          type: string
          description: Hostname of the Hyperscale instance.
          minLength: 1
          maxLength: 256
        api_key:
          x-dct-toolkit-credential-field: true
          description: API key to connect to the Hyperscale instance.
          type: string
          nullable: true
          minLength: 1
          maxLength: 4096
        data_type:
          $ref: '#/components/schemas/HyperscaleDataTypeEnum'
        insecure_ssl:
          description: |
            Allow connections to the hyperscale instance over HTTPs without validating the TLS certificate. Even though
            the connection to the hyperscale instance might be performed over HTTPs, setting this property eliminates
            the protection against a man-in-the-middle attach for connections to this engine. Instead,
            consider creating a truststore with a Certificate Authority to validate the hyperscale instance's certificate,
            and set the truststore_filename property.
          type: boolean
        unsafe_ssl_hostname_check:
          description: |
            Ignore validation of the name associated to the TLS certificate when connecting to the hyperscale instance over HTTPs.
            Setting this value must only be done if the TLS certificate of the hyperscale instance does not match the hostname,
            and the TLS configuration of the hyperscale instance cannot be fixed. Setting this property reduces the protection
            against a man-in-the-middle attack for connections to this engine.
            This is ignored if insecure_ssl is set.
          type: boolean
        truststore_filename:
          description: |
            File name of a truststore which can be used to validate the TLS certificate of the hyperscale instance. The truststore
            must be available at /etc/config/certs/<truststore_filename>.
            Set this property to an empty string to clear the value.
          type: string
          nullable: true
          maxLength: 1024
          pattern: '^[a-zA-Z0-9_\.]*$'
        truststore_password:
          x-dct-toolkit-credential-field: true
          description: |
            Password to read the truststore. Set this property to an empty string to clear the value.
          type: string
          nullable: true
          maxLength: 1024
    HyperscaleInstanceRegistrationParameter:
      title: HyperscaleInstanceRegistrationParameter
      type: object
      description: Parameters to register and authenticate a Hyperscale instance
      required:
        - name
        - hostname
        - api_key
        - data_type
      properties:
        name:
          type: string
          description: Name in DCT of the Hyperscale instance.
          minLength: 1
          maxLength: 256
        hostname:
          type: string
          description: Hostname of the Hyperscale instance.
          minLength: 1
          maxLength: 256
        api_key:
          x-dct-toolkit-credential-field: true
          description: API key to connect to the Hyperscale instance.
          type: string
          nullable: true
          minLength: 1
          maxLength: 4096
        data_type:
          $ref: '#/components/schemas/HyperscaleDataTypeEnum'
        insecure_ssl:
          description: |
            Allow connections to the hyperscale instance over HTTPs without validating the TLS certificate. Even though
            the connection to the hyperscale instance might be performed over HTTPs, setting this property eliminates
            the protection against a man-in-the-middle attach for connections to this engine. Instead,
            consider creating a truststore with a Certificate Authority to validate the hyperscale instance's certificate,
            and set the truststore_filename property.
          type: boolean
          default: false
        unsafe_ssl_hostname_check:
          description: |
            Ignore validation of the name associated to the TLS certificate when connecting to the hyperscale instance over HTTPs.
            Setting this value must only be done if the TLS certificate of the hyperscale instance does not match the hostname,
            and the TLS configuration of the hyperscale instance cannot be fixed. Setting this property reduces the protection
            against a man-in-the-middle attack for connections to this engine.
            This is ignored if insecure_ssl is set.
          type: boolean
          default: false
        truststore_filename:
          description: |
            File name of a truststore which can be used to validate the TLS certificate of the hyperscale instance. The truststore
            must be available at /etc/config/certs/<truststore_filename>
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
          pattern: '^[a-zA-Z0-9_\.]+$'
        truststore_password:
          x-dct-toolkit-credential-field: true
          description: |
            Password to read the truststore.
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
        tags:
          description: The tags to be created for this engine.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    SMTPConfigParams:
      title: SMTPConfigParameters
      type: object
      description: Parameters to read or update SMTP Config
      properties:
        enabled:
          description: True if outbound email is enabled.
          type: boolean
          default: false
          example: false
        server:
          description: IP address or hostname of SMTP relay server.
          type: string
          nullable: true
          minLength: 1
          maxLength: 1000
          example: smtp.host.com
        port:
          description: Port number to use. A value of -1 indicates the default (25 or 587 for TLS).
          type: integer
          minimum: 1
          maximum: 65535
          nullable: true
          example: 25
        authentication_enabled:
          description: True if username/password authentication should be used.
          type: boolean
          default: false
          example: false
        tls_enabled:
          description: True if TLS (transport layer security) should be used.
          type: boolean
          default: false
          example: false
        username:
          description: If authentication is enabled, username to use when authenticating to the server.
          type: string
          nullable: true
          minLength: 1
          maxLength: 256
          example: username
        password:
          x-dct-toolkit-credential-field: true
          description: If authentication is enabled, password to use when authenticating to the server.
          type: string
          nullable: true
          minLength: 1
          maxLength: 4096
          example: password
        from_address:
          description: From address to use when sending mail. If unspecified, 'noreply@delphix.com' is used.
          type: string
          nullable: true
          format: email
          minLength: 1
          maxLength: 256
          example: sender@example.com
        send_timeout:
          description: Maximum timeout to wait, in seconds, when sending mail.
          type: integer
          minimum: 0
          maximum: 300
          nullable: true
    SMTPConfigValidate:
      title: SMTPValidationParams
      type: object
      description: Parameters to validate SMTP Config
      required:
        - to_address
      properties:
        to_address:
          type: string
          minLength: 1
          maxLength: 256
    SAMLConfigParams:
      title: SAMLConfigParams
      type: object
      description: Parameters to read or update SAML Config
      properties:
        enabled:
          description: When set, SAML settings are enabled. False by default.
          type: boolean
          default: false
          example: true
        auto_create_users:
          description: When set, the system will automatically create new Accounts for those who have logged in using SAML. This must be true if SAML user is not already registered in system. True by default.
          type: boolean
          default: true
          example: true
        metadata:
          description: IdP metadata for this service provider. This is a required property for successful SAML authentication.
          type: string
          minLength: 1
        entity_id:
          description: Unique identifier of this instance as a SAML/SSO service provider.
          type: string
          example: "https://dct.delphix.com"
          minLength: 1
          maxLength: 4096
        response_skew:
          description: Maximum time difference allowed between a SAML response and the DCT's current time, in seconds. If not set, it defaults to 120 seconds.
          type: integer
          example: 120
          default: 120
        group_attr:
          description: Group mapped attribute on SAML to create account tags in DCT.
          type: string
          example: "groups"
          default: "groups"
          minLength: 1
          maxLength: 4096
        first_name_attr:
          description: First name attribute mapped on SAML used for mapping on DCT account.
          type: string
          minLength: 1
          maxLength: 4096
          default: 'firstName'
          example: 'firstName'
        last_name_attr:
          description: Last name attribute mapped on SAML used for mapping on DCT account.
          type: string
          minLength: 1
          maxLength: 4096
          default: 'lastName'
          example: 'lastName'
    MetadataDbInfo:
      title: MetadataDbInfo
      type: object
      description: Information about the product's metadata database.
      properties:
        external:
          type: boolean
          description: True if an external database, i.e a database running outside of the application cluster,
                       is in use.
          example: false
        version:
          type: string
          description: The full database version in String format
          example: TODO
        database_product_name:
          type: string
          description: The database product name as reported by the database itself.
          example: TODO
        major_version:
          type: integer
          description: The database major version.
        minor_version:
          type: integer
          description: The database minor version
        min_supported_major_version:
          type: integer
          description: The minimum supported major version of PostgreSQL.
        min_supported_minor_version:
          type: integer
          description: The minimum supported minor version of PostgreSQL.
        max_supported_major_version:
          type: integer
          description: The maximum supported major version of PostgreSQL.
        max_supported_minor_version:
          type: integer
          description: The maximum supported minor version of PostgreSQL.
        compatible:
          type: boolean
          description: Whether the database is recognized as valid for this product. In order to be compatible,
                       the database product name must be a recognized PostgreSQL and the database version must be
                       greater than or equal to the minimum minor version and smaller than or equal to the maximum
                       support version.
    LDAPConfigParams:
      title: LDAPConfigParams
      type: object
      description: Parameters to read or update LDAP Config
      properties:
        enabled:
          description: When set, these settings are enabled. True by default.
          type: boolean
          default: true
          example: true
        auto_create_users:
          description: When set, the system will automatically create new Accounts for those who have logged in using LDAP. This must be true if LDAP user is not already registered in system. True by default.
          type: boolean
          default: true
          example: true
        hostname:
          description: The hostname of the LDAP server.
          type: string
          example: "ldap.server.com"
        port:
          description: The port of the LDAP server. Default port is 389 for non-SSL and 636 for SSL.
          type: integer
          minimum: 0
          maximum: 65535
          example: 389
        domains:
          description: DCT will try to authenticate using each Domain given in this list.
          type: array
          items:
            $ref: '#/components/schemas/Domain'
          minItems: 1
        enable_ssl:
          description: True if LDAP should be used over SSL.
          type: boolean
          example: false
          default: true
        truststore_filename:
          description: File name of a truststore which can be used to validate the TLS certificate of the LDAP server. The truststore
            must be available at /etc/config/certs/<truststore_filename>
          type: string
          minLength: 1
          maxLength: 1024
          pattern: '^[a-zA-Z0-9_\.\-]+$'
        truststore_password:
          x-dct-toolkit-credential-field: true
          description: Password for reading trustStore file provided in 'truststore_filename' property
          type: string
          minLength: 1
          maxLength: 1024
        insecure_ssl:
          description: |
            Allow connections to the LDAP server over LDAPS without validating the TLS certificate. Even though
            the connection to the server might be performed over LDAPS, setting this property eliminates
            the protection against a man-in-the-middle attach for connections to this server. Instead,
            consider creating a truststore with a Certificate Authority to validate the server's certificate,
            and set the truststore_filename property.
          type: boolean
          default: false
        unsafe_ssl_hostname_check:
          description: |
            Ignore validation of the name associated to the TLS certificate when connecting to the LDAP server over LDAPS.
            Setting this value must only be done if the TLS certificate of the server does not match the hostname,
            and the TLS configuration of the server cannot be fixed. Setting this property reduces the protection
            against a man-in-the-middle attack for connections to this server.
            This is ignored if insecure_ssl is set.
          type: boolean
          default: false
    ProductInfo:
      title: ProductInfoResponse
      type: object
      description: Product Information Response
      properties:
        api_version:
          description: Current API version.
          type: string
          example: 1.0.0
        product_version:
          description: Current installed product version.
          type: string
          example: 1.0.0
        system_uuid:
          description: System UUID
          type: string
        product_upgrade_history:
          description: Product upgrade history.
          type: array
          items:
            $ref: '#/components/schemas/ProductHistory'
        supported_api_versions:
          description: All the supported API versions.
          type: array
          items:
            type: string
    ProductHistory:
      properties:
        version:
          description: Product Version.
          type: string
          example: 1.0.0
        installed_on:
          description: This version installed on date.
          type: string
          format: date-time
          example: 2022-05-22T09:15:30Z
    ProxyConfiguration:
      type: object
      description: Web proxy configuration that is used to communicate with Delphix Corp. for support, troubleshooting, upgrades, updates, and patches.
      required:
        - host
        - port
        - enabled
      properties:
        host:
          description: The host name or IP address of the proxy server.
          type: string
          example: "proxy.server.com"
        port:
          description: The port number of the proxy server.
          type: integer
          example: 3128
        username:
          description: The username to use when authenticating with the proxy server.
          type: string
          example: "proxy-user"
        password:
          description: The password to use when authenticating with the proxy server.
          type: string
          x-dct-toolkit-credential-field: true
          example: "proxy-password"
        enabled:
          description: When set, these settings are enabled. True by default.
          type: boolean
          example: true
        truststore_filename:
          description: File name of a truststore which can be used to validate the TLS certificate of the proxy server. The truststore
            must be available at /etc/config/certs/<truststore_filename>
          type: string
          maxLength: 1024
          pattern: '^$|^[a-zA-Z0-9_\.\-]+$'
        truststore_password:
          description: Password for reading trustStore file provided in 'truststore_filename' property
          type: string
          maxLength: 1024
          x-dct-toolkit-credential-field: true
    ProductRegistrationOfflinePayload:
      type: object
      description: Product registration object for a manually generated payload.
      required:
        - data_key
        - authentication_token
      properties:
        data_key:
          type: string
          x-dct-toolkit-credential-field: true
        authentication_token:
          type: string
          x-dct-toolkit-credential-field: true
    ProductRegistrationOnlinePayload:
      type: object
      description: Product registration object for a manually generated payload.
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
          x-dct-toolkit-credential-field: true
    GlobalProperties:
      title: GlobalProperties
      type: object
      description: Global properties response.
      properties:
        disable_username_password:
          description: Property to define either username & password based authentication disabled or not.
          type: boolean
    APIClassificationConfig:
      title: APIClassificationConfig
      type: object
      description: Api Classification Config.
      properties:
        version:
          description: Api Classification Config Version.
          type: string
          example: 1.0.0
        api_classification:
          description: The classification of each APIs, either it is automation or not.
          type: array
          items:
            $ref: '#/components/schemas/ApiClassificationObject'
    EngineRegistrationParameter:
      title: EngineRegistrationParameter
      type: object
      description: Parameters to register and authenticate an engine.
      required:
        - name
        - hostname
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 256
        hostname:
          type: string
          minLength: 1
          maxLength: 256
        username:
          description: The virtualization domain admin username.
          type: string
          nullable: true
          minLength: 1
          maxLength: 256
        password:
          x-dct-toolkit-credential-field: true
          description: The virtualization domain admin password.
          type: string
          nullable: true
          minLength: 1
          maxLength: 4096
        masking_username:
          description: The masking admin username.
          type: string
          nullable: true
          minLength: 1
          maxLength: 256
        masking_password:
          x-dct-toolkit-credential-field: true
          description: The masking admin password.
          type: string
          nullable: true
          minLength: 1
          maxLength: 4096
        hashicorp_vault_username_command_args:
          description: "Arguments to pass to the Vault CLI tool to retrieve the virtualzation username for the engine."
          example:
            - "kv"
            - "get"
            - "-field=username"
            - "kv-v2/delphix-secrets/delphixUser"
          type: array
          nullable: true
          minItems: 1
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 4096
        hashicorp_vault_masking_username_command_args:
          description: "Arguments to pass to the Vault CLI tool to retrieve the masking username for the engine."
          example:
            - [ "kv", "get", "-field=username",  "kv-v2/delphix-secrets/delphixUser" ]
          type: array
          nullable: true
          minItems: 1
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 4096
        hashicorp_vault_password_command_args:
          description: "Arguments to pass to the Vault CLI tool to retrieve the virtualization password for the engine."
          example:
            - "kv"
            - "get"
            - "-field=password"
            - "kv-v2/delphix-secrets/delphixUser"
          type: array
          nullable: true
          minItems: 1
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 4096
        hashicorp_vault_masking_password_command_args:
          description: "Arguments to pass to the Vault CLI tool to retrieve the masking password for the engine."
          example:
            - [ "kv", "get", "-field=password",  "kv-v2/delphix-secrets/delphixUser" ]
          type: array
          nullable: true
          minItems: 1
          maxItems: 100
          items:
            type: string
            minLength: 1
            maxLength: 4096
        hashicorp_vault_id:
          description: Reference to the Hashicorp vault to use to retrieve virtualization engine credentials.
          type: integer
          format: int64
          nullable: true
        masking_hashicorp_vault_id:
          description: Reference to the Hashicorp vault to use to retrieve masking engine credentials.
          type: integer
          format: int64
          nullable: true
        insecure_ssl:
          description: |
            Allow connections to the engine over HTTPs without validating the TLS certificate. Even though
            the connection to the engine might be performed over HTTPs, setting this property eliminates
            the protection against a man-in-the-middle attach for connections to this engine. Instead,
            consider creating a truststore with a Certificate Authority to validate the engine's certificate,
            and set the truststore_filename property.
          type: boolean
          default: false
        unsafe_ssl_hostname_check:
          description: |
            Ignore validation of the name associated to the TLS certificate when connecting to the engine over HTTPs.
            Setting this value must only be done if the TLS certificate of the engine does not match the hostname,
            and the TLS configuration of the engine cannot be fixed. Setting this property reduces the protection
            against a man-in-the-middle attack for connections to this engine.
            This is ignored if insecure_ssl is set.
          type: boolean
          default: false
        truststore_filename:
          description: |
            File name of a truststore which can be used to validate the TLS certificate of the engine. The truststore
            must be available at /etc/config/certs/<truststore_filename>
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
          pattern: '^[a-zA-Z0-9_\.\-]+$'
        truststore_password:
          x-dct-toolkit-credential-field: true
          description: |
            Password to read the truststore.
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
        tags:
          description: The tags to be created for this engine.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    ProvisionVDBResponse:
      properties:
        job:
          $ref: '#/components/schemas/Job'
          description: The initiated job.
        vdb_id:
          type: string
          description: The ID of the provisioned vdb.
    Hook:
      required:
        - command
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 256
        command:
          type: string
          minLength: 1
          maxLength: 131072
        shell:
          type: string
          enum: [ "bash", "shell", "expect", "ps", "psd" ]
        element_id:
          type: string
          minLength: 1
          maxLength: 256
        has_credentials:
          type: boolean
    PaginatedResponseMetadata:
      type: object
      properties:
        prev_cursor:
          description: Pointer to the previous page of results. Use this value as a cursor query
            parameter in a subsequent request, along with limit, to navigate through
            the collection by virtual page.
          type: string
        next_cursor:
          description: Pointer to the next page of results. Use this value as a cursor query
            parameter in a subsequent request, along with limit, to navigate through
            the collection by virtual page.
          type: string
        total:
          description: The total number of results. This value may not be provided.
          type: integer
          format: int_64
    StorageSavingsReportSummarizedData:
      type: object
      properties:
        vdb_count:
          type: integer
          description: The total VDB count
        dsource_count:
          type: integer
          description: The total dSource count
        virtualized_space:
          type: integer
          format: int64
          description: Total Virtualized Space. This is the sum of storage size from dSources and their dependant VDBs.
        unvirtualized_space:
          type: integer
          format: int64
          description: Total Unvirtualized Space. This is the sum of unvirtualized space from the dependants VDBs of the dSource.
        estimated_savings:
          type: integer
          description: The disk space that has been saved by using Delphix virtualizion, in bytes.
          format: int64
          example: 109242677
        estimated_savings_perc:
          description: The disk space that has been saved by using Delphix virtualizion, in percentage.
          type: number

    ConnectorTestResponse:
      title: ConnectorTestResponse
      type: object
      description: The result of the masking connector test.
      required:
        - status
        - message
      properties:
        status:
          description: Connection status, SUCCEEDED or FAILED
          type: string
          enum: [ "SUCCEEDED", "FAILED" ]
          example: "SUCCEEDED"
        message:
          description: A message describing the result of the masking connector test.
          type: string
          example: "Connection Succeeded"
    DatabaseConnectivityCheckParameters:
      required:
        - credentials_type
        - source_id
      title: DatabaseConnectivityCheckParameters
      type: object
      description: Parameters to test JDBC connectivity to source configs.
      properties:
        credentials_type:
          description: The type of credentials.
          type: string
          enum: ["MSSQL_ENVIRONMENT_USER", "MSSQL_DOMAIN_USER", "MSSQL_DATABASE_USER", "ORACLE", "ASE", "SOURCE_CONFIG"]
        source_id:
          description: Source database config Id.
          type: string
          example: "1-SOURCE-CONFIG-1"
        username:
          description: Database username (Not applicable for MSSQL_ENVIRONMENT_USER).
          type: string
          example: "username"
        password:
          x-dct-toolkit-credential-field: true
          description: Database password (Not applicable for MSSQL_ENVIRONMENT_USER and mutually exclusive with vault attributes).
          type: string
          example: "password"
        vault:
          type: string
          description: The name or reference of the vault from which to read the database credentials (ORACLE, ASE and MSSQL_DOMAIN_USER only).
          minLength: 1
          maxLength: 256
          example: my-vault
        hashicorp_vault_engine:
          type: string
          description: Vault engine name where the credential is stored (ORACLE, ASE and MSSQL_DOMAIN_USER only).
          minLength: 1
          maxLength: 256
          example: kv
        hashicorp_vault_secret_path:
          type: string
          description: Path in the vault engine where the credential is stored (ORACLE, ASE and MSSQL_DOMAIN_USER only).
          minLength: 1
          maxLength: 256
          example: oracle-env
        hashicorp_vault_username_key:
          type: string
          description: Hashicorp vault key for the username in the key-value store (ORACLE, ASE and MSSQL_DOMAIN_USER only).
          minLength: 1
          maxLength: 256
          example: username
        hashicorp_vault_secret_key:
          type: string
          description: Hashicorp vault key for the password in the key-value store (ORACLE, ASE and MSSQL_DOMAIN_USER only).
          minLength: 1
          maxLength: 256
          example: secret
        azure_vault_name:
          type: string
          description: Azure key vault name (ORACLE, ASE and MSSQL_DOMAIN_USER only).
          minLength: 1
          maxLength: 256
          example: azure_vault
        azure_vault_username_key:
          type: string
          description: Azure vault key for the username in the key-value store (ORACLE, ASE and MSSQL_DOMAIN_USER only).
          minLength: 1
          maxLength: 256
          example: username
        azure_vault_secret_key:
          type: string
          description: Azure vault key for the password in the key-value store (ORACLE, ASE and MSSQL_DOMAIN_USER only).
          minLength: 1
          maxLength: 256
          example: secret
        cyberark_vault_query_string:
          type: string
          description: Query to find a credential in the CyberArk vault (ORACLE, ASE and MSSQL_DOMAIN_USER only).
          minLength: 1
          maxLength: 256
          example: Safe=Test;Folder=Test;Object=Test
        environment_id:
          type: string
          description: Id of the environment to which environment user belongs (MSSQL_ENVIRONMENT_USER only).
          minLength: 1
          maxLength: 256
        environment_user:
          type: string
          description: Reference to the environment user (MSSQL_ENVIRONMENT_USER only).
          minLength: 1
          maxLength: 256
    ValidateJavaParameters:
      title: ValidateJavaParameters
      type: object
      description: Parameters to validate java path for the remote host.
      required:
        - java_home
        - port
        - host_name
      properties:
        java_home:
          description: Path pointing to java home on the remote machine.
          type: string
          example: "home/jdk/"
        port:
          description: SSH port of the remote host machine that will be used to establish SSH connection.
          type: integer
          minimum: 0
          maximum: 65535
          nullable: true
          example: 22
        username:
          description: The username of the user that will be used to connect to the remote host machine.
          type: string
          minLength: 1
          maxLength: 255
          example: "username"
        password:
          x-dct-toolkit-credential-field: true
          description: The password of the user that will be used to connect to the remote host machine.
          type: string
          minLength: 1
          maxLength: 255
          example: "password"
        host_name:
          description: Hostname of the remote host machine that will be used to establish connection.
          type: string
          example: "test.host.com"
        use_engine_public_key:
          type: boolean
          description: Whether to use public key authentication.
          example: true
        vault_id:
          type: string
          description: The DCT id or name of the vault from which to read the host credentials.
          minLength: 1
          maxLength: 256
          example: my-vault
        hashicorp_vault_engine:
          x-dct-toolkit-credential-field: true
          type: string
          description: Vault engine name where the credential is stored.
          minLength: 1
          maxLength: 256
          example: kv
        hashicorp_vault_secret_path:
          x-dct-toolkit-credential-field: true
          type: string
          description: Path in the vault engine where the credential is stored.
          minLength: 1
          maxLength: 256
          example: oracle-env
        hashicorp_vault_username_key:
          x-dct-toolkit-credential-field: true
          type: string
          description: Key for the username in the key-value store.
          minLength: 1
          maxLength: 256
          example: username
        hashicorp_vault_secret_key:
          x-dct-toolkit-credential-field: true
          type: string
          description: Key for the password in the key-value store.
          minLength: 1
          maxLength: 256
          example: secret
        azure_vault_name:
          x-dct-toolkit-credential-field: true
          type: string
          description: Azure key vault name (ORACLE, ASE and MSSQL_DOMAIN_USER only).
          minLength: 1
          maxLength: 256
          example: azure_vault
        azure_vault_username_key:
          x-dct-toolkit-credential-field: true
          type: string
          description: Azure vault key for the username in the key-value store (ORACLE, ASE and MSSQL_DOMAIN_USER only).
          minLength: 1
          maxLength: 256
          example: username
        azure_vault_secret_key:
          x-dct-toolkit-credential-field: true
          type: string
          description: Azure vault key for the password in the key-value store (ORACLE, ASE and MSSQL_DOMAIN_USER only).
          minLength: 1
          maxLength: 256
          example: secret
        cyberark_vault_query_string:
          x-dct-toolkit-credential-field: true
          type: string
          description: Query to find a credential in the CyberArk vault.
          minLength: 1
          maxLength: 256
          example: Safe=Test;Folder=Test;Object=Test
        use_kerberos_authentication:
          type: boolean
          description: Whether to use kerberos authentication.
          example: true
    ConnectivityCheckParameters:
      title: ConnectivityCheckParameters
      type: object
      description: Parameters to check connectivity between engine and remote host.
      required:
        - engine_id
        - host
        - port
      properties:
        engine_id:
          description: The ID of the engine to check.
          type: string
          example: "engine-123"
        use_engine_public_key:
          type: boolean
          description: Whether to use public key authentication.
          example: true
        os_name:
          type: string
          description: Operating system type of the environment.
          enum: [ UNIX, WINDOWS ]
          example: UNIX
        staging_environment:
          type: string
          description: Id of the connector environment which is used to connect to this source environment.
          minLength: 1
          maxLength: 256
          example: 1-WINDOWS_HOST-1
        host:
          description: The hostname of the remote host machine to check.
          type: string
          example: "test.host.com"
        port:
          description: The port of the remote host machine to check. For Windows, port on which Delphix connector is running.
          type: integer
          minimum: 0
          maximum: 65535
          nullable: true
          example: 22
        username:
          description: The username of the remote host machine to check. Username is mandatory input with password/use_engine_public_key/kerberos_authentication.
          type: string
          minLength: 1
          maxLength: 255
          example: "username"
        password:
          x-dct-toolkit-credential-field: true
          description: The password of the remote host machine to check.
          type: string
          minLength: 1
          maxLength: 255
          example: "password"
        vault_id:
          type: string
          description: The DCT id or name of the vault from which to read the host credentials.
          minLength: 1
          maxLength: 256
          example: my-vault
        hashicorp_vault_engine:
          x-dct-toolkit-credential-field: true
          type: string
          description: Vault engine name where the credential is stored.
          minLength: 1
          maxLength: 256
          example: kv
        hashicorp_vault_secret_path:
          x-dct-toolkit-credential-field: true
          type: string
          description: Path in the vault engine where the credential is stored.
          minLength: 1
          maxLength: 256
          example: oracle-env
        hashicorp_vault_username_key:
          x-dct-toolkit-credential-field: true
          type: string
          description: Key for the username in the key-value store.
          minLength: 1
          maxLength: 256
          example: username
        hashicorp_vault_secret_key:
          x-dct-toolkit-credential-field: true
          type: string
          description: Key for the password in the key-value store.
          minLength: 1
          maxLength: 256
          example: secret
        azure_vault_name:
          x-dct-toolkit-credential-field: true
          type: string
          description: Azure key vault name (ORACLE, ASE and MSSQL_DOMAIN_USER only).
          minLength: 1
          maxLength: 256
          example: azure_vault
        azure_vault_username_key:
          x-dct-toolkit-credential-field: true
          type: string
          description: Azure vault key for the username in the key-value store (ORACLE, ASE and MSSQL_DOMAIN_USER only).
          minLength: 1
          maxLength: 256
          example: username
        azure_vault_secret_key:
          x-dct-toolkit-credential-field: true
          type: string
          description: Azure vault key for the password in the key-value store (ORACLE, ASE and MSSQL_DOMAIN_USER only).
          minLength: 1
          maxLength: 256
          example: secret
        cyberark_vault_query_string:
          x-dct-toolkit-credential-field: true
          type: string
          description: Query to find a credential in the CyberArk vault.
          minLength: 1
          maxLength: 256
          example: Safe=Test;Folder=Test;Object=Test
        use_kerberos_authentication:
          type: boolean
          description: Whether to use kerberos authentication.
          example: true
    ValidateJavaResponse:
      title: ValidateJavaResponse
      type: object
      description: The result of the validating java path on remote host.
      required:
        - message
      properties:
        message:
          description: A message describing the result of the connectivity check.
          type: string
          example: "Success!"
        status:
          description: A status describing the status of the connectivity check.
          type: string
          enum: [ "SUCCESS", "FAILED" ]
          example: "SUCCESS"
    ConnectivityCheckResponse:
      title: ConnectivityResponse
      type: object
      description: The result of the connectivity check.
      required:
        - message
      properties:
        message:
          description: A message describing the result of the connectivity check.
          type: string
          example: "Success!"
        status:
          description: A status describing the status of the connectivity check.
          type: string
          enum: ["SUCCESS", "FAILED"]
          example: "SUCCESS"
    TagsRequest:
      type: object
      required:
        - tags
      properties:
        tags:
          description: Array of tags with key value pairs
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 1
          maxItems: 1000
          uniqueItems: true
    ScopeTagsRequest:
      type: object
      required:
        - tags
      properties:
        tags:
          description: Array of tags with key value pairs along with optional object_type and permissions
          type: array
          items:
            $ref: '#/components/schemas/ScopeTag'
          minItems: 1
          maxItems: 1000
          uniqueItems: true
    PermissionsRequest:
      type: object
      required:
        - permission_objects
      properties:
        permission_objects:
          description: Array of permissions with object type and their permission.
          type: array
          items:
            $ref: '#/components/schemas/PermissionObject'
          minItems: 1
          maxItems: 1000
          uniqueItems: true
    ScopedObjectsRequest:
      type: object
      required:
        - objects
      properties:
        objects:
          description: An array of scoped objects
          type: array
          items:
            $ref: '#/components/schemas/ScopedObjectItem'
          minItems: 1
          maxItems: 1000
          uniqueItems: true
    AlwaysAllowedPermissionRequest:
      type: object
      required:
        - always_allowed_permissions
      properties:
        always_allowed_permissions:
          description: An array of always allowed permissions
          type: array
          items:
            $ref: '#/components/schemas/AlwaysAllowedPermission'
          minItems: 1
          maxItems: 1000
          uniqueItems: true
    TagsResponse:
      type: object
      properties:
        tags:
          description: Array of tags with key value pairs
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    ScopeTagsResponse:
      type: object
      properties:
        tags:
          description: Array of tags with key value pairs along with optional object_type and permissions
          type: array
          items:
            $ref: '#/components/schemas/ScopeTag'
    ScopedObjectItemsResponse:
      type: object
      properties:
        objects:
          description: Array of access group scope objects with object id and object type
          type: array
          items:
            $ref: '#/components/schemas/ScopedObjectItem'
    DeleteTag:
      type: object
      properties:
        key:
          description: Key of the tag
          type: string
          minLength: 1
          maxLength: 4000
          example: 'key-1'
        value:
          description: Value of the tag
          type: string
          minLength: 1
          maxLength: 4000
          example: 'value-1'
        tags:
          description: List of tags to be deleted
          type: array
          minItems: 1
          maxItems: 1000
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
    DeleteScopeObjectTags:
      type: object
      properties:
        tags:
          description: List of scope tags to be deleted
          type: array
          minItems: 1
          maxItems: 1000
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ScopeTag'
    DeleteScopedObjectItem:
      type: object
      required:
        - objects
      properties:
        objects:
          description: List of scoped objects to be deleted
          type: array
          minItems: 1
          maxItems: 1000
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ScopedObjectItem'
    ScopeTag:
      type: object
      required:
        - key
        - value
      properties:
        key:
          description: Key of the tag
          type: string
          minLength: 1
          maxLength: 4000
          example: 'key-1'
        value:
          description: Value of the tag
          type: string
          minLength: 1
          maxLength: 4000
          example: 'value-1'
        object_type:
          $ref: '#/components/schemas/ObjectTypeEnum'
        permission:
          $ref: '#/components/schemas/PermissionEnum'
    ObjectTypeEnum:
      description: Type of the DCT object.
      type: string
      enum: [ACCESS_GROUP,ACCOUNT,ROLE,BOOKMARK,CDB,DATABASE_TEMPLATE,DSOURCE,ENGINE,ENVIRONMENT,MASKING_ENVIRONMENT,MASKING_ALGORITHM_REVISION,MASKING_JOB,MASKING_JOB_SET,REPORT_SCHEDULE,SOURCE,VAULT,VCDB,VDB,VDB_GROUP,CONNECTOR,VIRTUALIZATION_POLICY,DATASET_GROUP,ENGINE_VAULT,KERBEROS_CONFIG,TIMEFLOW,MASKING_PLUGIN,MASKING_ALGORITHM,HYPERSCALE_INSTANCE,HYPERSCALE_CONNECTOR,HYPERSCALE_DATASET,TOOLKIT, REPLICATION_PROFILE, STAGING_SOURCE]
      example: 'VDB'
    PermissionEnum:
      description: Type of the permission on DCT object.
      type: string
      enum: [READ,UPDATE,DELETE,EXECUTE,CANCEL,MIGRATE,REFRESH,DISABLE,ENABLE,ABANDON,VALIDATE,START,STOP,SNAPSHOT,COPY,REMOVE_JOB,PASSWORD_RESET,UNDO_IMPORT,IMPORT,PROVISION_FROM_BOOKMARK,PROVISION,REFRESH_FROM_BOOKMARK,REFRESH_FROM_SNAPSHOT,REFRESH_FROM_TIMESTAMP,CREATE_ENVIRONMENT,CREATE_BOOKMARK,CREATE_VDBGROUP, MANAGE_TAGS, LINK]
      example: 'READ'
    Tag:
      type: object
      required:
        - key
        - value
      properties:
        key:
          description: Key of the tag
          type: string
          minLength: 1
          maxLength: 4000
          example: 'key-1'
        value:
          description: Value of the tag
          type: string
          minLength: 1
          maxLength: 4000
          example: 'value-1'
    ScopedObjectItem:
      type: object
      required:
        - object_id
        - object_type
      properties:
        object_id:
          description: ID of the object
          type: string
          minLength: 1
          maxLength: 4000
          example: '1-VDB-OBJECT-ID'
        object_type:
          $ref: '#/components/schemas/ObjectTypeEnum'
        permission:
          $ref: '#/components/schemas/PermissionEnum'
    AlwaysAllowedPermission:
      type: object
      required:
        - object_type
        - permission
      properties:
        object_type:
          $ref: '#/components/schemas/ObjectTypeEnum'
        permission:
          $ref: '#/components/schemas/PermissionEnum'
    ClusterNodeInstance:
      type: object
      required:
        - node_reference
        - instance_number
        - instance_name
      properties:
        node_reference:
          type: string
          minLength: 1
          maxLength: 256
          minItems: 1
          description: The cluster node id, name or addresses for this provision operation
        instance_number:
          type: integer
          description: The instance number for this provision operation
        instance_name:
          type: string
          minLength: 1
          maxLength: 256
          description: The instance name for this provision operation
    OracleRacCustomEnvFile:
      type: object
      properties:
        node_id:
          type: string
          minLength: 1
          maxLength: 256
        path_parameters:
          type: string
    OracleRacCustomEnvVar:
      type: object
      properties:
        node_id:
          type: string
          minLength: 1
          maxLength: 256
        name:
          type: string
          minLength: 1
          maxLength: 4096
        value:
          type: string
          minLength: 1
          maxLength: 4096
    EnvironmentRepository:
      description: A repository corresponding to the environment.
      allOf:
        - $ref: '#/components/schemas/Repository'
        - type: object
          properties:
            environment_id:
              description: The environment ID.
              type: string
    OracleListener:
      properties:
        id:
          description: Id of this listener.
          type: string
          example: 1-ORACLE_NODE_LISTENER-11
        name:
          description: Name of this listener.
          type: string
          example: my-listener
        type:
          description: Type of this listener.
          enum: [NODE, SCAN]
          example: NODE
        protocol_addresses:
          description: The list of protocol addresses for this listener.
          type: array
          items:
            type: string
          example: [ "(ADDRESS=(PROTOCOL=tcp)(HOST=10.75.59.184)(PORT=4567))", "(ADDRESS=(PROTOCOL=ipc)(KEY=LISTENER))" ]
        client_endpoints:
          description: The list of client endpoints for this listener.
          type: array
          items:
            type: string
          example: [ "(ADDRESS=(PROTOCOL=tcp)(HOST=10.75.59.184)(PORT=4567))" ]
        is_discovered:
          description: Whether this listener was automatically discovered or not.
          type: boolean
        host_id:
          description: Id to the host this listener is associated with.
          type: string
          example: 1-UNIX_HOST-14
    KerberosConfig:
      description: A Kerberos config object.
      type: object
      properties:
        id:
          description: The kerberos config ID.
          type: string
          example: '1-KERBEROS_CONFIG-1'
        name:
          description: The name of the kerberos config object.
          type: string
          example: 'Untitled'
        namespace_id:
          description: The namespace id of this kerberos config object.
          type: string
          example: '1-NAMESPACE-1'
        namespace_name:
          description: The namespace name of this kerberos config object.
          type: string
          example: 'test-engine-1'
        is_replica:
          description: Is this a replicated object.
          type: boolean
          example: true
        engine_id:
          description: Id of the Engine that this kerberos config object belongs to.
          type: string
          example: '1'
        engine_name:
          description: Name of the Engine that this kerberos config object belongs to.
          type: string
          example: 'Engine-1'
        realm:
          description: Kerberos Realm name.
          type: string
          example: 'DELPHIX.COM'
        principal:
          description: Kerberos principal name.
          type: string
          example: 'sybase'
        enabled:
          description: The kerberos is enabled or not.
          type: boolean
          nullable: true
        keytab:
          description: Kerberos keytab.
          type: string
          example: 'keytab'
        kdc_servers:
          description: One of more KDC servers.
          type: array
          items:
            $ref: "#/components/schemas/KDCServers"
    KDCServers:
      properties:
        hostname:
          description: One of more KDC servers.
          type: string
          example: 'kerberos-02.delphix.com'
        port:
          description: One of more KDC servers.
          type: integer
          example: 88
    PasswordVault:
      description: A Delphix engine password vault.
      type: object
      properties:
        id:
          description: The password vault ID.
          type: string
          example: '1-PASSWORD-VAULT-1'
        name:
          description: The name of this password vault.
          type: string
          example: 'Untitled'
        namespace_id:
          description: The namespace id of this password vault.
          type: string
          example: '1-NAMESPACE-1'
        namespace_name:
          description: The namespace name of this password vault.
          type: string
          example: 'test-engine-1'
        is_replica:
          description: Is this a replicated object.
          type: boolean
          example: true
        engine_id:
          description: Id of the Engine that this password vault belongs to.
          type: string
          example: '1'
        engine_name:
          description: Name of the Engine that this password vault belongs to.
          type: string
          example: 'Engine-1'
        type:
          description: The type of this password vault.
          type: string
          enum: [ HASHICORPVAULT, CYBERARKPASSWORDVAULT ]
          example: 'HASHICORPVAULT'
        host:
          description: Host name or IP address of this password vault server.
          type: string
          example: '10.119.132.43'
        port:
          description: Port of this password vault server.
          type: integer
          format: int64
          example: 8200
        enabled:
          description: The vault is enabled or not.
          type: boolean
          nullable: true
        namespace:
          description: The namespace of this password vault.
          type: string
          example: 'ns-1'
    UpdateRepositoryParameters:
      required:
        - database_type
      properties:
        database_type:
          description: The database type of this repository.
          type: string
          enum: [ ORACLE, MSSQL, ASE, APPDATA ]
        allow_provisioning:
          description: Flag indicating whether the repository should be used for provisioning.
          type: boolean
        is_staging:
          description: Flag indicating whether this repository can be used by the Delphix Engine for internal processing.
          type: boolean
        version:
          description: Version of the repository.
          type: string
    Repository:
      properties:
        id:
          description: Entity id of the repository.
          type: string
        name:
          description: Name of the repository.
          type: string
        database_type:
          description: The database type of this repository.
          type: string
        allow_provisioning:
          description: Flag indicating whether the repository should be used for provisioning.
          type: boolean
        is_staging:
          description: Flag indicating whether this repository can be used by the Delphix Engine for internal processing.
          type: boolean
        oracle_base:
          description: The Oracle base where database binaries are located.
          type: string
        version:
          description: Version of the repository.
          type: string
        bits:
          description: 32 or 64 bits.
          type: integer
        install_group:
          description: Group name of the user that owns the install.
          type: string
        install_user:
          description: User name of the user that owns the install.
          type: string
        rac:
          description: Flag indicating whether the install supports Oracle RAC.
          type: boolean
        ports:
          description: The network ports for connecting to the database instance.
          type: array
          items:
            type: integer
            format: int64
        dump_history_file:
          description: Fully qualified name of the dump history file.
          type: string
        page_size:
          description: Database page size for the SAP ASE instance.
          type: integer
          format: int64
        owner:
          description: Account the database server instance is running as.
          type: string
        installation_path:
          description: Directory path where the installation is located.
          type: string
        fulltext_installed:
          description: This property determines if the full-text search and semantic search is installed or not.
          type: boolean
        internal_version:
          description: The internal version is tied to the data format of a database and is used to detect compatibility.
          type: integer
          format: int64
        mssql_cluster_instances_name:
          description: MSSQL cluster instances name.
          type: array
          items:
            type: string
        mssql_cluster_instances_version:
          description: MSSQL cluster instances version.
          type: array
          items:
            type: string
        installation_home:
          description: Directory where the installation home is located.
          type: string
        drive_letter:
          description: MSSQL failover cluster drive letter.
          type: array
          items:
            type: string
    EnvironmentUserParams:
      properties:
        username:
          type: string
          description: Username of the OS.
          minLength: 1
          maxLength: 256
          example: oracle
        password:
          x-dct-toolkit-credential-field: true
          type: string
          description: Password of the OS.
          minLength: 1
          maxLength: 256
          example: oracle
        vault:
          type: string
          description: The name or reference of the vault from which to read the host credentials.
          minLength: 1
          maxLength: 256
          example: my-vault
        vault_username:
          type: string
          description: Delphix display name for the vault user
          minLength: 1
          maxLength: 256
          example: my-vault-user
        hashicorp_vault_engine:
          type: string
          description: Vault engine name where the credential is stored.
          minLength: 1
          maxLength: 256
          example: kv
        hashicorp_vault_secret_path:
          type: string
          description: Path in the vault engine where the credential is stored.
          minLength: 1
          maxLength: 256
          example: oracle-env
        hashicorp_vault_username_key:
          type: string
          description: Key for the username in the key-value store.
          minLength: 1
          maxLength: 256
          example: username
        hashicorp_vault_secret_key:
          type: string
          description: Key for the password in the key-value store.
          minLength: 1
          maxLength: 256
          example: secret
        cyberark_vault_query_string:
          type: string
          description: Query to find a credential in the CyberArk vault.
          minLength: 1
          maxLength: 256
          example: Safe=Test;Folder=Test;Object=Test
        use_kerberos_authentication:
          type: boolean
          description: Whether to use kerberos authentication.
          example: true
        use_engine_public_key:
          type: boolean
          description: Whether to use public key authentication.
          example: true
    HostCreateParameters:
      required:
        - address
      properties:
        name:
          description: The name to associate with the host.
          type: string
          minLength: 1
        hostname:
          description: The hostname or IP address of this host.
          type: string
          minLength: 1
          example: db1.host.com
        nfs_addresses:
          description: The list of host/IP addresses to use for NFS export.
          type: array
          items:
            type: string
            minLength: 1
          example: [ "192.168.10.2" ]
        ssh_port:
          description: The port number used to connect to the host via SSH.
          type: integer
          default: 22
          example: 22
        privilege_elevation_profile_reference:
          description: Reference to a profile for escalating user privileges.
          type: string
          minLength: 1
        dsp_keystore_alias:
          description: The lowercase alias to use inside the user managed DSP keystore.
          type: string
          minLength: 1
        dsp_keystore_password:
          x-dct-toolkit-credential-field: true
          description: The password for the user managed DSP keystore.
          type: string
          format: password
          minLength: 1
        dsp_keystore_path:
          description: The path to the user managed DSP keystore.
          type: string
          minLength: 1
        dsp_truststore_password:
          x-dct-toolkit-credential-field: true
          description: The password for the user managed DSP truststore.
          type: string
          format: password
          minLength: 1
        dsp_truststore_path:
          description: The path to the user managed DSP truststore.
          type: string
          minLength: 1
        java_home:
          description: The path to the user managed Java Development Kit (JDK). If not specified, then the OpenJDK will be used.
          type: string
          minLength: 1
        toolkit_path:
          description: The path for the toolkit that resides on the host.
          type: string
          minLength: 1
        oracle_jdbc_keystore_password:
          x-dct-toolkit-credential-field: true
          description: The password for the user managed Oracle JDBC keystore.
          type: string
          format: password
          minLength: 1
        oracle_tde_keystores_root_path:
          description: The path to the root of the Oracle TDE keystores artifact directories.
          type: string
          minLength: 1
        ssh_verification_strategy:
          $ref: "#/components/schemas/SSHVerificationStrategy"
        oracle_cluster_node_virtual_ips:
          description: The Virtual IP addresses associated with the OracleClusterNode.
          type: array
          items:
            $ref: "#/components/schemas/OracleVirtualIP"
    SSHVerificationStrategy:
      description: Mechanism to use for ssh host verification.
      required: [name]
      properties:
        name:
          description: The name of the verification strategy.
          type: string
          enum: [RAW_KEY, FINGERPRINT, ACCEPT_ALWAYS]
        key_type:
          description: The type of SSH key.
          type: string
          enum: [RSA, DSA, ECDSA, ED25519]
        raw_key:
          description: Base64-encoded ssh key of the host for RAW_KEY verification.
          type: string
          minLength: 1
        fingerprint_type:
          description: Hash function for the fingerprint for FINGERPRINT verification.
          type: string
          enum: [SHA256, SHA512]
        fingerprint:
          description: Base-64 encoded fingerprint of the ssh key of the host for FINGERPRINT verification.
          type: string
          minLength: 1
    VirtualizationStorageSummaryData:
      required:
        - engine_id
        - engine_name
        - engine_hostname
      properties:
        engine_id:
          description: A reference to the engine.
          type: string
          minLength: 1
          example: engine-123
        engine_name:
          description: The engine name.
          type: string
          minLength: 1
          example: My Favorite Engine
        engine_hostname:
          description: The engine hostname.
          type: string
          minLength: 1
          example: "eng09.dev.delphix.com"
        total_capacity:
          description: The total amount of storage allocated for engine objects and system metadata, in bytes.
          type: integer
          format: int64
          example: 100000000000
        free_storage:
          description: The amount of available storage, in bytes.
          type: integer
          format: int64
          example: 99000000000
        used_storage:
          description: The amount of storage used by engine objects and system metadata, in bytes.
          type: integer
          format: int64
          example: 85000000000
        used_percentage:
          description: The percentage of storage used.
          type: number
          example: 75.00
        dsource_count:
          description: The number of dSources on the engine.
          type: integer
          format: int64
          example: 50
        vdb_count:
          description: The number of VDBs on the engine.
          type: integer
          format: int64
          example: 200
        total_object_count:
          description: The total number of dSources and VDBs on the engine.
          type: integer
          format: int64
          example: 400
    StorageSavingsSummaryData:
      properties:
        dsource_id:
          description: Id of the dSource.
          type: string
        dependant_vdbs:
          description: The number of VDBs that are dependant on this dSource. This includes all VDB descendants that have this dSource as an ancestor.
          type: integer
          example: 200
        engine_name:
          description: The engine name.
          type: string
          minLength: 1
          example: My Favorite Engine
        unvirtualized_space:
          description: The disk space that would be required if not using Delphix virtualizion, in bytes.
          type: integer
          format: int64
          example: 109242677
        virtualized_space:
          description: The actual space used by the VDB, in bytes.
          type: integer
          format: int64
          example: 12345678
        name:
          type: string
          description: The name of the database on the target environment.
          minLength: 1
          maxLength: 256
          example: my-test-database
        estimated_savings:
          type: integer
          description: The disk space that has been saved by using Delphix virtualizion, in bytes.
          format: int64
          example: 109242677
        estimated_savings_perc:
          description: The disk space that has been saved by using Delphix virtualizion, in percentage.
          type: number
    VDBInventoryData:
      properties:
        engine_name:
          description: The name of the engine the VDB belongs to.
          type: string
          example: "My favorite engine"
        name:
          description: The name of the VDB.
          type: string
          example: "prod01-copy01"
        type:
          description: The database type of the VDB.
          type: string
          example: "Oracle"
        version:
          description: The database version of the VDB.
          type: string
          example: "10.2.0.5.0"
        parent_name:
          description: The name of the VDB's parent dataset.
          type: string
          example: "prod01-main"
        parent_id:
          description: A reference to the parent dataset of the VDB.
          type: string
          example: "1-DB_CONTAINER-1"
        creation_date:
          description: The date the VDB was created.
          type: string
          format: date-time
          example: "2023-04-15T08:51:34.148000+00:00"
        last_refreshed_date:
          description: The date the VDB was last refreshed.
          type: string
          format: date-time
          example: "2023-04-15T10:49:34.148000+00:00"
        parent_timeflow_location:
          description: The location for the VDB's parent timeflow.
          type: string
          example: "1178883"
        parent_timeflow_timestamp:
          description: The timestamp for the VDB's parent timeflow.
          type: string
          format: date-time
          example: "2021-05-01T08:51:34.148000+00:00"
        parent_timeflow_timezone:
          description: The timezone for the VDB's parent timeflow.
          type: string
          example: "America/Los_Angeles"
        enabled:
          description: Whether the VDB is enabled
          type: boolean
          example: true
        status:
          description: The runtime status of the VDB. 'Unknown' if all attempts to connect to the dataset failed.
          type: string
          example: "RUNNING"
        storage_size:
          description: The actual space used by the VDB, in bytes.
          type: integer
          format: int64
          example: 12345678
    DSourceUsageData:
      properties:
        engine_name:
          description: The name of the engine the dSource belongs to.
          type: string
          example: My favorite engine
        name:
          description: The name of the dSource
          type: string
          example: prod01-main
        unvirtualized_space:
          description: The the disk space that would be required if not using Delphix virtualizion, in bytes.
          type: integer
          format: int64
          example: 109242677
        actual_space:
          description: The actual space used by this dSource, in bytes. This includes the disk space used by the current copy of the data as well as the snapshots and log files retained to enable provisioning from historical versions.
          type: integer
          format: int64
          example: 339292672
        dependant_vdbs:
          description: The number of VDBs that are dependant on this dSource. This includes all VDB descendants that have this dSource as an ancestor.
          type: integer
          example: 25
    DSourceConsumptionData:
      properties:
        name:
          description: The name of the dSource
          type: string
          example: prod01-main
        status:
          description: The status of the dSource
          type: string
          example: Running
        database_type:
          description: The type of the dSource
          type: string
          example: Oracle
        engine_id:
          description: The id of the engine the dSource belongs to.
          type: string
          minLength: 1
          example: "1"
        engine_name:
          description: The name of the engine the dSource belongs to
          type: string
          example: My favorite engine
        last_consumption_date:
          description: The most recent date where consumption data was captured for this dSource.
          type: string
          format: date-time
          example: 2022-01-07T12:06:59.157Z,54321
        ingested_size:
          description: The ingested size of the dSource
          type: integer
          format: int64
          minimum: 0
          example: 12345
    SearchBody:
      description: Search body.
      type: object
      properties:
        filter_expression:
          type: string
          minLength: 5
          maxLength: 2000
          example: string_field CONTAINS "over" AND numberic_field GT 9000 OR string_field2 EQ "Goku"
    EngineIdBody:
      description: The ID of the registered engine.
      type: object
      properties:
        engine_id:
          type: string
          minLength: 1
          example: "1"
    ListEnvironmentUsers:
      type: object
      properties:
        users:
          description: List of users
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentUser'
    EnvironmentUser:
      type: object
      properties:
        user_ref:
          description: Environment user reference
          type: string
          minLength: 1
          maxLength: 4000
          example: 'user-ref-1'
        username:
          description: Username of environment user
          type: string
          minLength: 1
          maxLength: 4000
          example: 'username-1'
        primary_user:
          description: This indicates if this user is primary or not
          type: boolean
          example: false
        auth_type:
          description: Authentication type of this user. PasswordCredential indicates username and password are used, SystemKeyCredential indicates public key based security credential, KeyPairCredential indicates public key based security credential consisting of a user specified key pair, KerberosCredential indicates Kerberos authentication, CyberArkVaultCredential indicates CyberArk Vault is used and HashiCorpVaultCredential indicates that Hashicorp vault is used for authentication
          type: string
          enum:
            - PasswordCredential
            - SystemKeyCredential
            - KeyPairCredential
            - KerberosCredential
            - CyberArkVaultCredential
            - HashiCorpVaultCredential
    ReportingScheduleCreateParameters:
      type: object
      required:
        - report_type
        - cron_expression
        - messages
        - file_format
        - enabled
        - recipients
      properties:
        report_type:
          type: string
          enum:
            - VIRTUALIZATION_STORAGE_SUMMARY
            - ENGINE_PERFORMANCE_ANALYTIC
            - VDB_INVENTORY_DATA
            - DSOURCE_USAGE_DATA
            - DSOURCE_CONSUMPTION_DATA
            - MASKING_EXECUTION_METRICS
            - AUDIT_LOGS_SUMMARY
            - STORAGE_SAVINGS_SUMMARY
          example: VIRTUALIZATION_STORAGE_SUMMARY
        cron_expression:
          type: string
          example: "0 0 2 ? * Mon-Fri"
          description: Standard cron expressions are supported e.g. 0 15 10 L * ?  - Schedule at 10:15 AM on the last day of every month, 0 0 2 ? * Mon-Fri - Schedule at 2:00 AM every Monday, Tuesday, Wednesday, Thursday and Friday. For more details kindly refer- "http://www.quartz-scheduler.org/documentation/"
        time_zone:
          type: string
          example: "America/Los_Angeles"
          description: Timezones are specified according to the Olson tzinfo database - "https://en.wikipedia.org/wiki/List_of_tz_database_time_zones".
        message:
          type: string
          example: sample message
        file_format:
          type: string
          enum:
            - CSV
          example: CSV
        enabled:
          type: boolean
          default: true
          example: true
        recipients:
          type: array
          minItems: 1
          uniqueItems: true
          items:
            type: string
            format: email
            example: user@example.com
        sort_column:
          type: string
          enum:
            - engine_id
            - engine_name
            - engine_hostname
            - total_capacity
            - free_storage
            - used_storage
            - used_percentage
            - dsource_count
            - vdb_count
            - total_object_count
            - name
            - unvirtualized_space
            - actual_space
            - dependant_vdbs
            - type
            - version
            - parent_id
            - parent_name
            - creation_date
            - parent_timeflow_location
            - parent_timeflow_timestamp
            - parent_timeflow_timezone
            - enabled
            - status
            - -engine_id
            - -engine_name
            - -engine_hostname
            - -total_capacity
            - -free_storage
            - -used_storage
            - -used_percentage
            - -dsource_count
            - -vdb_count
            - -total_object_count
            - -unvirtualized_space
            - -actual_space
            - -dependant_vdbs
            - -name
            - -type
            - -version
            - -parent_id
            - -parent_name
            - -creation_date
            - -parent_timeflow_location
            - -parent_timeflow_timestamp
            - -parent_timeflow_timezone
            - -enabled
            - -status
          example: engine_name
        row_count:
          type: integer
          minimum: 1
          example: 1
        make_current_account_owner:
          type: boolean
          default: true
          description: Whether the account creating this reporting schedule must be configured as owner of the reporting schedule.
    ReportingSchedule:
      required:
        - report_type
        - cron_expression
        - messages
        - file_format
        - enabled
        - recipients
      properties:
        report_id:
          type: integer
          readOnly: true
          example: 123
        report_type:
          type: string
          enum:
            - VIRTUALIZATION_STORAGE_SUMMARY
            - ENGINE_PERFORMANCE_ANALYTIC
            - VDB_INVENTORY_DATA
            - DSOURCE_USAGE_DATA
            - DSOURCE_CONSUMPTION_DATA
            - MASKING_EXECUTION_METRICS
            - AUDIT_LOGS_SUMMARY
            - STORAGE_SAVINGS_SUMMARY
          example: VIRTUALIZATION_STORAGE_SUMMARY
        cron_expression:
          type: string
          example: "0 0 2 ? * Mon-Fri"
          description: Standard cron expressions are supported e.g. 0 15 10 L * ?  - Schedule at 10:15 AM on the last day of every month, 0 0 2 ? * Mon-Fri - Schedule at 2:00 AM every Monday, Tuesday, Wednesday, Thursday and Friday. For more details kindly refer- "http://www.quartz-scheduler.org/documentation/"
        time_zone:
          type: string
          example: "America/Los_Angeles"
          description: Timezones are specified according to the Olson tzinfo database - "https://en.wikipedia.org/wiki/List_of_tz_database_time_zones".
        message:
          type: string
          example: sample message
        file_format:
          type: string
          enum:
            - CSV
          example: CSV
        enabled:
          type: boolean
          default: true
          example: true
        recipients:
          type: array
          minItems: 1
          uniqueItems: true
          items:
            type: string
            format: email
            example: user@example.com
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        sort_column:
          type: string
          enum:
            - engine_id
            - engine_name
            - engine_hostname
            - total_capacity
            - free_storage
            - used_storage
            - used_percentage
            - dsource_count
            - vdb_count
            - total_object_count
            - name
            - unvirtualized_space
            - actual_space
            - dependant_vdbs
            - type
            - version
            - parent_id
            - parent_name
            - creation_date
            - parent_timeflow_location
            - parent_timeflow_timestamp
            - parent_timeflow_timezone
            - enabled
            - status
            - -engine_id
            - -engine_name
            - -engine_hostname
            - -total_capacity
            - -free_storage
            - -used_storage
            - -used_percentage
            - -dsource_count
            - -vdb_count
            - -total_object_count
            - -unvirtualized_space
            - -actual_space
            - -dependant_vdbs
            - -name
            - -type
            - -version
            - -parent_id
            - -parent_name
            - -creation_date
            - -parent_timeflow_location
            - -parent_timeflow_timestamp
            - -parent_timeflow_timezone
            - -enabled
            - -status
          example: engine_name
        row_count:
          type: integer
          minimum: 1
          example: 1
    ErrorResponse:
      properties:
        error:
          description: Error code for any failure
          type: string
          minLength: 1
          maxLength: 1024
        error_description:
          description: Error description for any failure
          type: string
          minLength: 1
          maxLength: 1024
    EnableScaleTestingRequest:
      x-internal: true
      type: object
      required:
        - engines_count
      properties:
        engines_count:
          type: integer
          description: no. of times same engine needs to be registered
        virt_engines_list:
          type: array
          items:
            type: string
          description: list of virt engine hostnames to be registered engines_count times
        masking_engines_list:
          type: array
          items:
            type: string
          description: list of masking engine hostnames to be registered engines_count times
        virt_objects_count:
          type: integer
          description: no. of times to duplicate sources, containers, and timeflows
        snapshots_count:
          type: integer
          description: no. of times to duplicate snapshots
        masking_objects_count:
          type: integer
          description: no. of times to duplicate jobs, rulesets, and connectors
    SyncEnginesHyperscaleParameters:
      type: object
      description: Parameters to sync the global object from a source engine to a list of target engines registered with a Hyperscale Instance.
      required:
        - source_engine_id
        - target_engine_ids
      properties:
        source_engine_id:
          type: string
          description: The ID of the engine to copy the data from.
          minLength: 1
          maxLength: 256
          example: "1"
        target_engine_ids:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 256
          minItems: 1
          description: The IDs of the target engines to copy the data into.
          example: ["1", "2"]
    CopyMaskingJobParameters:
      type: object
      description: Parameters to copy a masking job.
      required:
        - target_engine_id
      properties:
        target_engine_id:
          type: string
          description: The ID of the engine to copy the job to.
          minLength: 1
          maxLength: 256
          example: "1"
        source_environment_id:
          type: string
          description: The ID or name of the source environment on the target engine. This only applies to On-The-Fly jobs.
          minLength: 1
          maxLength: 256
          example: "test-on-the-fly-mask1"
        target_environment_id:
          type: string
          description: The ID or name of the target environment to copy the job into.
          minLength: 1
          maxLength: 256
          example: "prod-in-place-mask1"
        force_overwrite:
          type: boolean
          default: false
          description: Whether to overwrite objects that already exist on the target engine.
    MigrateMaskingJobParameters:
      type: object
      description: Parameters to migrate a masking job.
      required:
        - target_engine_id
      properties:
        target_engine_id:
          type: string
          description: The ID of the engine to copy the job to.
          minLength: 1
          maxLength: 256
          example: "1"
        source_environment_id:
          type: string
          description: The ID or name of the source environment on the target engine. This only applies to On-The-Fly jobs.
          minLength: 1
          maxLength: 256
          example: "test-on-the-fly-mask1"
        target_environment_id:
          type: string
          description: The ID or name of the target environment to copy the job into.
          minLength: 1
          maxLength: 256
          example: "prod-in-place-mask1"
        force_overwrite:
          type: boolean
          default: false
          description: Whether to overwrite objects that already exist on the target engine.
    RemoveMaskingJobParameters:
      type: object
      description: Parameters to remove a masking job from a masking job set.
      required:
        - engine_id
      properties:
        engine_id:
          type: string
          description: The ID of the engine to remove the masking job from.
          minLength: 1
          maxLength: 256
          example: "1"
    Domain:
      type: object
      properties:
        msad_domain_name:
          description: This is used to get full DN for authentication and search. Provide this value only if server is microsoft AD.
          type: string
          minLength: 1
          maxLength: 4000
          example: 'msad.domain.com'
        username_pattern:
          description: The username_patterns can be used to avoid providing full-dn during login. This will also be used for search of groups,email, first name and last name.
          type: string
          minLength: 1
          maxLength: 4000
          example: 'uid={0},ou=Users'
        search_base:
          description: Search base used to search for ldap user groups. Leave this field empty if a full username_pattern is provided and server is non microsoft AD.
          type: string
          minLength: 1
          maxLength: 4000
          example: 'DC=test,DC=delphix,DC=com'
        group_attr:
          description: Group mapped attribute on ldap side used for user group search.
          type: string
          minLength: 1
          maxLength: 4000
          example: 'gidNumber'
        email_attr:
          description: Email mapped attribute on ldap side used for mapping on DCT side account.
          type: string
          minLength: 1
          maxLength: 4000
          example: 'mail'
        first_name_attr:
          description: First name attribute mapped on ldap side used for mapping on DCT side account.
          type: string
          minLength: 1
          maxLength: 4000
          example: 'cn'
        last_name_attr:
          description: Last name attribute mapped on ldap side used for mapping on DCT side account.
          type: string
          minLength: 1
          maxLength: 4000
          example: 'sn'
        object_class_attr:
          description: The name of the objectClass on ldap side under which the user is mapped.This is used to search for the user details.
          type: string
          minLength: 1
          maxLength: 4000
          example: 'person'
        search_attr:
          description: Search attribute mapped on ldap side using which search on ldap side will be made.
          type: string
          minLength: 1
          maxLength: 4000
          example: 'uid'
    DatabaseTemplateCreateParameters:
      description: Parameters to create a database template.
      type: object
      required:
        - name
        - source_type
      properties:
        name:
          description: The DatabaseTemplate name.
          type: string
          minLength: 1
          example: "template-name"
        description:
          description: User provided description for this template.
          type: string
          example: "Config params for prod01"
        source_type:
          description: The type of the source associated with the template.
          type: string
          enum: [ OracleVirtualSource, OracleLinkedSource, MSSqlVirtualSource, MSSqlLinkedSource ]
          example: OracleVirtualSource
        parameters:
          description: A name/value map of string configuration parameters.
          type: object
          additionalProperties:
            type: string
          example:
            confgName1: configValue1
            configName2: configValue2
        make_current_account_owner:
          type: boolean
          default: true
          description: Whether the account creating this database template must be configured as owner of the database template.
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    DatabaseTemplate:
      description: A database template to use for provisioning and refresh. If set, configParams will be ignored on provision or refresh.
      type: object
      required:
        - name
        - source_type
      properties:
        id:
          description: The DatabaseTemplate entity ID.
          type: string
          readOnly: true
          example: "1-database-template-123"
        name:
          description: The DatabaseTemplate name.
          type: string
          minLength: 1
          example: "template-name"
        description:
          description: User provided description for this template.
          type: string
          example: "Config params for prod01"
        source_type:
          description: The type of the source associated with the template.
          type: string
          enum: [ OracleVirtualSource, OracleLinkedSource, MSSqlVirtualSource, MSSqlLinkedSource ]
          example: OracleVirtualSource
        parameters:
          description: A name/value map of string configuration parameters.
          type: object
          additionalProperties:
            type: string
          example:
            configName1: configValue1
            configName2: configValue2
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    UpdateDatabaseTemplateParameters:
      type: object
      description: Parameters to update a Database Template.
      properties:
        name:
          description: The DatabaseTemplate name.
          type: string
          minLength: 1
          example: "template-name"
        description:
          description: User provided description for this template.
          type: string
          example: "Config params for prod01"
        source_type:
          description: The type of the source associated with the template.
          type: string
          enum: [ OracleVirtualSource, OracleLinkedSource, MSSqlVirtualSource, MSSqlLinkedSource ]
          example: OracleVirtualSource
        parameters:
          description: A name/value map of string configuration parameters.
          type: object
          additionalProperties:
            type: string
          example:
            configName1: configValue1
            configName2: configValue2
    LdapConfigValidateParameter:
      properties:
        username:
          description: Username of the account to validate the ldap optional attributes.
          type: string
          minLength: 1
          maxLength: 1024
        password:
          x-dct-toolkit-credential-field: true
          description: Password of the account to validate the ldap optional attributes.
          type: string
          minLength: 1
          maxLength: 1024
    VirtualizationSchedule:
      required:
        - cron_string
        - cutoff_time
      properties:
        cron_string:
          type: string
        cutoff_time:
          type: integer
          format: int64
    VirtualizationPolicy:
      properties:
        id:
          type: string
        name:
          type: string
        namespace:
          type: string
        namespace_id:
          description: The namespace id of this virtualization policy.
          type: string
        namespace_name:
          description: The namespace name of this virtualization policy..
          type: string
        is_replica:
          description: Is this a replicated object.
          type: boolean
        engine_id:
          type: string
        policy_type:
          type: string
          enum: [ REFRESH_POLICY, SNAPSHOT_POLICY, SYNC_POLICY, RETENTION_POLICY, QUOTA_POLICY ]
        timezone_id:
          type: string
        default_policy:
          description: True if this is the default policy created when the system is setup.
          type: boolean
        effective_type:
          description: Whether this policy has been directly applied or inherited. See the effectivePolicies parameter of the list call for details.
          type: string
          enum: [ DIRECT_APPLIED, INHERITED ]
        data_duration:
          description: Amount of time to keep source data [Retention Policy].
          type: integer
        data_unit:
          description: Time unit for data_duration [Retention Policy].
          type: string
          enum: [ DAY, WEEK, MONTH, QUARTER, YEAR ]
        log_duration:
          description: Amount of time to keep log data [Retention Policy].
          type: integer
        log_unit:
          description: Time unit for log_duration [Retention Policy].
          type: string
          enum: [ DAY, WEEK, MONTH, QUARTER, YEAR ]
        num_of_daily:
          description: Number of daily snapshots to keep [Retention Policy].
          type: integer
        num_of_weekly:
          description: Number of weekly snapshots to keep [Retention Policy].
          type: integer
        day_of_week:
          description: Day of week upon which to enforce weekly snapshot retention [Retention Policy].
          type: string
          enum: [ MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY ]
        num_of_monthly:
          description: Number of monthly snapshots to keep [Retention Policy].
          type: integer
        day_of_month:
          description: Day of month upon which to enforce monthly snapshot retention [Retention Policy].
          type: integer
        num_of_yearly:
          description: Number of yearly snapshots to keep [Retention Policy].
          type: integer
        day_of_year:
          description: Day of year upon which to enforce yearly snapshot retention, expressed a month / day string (e.g., "Jan 1") [Retention Policy].
          type: string
        schedules:
          type: array
          items:
            $ref: "#/components/schemas/VirtualizationSchedule"
        size:
          description: Size of the quota, in bytes. (QUOTA_POLICY only).
          type: integer
          format: int64
          nullable: true
    DeleteDSourceRequest:
      required:
        - dsource_id
      properties:
        dsource_id:
          description: Id of the dSource to delete.
          type: string
          minLength: 1
          maxLength: 256
        force:
          description: Flag indicating whether to continue the operation upon failures.
          type: boolean
          default: false
        oracle_username:
          type: string
          description: The name of the privileged user to run the delete operation as (Oracle only).
          minLength: 1
          maxLength: 256
          example: oracle-username
        oracle_password:
          x-dct-toolkit-credential-field: true
          type: string
          description: Password for privileged user (Oracle only).
          minLength: 1
          maxLength: 256
          example: oracle-password
    BaseDSourceLinkSourceParameters:
      properties:
        name:
          description: Name of the dSource to be created.
          type: string
          minLength: 1
          maxLength: 256
        source_id:
          description: Id of the source to link.
          type: string
          minLength: 1
          maxLength: 256
        group_id:
          description: Id of the dataset group where this dSource should belong to.
          type: string
          minLength: 1
          maxLength: 256
        description:
          description: The notes/description for the dSource.
          type: string
          minLength: 1
          maxLength: 1024
        log_sync_enabled:
          description: True if LogSync should run for this database.
          type: boolean
          default: false
        sync_policy_id:
          type: string
          description: The ID of the SnapSync policy for the dSource.
          minLength: 1
          maxLength: 256
          example: snapshot-123
        retention_policy_id:
          type: string
          description: The ID of the Retention policy for the dSource.
          minLength: 1
          maxLength: 256
          example: retention-policy-123
        make_current_account_owner:
          type: boolean
          default: true
          description: Whether the account creating this reporting schedule must be configured as owner of the reporting schedule.
        tags:
          type: array
          maxItems: 1000
          description: The tags to be created for dSource.
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 1
        ops_pre_sync:
          description: Operations to perform before syncing the created dSource. These operations can quiesce any data prior to syncing.
          type: array
          items:
            $ref: "#/components/schemas/SourceOperation"
        ops_post_sync:
          description: Operations to perform after syncing a created dSource.
          type: array
          items:
            $ref: "#/components/schemas/SourceOperation"
    OracleDSourceLinkSourceParameters:
      required:
        - source_id
      allOf:
        - $ref: '#/components/schemas/BaseDSourceLinkSourceParameters'
        - type: object
          properties:
            external_file_path:
              description: External file path.
              type: string
              minLength: 1
              maxLength: 1024
            environment_user_id:
              description: Id of the environment user to use for linking.
              type: string
              minLength: 1
              maxLength: 256
            backup_level_enabled:
              description: Boolean value indicates whether LEVEL-based incremental backups can be used on the source database.
              type: boolean
            rman_channels:
              description: Number of parallel channels to use.
              type: integer
              minimum: 1
              maximum: 32
              default: 2
            files_per_set:
              description: Number of data files to include in each RMAN backup set.
              type: integer
              minimum: 1
              maximum: 64
              default: 5
            check_logical:
              description: True if extended block checking should be used for this linked database.
              type: boolean
              default: false
            encrypted_linking_enabled:
              description: True if SnapSync data from the source should be retrieved through an encrypted connection. Enabling this feature can decrease the performance of SnapSync from the source but has no impact on the performance of VDBs created from the retrieved data.
              type: boolean
              default: false
            compressed_linking_enabled:
              description: True if SnapSync data from the source should be compressed over the network. Enabling this feature will reduce network bandwidth consumption and may significantly improve throughput, especially over slow network.
              type: boolean
              default: true
            bandwidth_limit:
              description: Bandwidth limit (MB/s) for SnapSync and LogSync network traffic. A value of 0 means no limit.
              type: integer
              default: 0
            number_of_connections:
              description: Total number of transport connections to use during SnapSync.
              type: integer
              default: 1
            diagnose_no_logging_faults:
              description: If true, NOLOGGING operations on this container are treated as faults and cannot be resolved manually.
              type: boolean
              default: true
            pre_provisioning_enabled:
              description: If true, pre-provisioning will be performed after every sync.
              type: boolean
              default: false
            link_now:
              description: True if initial load should be done immediately.
              type: boolean
              default: false
            force_full_backup:
              description: Whether or not to take another full backup of the source database.
              type: boolean
              default: false
            double_sync:
              description: True if two SnapSyncs should be performed in immediate succession to reduce the number of logs required to provision the snapshot. This may significantly reduce the time necessary to provision from a snapshot.
              type: boolean
              default: false
            skip_space_check:
              description: Skip check that tests if there is enough space available to store the database in the Delphix Engine. The Delphix Engine estimates how much space a database will occupy after compression and prevents SnapSync if insufficient space is available. This safeguard can be overridden using this option. This may be useful when linking highly compressible databases.
              type: boolean
              default: false
            do_not_resume:
              description: Indicates whether a fresh SnapSync must be started regardless if it was possible to resume the current SnapSync. If true, we will not resume but instead ignore previous progress and backup all datafiles even if already completed from previous failed SnapSync. This does not force a full backup, if an incremental was in progress this will start a new incremental snapshot.
              type: boolean
              default: false
            files_for_full_backup:
              description: List of datafiles to take a full backup of. This would be useful in situations where certain datafiles could not be backed up during previous SnapSync due to corruption or because they went offline.
              type: array
              items:
                type: integer
            log_sync_mode:
              description: LogSync operation mode for this database.
              type: string
              enum: [ ARCHIVE_ONLY_MODE, ARCHIVE_REDO_MODE, UNDEFINED ]
              default: UNDEFINED
            log_sync_interval:
              description: Interval between LogSync requests, in seconds.
              type: integer
              default: 5
            non_sys_username:
              type: string
              description: Non-SYS database user to access this database. Only required for username-password auth (Single tenant only).
              minLength: 1
              maxLength: 256
              example: oracle
            non_sys_password:
              x-dct-toolkit-credential-field: true
              type: string
              description: Password for non sys user authentication (Single tenant only).
              minLength: 1
              maxLength: 256
              example: oracle
            non_sys_vault:
              type: string
              description: The name or reference of the vault from which to read the database credentials (Single tenant only).
              minLength: 1
              maxLength: 256
              example: my-vault
            non_sys_hashicorp_vault_engine:
              type: string
              description: Vault engine name where the credential is stored (Single tenant only).
              minLength: 1
              maxLength: 256
              example: kv
            non_sys_hashicorp_vault_secret_path:
              type: string
              description: Path in the vault engine where the credential is stored (Single tenant only).
              minLength: 1
              maxLength: 256
              example: oracle-env
            non_sys_hashicorp_vault_username_key:
              type: string
              description: Hashicorp vault key for the username in the key-value store (Single tenant only).
              minLength: 1
              maxLength: 256
              example: username
            non_sys_hashicorp_vault_secret_key:
              type: string
              description: Hashicorp vault key for the password in the key-value store (Single tenant only).
              minLength: 1
              maxLength: 256
              example: secret
            non_sys_azure_vault_name:
              type: string
              description: Azure key vault name (Single tenant only).
              minLength: 1
              maxLength: 256
              example: azure_vault
            non_sys_azure_vault_username_key:
              type: string
              description: Azure vault key for the username in the key-value store (Single tenant only).
              minLength: 1
              maxLength: 256
              example: username
            non_sys_azure_vault_secret_key:
              type: string
              description: Azure vault key for the password in the key-value store (Single tenant only).
              minLength: 1
              maxLength: 256
              example: secret
            non_sys_cyberark_vault_query_string:
              type: string
              description: Query to find a credential in the CyberArk vault (Single tenant only).
              minLength: 1
              maxLength: 256
              example: Safe=Test;Folder=Test;Object=Test
            fallback_username:
              type: string
              description: The database fallback username. Optional if bequeath connections are enabled (to be used in case of bequeath connection failures). Only required for username-password auth.
              minLength: 1
              maxLength: 256
              example: oracle
            fallback_password:
              x-dct-toolkit-credential-field: true
              type: string
              description: Password for fallback username.
              minLength: 1
              maxLength: 256
              example: oracle
            fallback_vault:
              type: string
              description: The name or reference of the vault from which to read the database credentials.
              minLength: 1
              maxLength: 256
              example: my-vault
            fallback_hashicorp_vault_engine:
              type: string
              description: Vault engine name where the credential is stored.
              minLength: 1
              maxLength: 256
              example: kv
            fallback_hashicorp_vault_secret_path:
              type: string
              description: Path in the vault engine where the credential is stored.
              minLength: 1
              maxLength: 256
              example: oracle-env
            fallback_hashicorp_vault_username_key:
              type: string
              description: Hashicorp vault key for the username in the key-value store.
              minLength: 1
              maxLength: 256
              example: username
            fallback_hashicorp_vault_secret_key:
              type: string
              description: Hashicorp vault key for the password in the key-value store.
              minLength: 1
              maxLength: 256
              example: secret
            fallback_azure_vault_name:
              type: string
              description: Azure key vault name.
              minLength: 1
              maxLength: 256
              example: azure_vault
            fallback_azure_vault_username_key:
              type: string
              description: Azure vault key for the username in the key-value store.
              minLength: 1
              maxLength: 256
              example: username
            fallback_azure_vault_secret_key:
              type: string
              description: Azure vault key for the password in the key-value store.
              minLength: 1
              maxLength: 256
              example: secret
            fallback_cyberark_vault_query_string:
              type: string
              description: Query to find a credential in the CyberArk vault.
              minLength: 1
              maxLength: 256
              example: Safe=Test;Folder=Test;Object=Test
            ops_pre_log_sync:
              description: Operations to perform after syncing a created dSource and before running the LogSync.
              type: array
              items:
                $ref: "#/components/schemas/SourceOperation"
    OracleStagingPushDSourceLinkSourceParameters:
      required:
        - engine_id
        - database_name
      allOf:
        - $ref: '#/components/schemas/BaseDSourceLinkSourceParameters'
        - type: object
          properties:
            engine_id:
              description: The ID of the engine to link staging push database on.
              type: string
              minLength: 1
              maxLength: 256
            container_type:
              description: The container type of this database.If not provided the request would be considered as a PDB database.
              type: string
              enum:
                - ROOT_CDB
                - NON_CDB
            environment_user_id:
              description: Id of the environment user to use for linking.
              type: string
              minLength: 1
              maxLength: 256
            repository:
              description: The repository reference to link.
              type: string
              minLength: 1
              maxLength: 1024
            database_name:
              description: The name of the database.
              type: string
              minLength: 1
              maxLength: 1024
            database_unique_name:
              description: The unique name of the database.
              type: string
              minLength: 1
              maxLength: 1024
            sid:
              description: The name (sid) of the instance.
              type: string
              minLength: 1
              maxLength: 1024
            mount_base:
              description: The base mount point to use for the NFS mounts.
              type: string
              minLength: 1
              maxLength: 1024
            custom_env_variables_pairs:
              description: An array of name value pair of environment variables.
              type: array
              items:
                $ref: "#/components/schemas/NameValuePair"
            custom_env_variables_paths:
              description: An array of strings of whitespace-separated parameters to be passed to the source command. The first parameter must be an absolute path to a file that exists on the target environment. Every subsequent parameter will be treated as an argument interpreted by the environment file.
              type: array
              items:
                type: string
            auto_staging_restart:
              description: Boolean value indicates whether this staging database should automatically be restarted when staging host reboot is detected.
              type: boolean
              default: false
            physical_standby:
              description: Boolean value indicates whether this staging database will be configured as a physical standby.
              type: boolean
              default: false
            validate_snapshot_in_readonly:
              description: Boolean value indicates whether this staging database snapshot will be validated by opening it in read-only.
              type: boolean
              default: false
            staging_database_templates:
              deprecated: true
              description: An array of name value pair of Oracle database configuration parameter overrides. This property is deprecated. Use staging_database_config_params instead.
              type: array
              items:
                $ref: "#/components/schemas/NameValuePair"
            staging_database_config_params:
              description: Oracle database configuration parameter overrides. If both staging_database_templates and staging_database_config_params are specified, staging_database_config_params will be used.
              type: object
              nullable: true
              example: { "processes": "150" }
              additionalProperties:
                type: string
            staging_container_database_reference:
              description: Reference of the CDB source config.
              type: string
              minLength: 1
              maxLength: 1024
            ops_pre_log_sync:
              description: Operations to perform after syncing a created dSource and before running the LogSync.
              type: array
              items:
                $ref: "#/components/schemas/SourceOperation"
    AppDataDSourceLinkSourceParameters:
      required:
        - parameters
        - sync_parameters
        - environment_user
      allOf:
        - $ref: '#/components/schemas/BaseDSourceLinkSourceParameters'
        - type: object
          properties:
            link_type:
              description: |
                The type of link to create. Default is AppDataDirect.
                * `AppDataDirect` - Represents the AppData specific parameters of a link request for a source directly replicated into the Delphix Engine.
                * `AppDataStaged` - Represents the AppData specific parameters of a link request for a source with a staging source.
              type: string
              enum:
                - AppDataDirect
                - AppDataStaged
              default: AppDataDirect
            staging_mount_base:
              description: The base mount point for the NFS mount on the staging environment [AppDataStaged only].
              type: string
              maxLength: 256
            staging_environment:
              description: The environment used as an intermediate stage to pull data into Delphix [AppDataStaged only].
              type: string
            staging_environment_user:
              description: The environment user used to access the staging environment [AppDataStaged only].
              type: string
            environment_user:
              type: string
              description: The OS user to use for linking.
              minLength: 1
              maxLength: 256
            excludes:
              type: array
              description: List of subdirectories in the source to exclude when syncing data.
                These paths are relative to the root of the source directory. [AppDataDirect only]
              items:
                  type: string
                  minLength: 1
                  maxLength: 1024
            follow_symlinks:
              type: array
              description: List of symlinks in the source to follow when syncing data.
                These paths are relative to the root of the source directory. All other symlinks are preserved. [AppDataDirect only]
              items:
                type: string
                minLength: 1
                maxLength: 1024
            parameters:
              description: The JSON payload conforming to the DraftV4 schema based on the type of application data being manipulated.
              type: object
              additionalProperties: true
            sync_parameters:
              description: The JSON payload conforming to the snapshot parameters definition in a LUA toolkit or platform plugin.
              type: object
              additionalProperties: true
    ASEDSourceLinkSourceParameters:
      required:
        - load_backup_path
        - source_id
      allOf:
        - $ref: '#/components/schemas/BaseDSourceLinkSourceParameters'
        - type: object
          properties:
            external_file_path:
              description: External file path.
              type: string
              minLength: 1
              maxLength: 1024
            mount_base:
              description: The base mount point to use for the NFS mounts.
              type: string
              minLength: 1
              maxLength: 87
            load_backup_path:
              description: Source database backup location.
              type: string
              minLength: 1
              maxLength: 1024
            backup_server_name:
              description: Name of the backup server instance.
              type: string
              minLength: 1
              maxLength: 1024
            backup_host_user:
              description: OS user for the host where the backup server is located.
              type: string
              minLength: 1
              maxLength: 1024
            backup_host:
              description: Host environment where the backup server is located.
              type: string
              minLength: 1
              maxLength: 1024
            dump_credentials:
              x-dct-toolkit-credential-field: true
              description: The password credential for the source DB user.
              type: string
              minLength: 1
              maxLength: 1024
            source_host_user:
              description: ID or user reference of the host OS user to use for linking.
              type: string
              minLength: 1
              maxLength: 1024
            db_user:
              description: The user name for the source DB user.
              type: string
              minLength: 1
              maxLength: 1024
            db_password:
              x-dct-toolkit-credential-field: true
              type: string
              description: Password for the database user.
              minLength: 1
              maxLength: 256
            db_vault:
              type: string
              description: The name or reference of the vault from which to read the database credentials.
              minLength: 1
              maxLength: 256
            db_hashicorp_vault_engine:
              type: string
              description: Vault engine name where the credential is stored.
              minLength: 1
              maxLength: 256
            db_hashicorp_vault_secret_path:
              type: string
              description: Path in the vault engine where the credential is stored.
              minLength: 1
              maxLength: 256
            db_hashicorp_vault_username_key:
              type: string
              description: Hashicorp vault key for the username in the key-value store.
              minLength: 1
              maxLength: 256
            db_hashicorp_vault_secret_key:
              type: string
              description: Hashicorp vault key for the password in the key-value store.
              minLength: 1
              maxLength: 256
            db_azure_vault_name:
              type: string
              description: Azure key vault name.
              minLength: 1
              maxLength: 256
            db_azure_vault_username_key:
              type: string
              description: Azure vault key for the username in the key-value store.
              minLength: 1
              maxLength: 256
            db_azure_vault_secret_key:
              type: string
              description: Azure vault key for the password in the key-value store.
              minLength: 1
              maxLength: 256
            db_cyberark_vault_query_string:
              type: string
              description: Query to find a credential in the CyberArk vault.
              minLength: 1
              maxLength: 256
            staging_repository:
              type: string
              description: The SAP ASE instance on the staging environment that we want to use for validated sync.
              minLength: 1
              maxLength: 1024
            staging_host_user:
              type: string
              description: Information about the host OS user on the staging environment to use for linking.
              minLength: 1
              maxLength: 1024
            validated_sync_mode:
              type: string
              description: Information about the host OS user on the staging environment to use for linking.
              enum: [ENABLED, DISABLED]
              default: ENABLED
            dump_history_file_enabled:
              type: boolean
              description: Specifies if Dump History File is enabled for backup history detection.
              default: false
            drop_and_recreate_devices:
              description: If this parameter is set to true, it will drop the older devices and create new devices during manual sync operations instead of trying to remap the devices. This might increase the space utilization on Delphix Engine.
              type: boolean
              default: false
            sync_strategy:
              type: string
              enum: [ "latest_backup", "new_backup", "specific_backup" ]
              description: |
                Determines how the Delphix Engine will take a backup:
                * `latest_backup` - Use the most recent backup.
                * `new_backup` - Delphix will take a new backup of your source database.
                * `specific_backup` - Use a specific backup. Using this option requires setting `ase_backup_files`.
                Default is `new_backup`.
              default: new_backup
            ase_backup_files:
              description: The location of the full backup of the source database to restore from. The backup should be present in the shared backup location for the source database.
              type: array
              items:
                type: string
                minLength: 1
                maxLength: 256
            pre_validated_sync:
              description: Operations to perform on the staging source before performing a validated sync.
              type: array
              items:
                $ref: "#/components/schemas/SourceOperation"
            post_validated_sync:
              description: Operations to perform on the staging source after performing a validated sync.
              type: array
              items:
                $ref: "#/components/schemas/SourceOperation"
    MSSQLDSourceLinkSourceParameters:
      required:
        - source_id
      allOf:
        - $ref: '#/components/schemas/BaseDSourceLinkSourceParameters'
        - type: object
          properties:
            encryption_key:
              description: The encryption key to use when restoring encrypted backups.
              type: string
            sync_strategy:
              type: string
              enum: [ "latest_backup", "new_backup", "specific_backup", "no_backup" ]
              description: |
                Determines how the Delphix Engine will take a backup:
                * `latest_backup` - Use the most recent backup.
                * `new_backup` - Delphix will take a new backup of your source database.
                * `specific_backup` - Use a specific backup. Using this option requires setting `ase_backup_files`.
                * `no_backup` - Use as input to sync MSSQL databases without a backup.
                Default is `new_backup`.
              default: new_backup
            mssql_backup_uuid:
              type: string
              minLength: 1
              maxLength: 4096
              description: When using the `specific_backup` sync_strategy, determines the Backup Set UUID.
            compression_enabled:
              type: boolean
              default: false
              description: When using the `new_backup` sync_strategy, determines if compression must be enabled. Defaults
                to the configuration of the ingestion strategy configured on the Delphix Engine for this dSource.
            availability_group_backup_policy:
              type: string
              default: primary
              enum: [ "primary", "secondary_only", "prefer_secondary" ]
              description: |
                When using the `new_backup` sync_strategy for an MSSql Availability Group, determines the backup policy:
                * `primary` - Backups only go to the primary node.
                * `secondary_only` - Backups only go to secondary nodes. If secondary nodes are down, backups will fail.
                * `prefer_secondary` - Backups go to secondary nodes, but if secondary nodes are down, backups will go to the primary node.
            source_host_user:
              description: ID or user reference of the host OS user to use for linking.
              type: string
              minLength: 1
              maxLength: 1024
            ppt_repository:
              description: Reference of the SQL instance on the PPT environment that we want to use for pre-provisioning.
              type: string
              minLength: 1
              maxLength: 1024
            ppt_host_user:
              description: Reference of the host OS user on the PPT host to use for linking.
              type: string
              minLength: 1
              maxLength: 1024
            staging_pre_script:
              description: A user-provided PowerShell script or executable to run prior to restoring from a backup during pre-provisioning.
              type: string
              minLength: 1
              maxLength: 1024
            staging_post_script:
              description: A user-provided PowerShell script or executable to run after restoring from a backup during pre-provisioning.
              type: string
              minLength: 1
              maxLength: 1024
            sync_strategy_managed_type:
              type: string
              enum: [ "external", "delphix" ,"staging_push"]
              default: external
              description: |
                MSSQL specific parameters for source based sync strategy.:
                * `external` - MSSQL specific parameters for externally managed source based sync strategy.
                * `delphix` - MSSQL specific parameters for delphix managed source based sync strategy.
                * `staging_push` - MSSQL specific parameters for staging push based sync strategy.
            mssql_user_environment_reference:
              description: Reference to the source environment user to use for linking.
              type: string
              minLength: 1
              maxLength: 1024
            mssql_user_domain_username:
              description: The username for the source DB user.
              type: string
              minLength: 1
              maxLength: 1024
            mssql_user_domain_password:
              x-dct-toolkit-credential-field: true
              type: string
              description: Password for the database user.
              minLength: 1
              maxLength: 256
            mssql_user_domain_vault:
              type: string
              description: The name or reference of the vault from which to read the database credentials.
              minLength: 1
              maxLength: 256
            mssql_user_domain_hashicorp_vault_engine:
              type: string
              description: Vault engine name where the credential is stored.
              minLength: 1
              maxLength: 256
            mssql_user_domain_hashicorp_vault_secret_path:
              type: string
              description: Path in the vault engine where the credential is stored.
              minLength: 1
              maxLength: 256
            mssql_user_domain_hashicorp_vault_username_key:
              type: string
              description: Hashicorp vault key for the username in the key-value store.
              minLength: 1
              maxLength: 256
            mssql_user_domain_hashicorp_vault_secret_key:
              type: string
              description: Hashicorp vault key for the password in the key-value store.
              minLength: 1
              maxLength: 256
            mssql_user_domain_azure_vault_name:
              type: string
              description: Azure key vault name.
              minLength: 1
              maxLength: 256
            mssql_user_domain_azure_vault_username_key:
              type: string
              description: Azure vault key for the username in the key-value store.
              minLength: 1
              maxLength: 256
            mssql_user_domain_azure_vault_secret_key:
              type: string
              description: Azure vault key for the password in the key-value store.
              minLength: 1
              maxLength: 256
            mssql_user_domain_cyberark_vault_query_string:
              type: string
              description: Query to find a credential in the CyberArk vault.
              minLength: 1
              maxLength: 256
            mssql_database_username:
              description: The username for the source DB user.
              type: string
              minLength: 1
              maxLength: 1024
            mssql_database_password:
              x-dct-toolkit-credential-field: true
              type: string
              description: Password for the database user.
              minLength: 1
              maxLength: 256
            delphix_managed_backup_compression_enabled:
              type: boolean
              description: Specify whether the backups taken should be compressed or uncompressed when Delphix managed option is selected.
              default: false
            delphix_managed_backup_policy:
              type: string
              enum: [ "primary", "secondary_only", "prefer_secondary" ]
              description: |
                Specify which node of an availability group to run the copy-only full backup on:
                * `primary` - Backups only go to the primary node.
                * `secondary_only` - Backups only go to secondary nodes. If secondary nodes are down, backups will fail.
                * `prefer_secondary` - Backups go to secondary nodes, but if secondary nodes are down, backups will go to the primary node.
              default: primary
            external_managed_validate_sync_mode:
              type: string
              enum: [ "TRANSACTION_LOG", "FULL_OR_DIFFERENTIAL", "FULL", "NONE" ]
              description: Specifies the backup types ValidatedSync will use to synchronize the dSource with the source database
              default: TRANSACTION_LOG
            external_managed_shared_backup_locations:
              type: array
              description: Shared source database backup locations.
              items:
                type: string
                minLength: 1
                maxLength: 4096
              maxItems: 260
            external_netbackup_config_master_name:
              type: string
              description: The master server name of this NetBackup configuration.
              minLength: 1
              maxLength: 256
            external_netbackup_config_source_client_name:
              type: string
              description: The source's client server name of this NetBackup configuration.
              minLength: 1
              maxLength: 256
            external_netbackup_config_params:
              description: NetBackup configuration parameter overrides.
              type: object
              additionalProperties: true
            external_netbackup_config_templates:
              type: string
              description: Optional config template selection for NetBackup configurations. If set, external_netbackup_config_params will be ignored.
            external_commserve_host_name:
              type: string
              description: The commserve host name of this Commvault configuration.
              minLength: 1
              maxLength: 256
            external_commvault_config_source_client_name:
              type: string
              description: The source client name of this Commvault configuration.
              minLength: 1
              maxLength: 256
            external_commvault_config_staging_client_name:
              type: string
              description: The staging client name of this Commvault configuration.
              minLength: 1
              maxLength: 256
            external_commvault_config_params:
              description: Commvault configuration parameter overrides.
              type: object
              additionalProperties: true
            external_commvault_config_templates:
              type: string
              description: Optional config template selection for Commvault configurations. If set, configParams will be ignored.
    MSSQLDSourceStagingPushLinkSourceParameters:
      required:
        - name
        - staging_database_name
        - engine_id
        - ppt_repository
        - ppt_host_user
      allOf:
        - $ref: '#/components/schemas/BaseDSourceLinkSourceParameters'
        - type: object
          properties:
            engine_id:
              type: string
              description: The ID of the engine to link staging push database on.
              minLength: 1
              maxLength: 256
            encryption_key:
              description: The encryption key to use when restoring encrypted backups.
              type: string
            ppt_repository:
              description: Reference of the SQL instance on the PPT environment that we want to use for pre-provisioning.
              type: string
              minLength: 1
              maxLength: 1024
            ppt_host_user:
              description: Reference of the host OS user on the PPT host to use for linking.
              type: string
              minLength: 1
              maxLength: 1024
            staging_pre_script:
              description: A user-provided PowerShell script or executable to run prior to restoring from a backup during pre-provisioning.
              type: string
              minLength: 1
              maxLength: 1024
            staging_post_script:
              description: A user-provided PowerShell script or executable to run after restoring from a backup during pre-provisioning.
              type: string
              minLength: 1
              maxLength: 1024
            staging_database_name:
              description: The name of the database to create on the staging environment. This property is mutually exclusive to sync_strategy_managed_type
              type: string
              minLength: 1
              maxLength: 1024

    SourceOperation:
      required:
        - command
        - name
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 256
        command:
          type: string
          minLength: 1
          maxLength: 131072
        shell:
          type: string
          enum: [ "bash", "shell", "expect", "ps", "psd"]
          default: bash
        credentials_env_vars:
          description: List of environment variables that will contain credentials for this operation.
          type: array
          items:
            $ref: "#/components/schemas/CredentialsEnvVariable"
    CredentialsEnvVariable:
      required:
        - base_var_name
      properties:
        base_var_name:
          type: string
          description: Base name of the environment variables. Variables are named by appending '_USER', '_PASSWORD', '_PUBKEY' and '_PRIVKEY' to this base name, respectively. Variables whose values are not entered or are not present in the type of credential or vault selected, will not be set.
          minLength: 1
          maxLength: 256
        password:
          x-dct-toolkit-credential-field: true
          type: string
          description: Password to assign to the environment variables.
          minLength: 1
          maxLength: 256
          example: password
        vault:
          type: string
          description: The name or reference of the vault to assign to the environment variables.
          minLength: 1
          maxLength: 256
          example: my-vault
        hashicorp_vault_engine:
          type: string
          description: Vault engine name where the credential is stored.
          minLength: 1
          maxLength: 256
          example: kv
        hashicorp_vault_secret_path:
          type: string
          description: Path in the vault engine where the credential is stored.
          minLength: 1
          maxLength: 256
          example: oracle-env
        hashicorp_vault_username_key:
          type: string
          description: Hashicorp vault key for the username in the key-value store.
          minLength: 1
          maxLength: 256
          example: username
        hashicorp_vault_secret_key:
          type: string
          description: Hashicorp vault key for the password in the key-value store.
          minLength: 1
          maxLength: 256
          example: secret
        azure_vault_name:
          type: string
          description: Azure key vault name.
          minLength: 1
          maxLength: 256
          example: azure_vault
        azure_vault_username_key:
          type: string
          description: Azure vault key in the key-value store.
          minLength: 1
          maxLength: 256
          example: username
        azure_vault_secret_key:
          type: string
          description: Azure vault key in the key-value store.
          minLength: 1
          maxLength: 256
          example: secret
        cyberark_vault_query_string:
          type: string
          description: Query to find a credential in the CyberArk vault.
          minLength: 1
          maxLength: 256
          example: Safe=Test;Folder=Test;Object=Test
    LinkDSourceResponse:
      properties:
        job:
          $ref: '#/components/schemas/Job'
          description: The initiated job.
        dsource_id:
          type: string
          description: The ID of the dSource.
    LinkDSourceDefaultRequest:
      required:
        - source_id
      properties:
        source_id:
          type: string
          description: The ID of the source to be linked.
    LinkStagingPushDSourceDefaultRequest:
      required:
        - environment_id
      properties:
        environment_id:
          type: string
          description: The ID of the environment to be linked.
    OracleLinkStagingPushDSourceDefaultRequest:
      required:
        - environment_id
      properties:
        environment_id:
          type: string
          description: The ID of the environment to be linked.
        container_type:
          description: The container type of this database.If not provided the request would be considered for a PDB database.
          type: string
          enum:
            - ROOT_CDB
            - NON_CDB
    PostgresSourceCreateParameters:
      type: object
      required:
        - name
        - repository
      properties:
        name:
          type: string
          description: The name of the source.
          minLength: 1
          maxLength: 256
          example: postgres-test
        repository_id:
          type: string
          description: The ID of the Repository onto which the source will be created.
          minLength: 1
          example: "1-APPDATA_REPOSITORY-10"
        engine_id:
          type: string
          description: The ID of the engine to create the source on.
          example: "1"
        environment_id:
          type: string
          description: The ID of the environment to create the source on.
          example: "7-UNIX_HOST_ENVIRONMENT-3"
    PostgresSourceUpdateParameters:
      type: object
      properties:
        name:
          type: string
          description: The name of the source.
          minLength: 1
          maxLength: 256
          example: postgres_test_update
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  requestBodies:
    EnableDsourceBody:
      description: The parameters to enable a dSource.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EnableDsourceParameters"
    DisableDsourceBody:
      description: The parameters to disable a dSource.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DisableDsourceParameters"
    ProvisionVDBGroupFromBookmark:
      description: The parameters to provision a VDB group from a Bookmark.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProvisionVDBGroupFromBookmarkParameters"
          examples:
            generic_minimum_request:
              description: The above request example contains bare minimum properties needed to provision VdbGroup from a Bookmark
              summary: Minimal Request
              value:
                name: vdb-group-1
                bookmark_id: bookmark-id-1
                provision_parameters:
                  vdb_id1:
                    auto_select_repository: True
                  vdb_id2:
                    auto_select_repository: True
                tags:
                  - key: key1
                    value: configValue1
                make_current_account_owner: True
            full_request:
              description: The above request example contains all possible properties (across all dataplatforms)
              summary: Full Request (all possible properties across all dataplatforms)
              value:
                name: vdb-group-1
                bookmark_id: bookmark-id-1
                provision_parameters:
                  vdb_id1:
                    target_group_id: group-123
                    name: my-test-vdb
                    database_name: my-test-database
                    cdb_id: ORACLE_SINGLE_CONFIG-376
                    cluster_node_ids:
                      - ORACLE_CLUSTER_NODE-1
                    cluster_node_instances:
                      - node_reference: ORACLE_CLUSTER_NODE-1
                        instance_number: 1
                        instance_name: cluster_instance1
                    truncate_log_on_checkpoint: true
                    os_username: os-user-x
                    os_password: os-user-secret-password
                    environment_id: environment-123
                    environment_user_id: environment-user-123
                    repository_id: oracle-home-123
                    auto_select_repository: true
                    vdb_restart: true
                    template_id: template-123
                    auxiliary_template_id: aux-template-123
                    file_mapping_rules: /datafile/dbdhcp3/oradata/dbdhcp3:/data\n/u03/app/ora11202/product/11.2.0/dbhome_1/dbs/dbv_R2V4.dbf:/data/dbv_R2V4.dbf
                    oracle_instance_name: dbdhcp2
                    unique_name: dbdhcp2
                    vcdb_name: VCCD_6QQ
                    vcdb_database_name: VCCD_6QQ
                    mount_point: /var/mnt
                    open_reset_logs: true
                    snapshot_policy_id: snapshot-123
                    retention_policy_id: retention-policy-123
                    recovery_model: FULL
                    pre_script: C:\\Program Files\\Delphix\\scripts\\myscript.ps1
                    post_script: C:\\Program Files\\Delphix\\scripts\\myscript.ps1
                    cdc_on_provision: true
                    online_log_size: 4
                    online_log_groups: 2
                    archive_log: true
                    new_dbid: true
                    masked: true
                    listener_ids:
                      - listener-123
                      - listener-456
                    custom_env_vars:
                      MY_ENV_VAR1: $ORACLE_HOME
                      MY_ENV_VAR2: $CRS_HOME/after
                    custom_env_files:
                      - /export/home/env_file_1
                      - /export/home/env_file_2
                    oracle_rac_custom_env_files:
                      - node_id: ORACLE_CLUSTER_NODE-1
                        path_parameters: /export/home/env_file_1
                    oracle_rac_custom_env_vars:
                      - node_id: ORACLE_CLUSTER_NODE-1
                        name: MY_ENV_VAR1
                        value: $CRS_HOME/after
                    parentTdeKeystorePath: /foo/bar/tde
                    parent_tde_keystore_password: password
                    tde_exported_key_file_secret: secret
                    tde_key_identifier: tde-indentifier
                    target_vcdb_tde_keystore_path: /foo/cdb/tde
                    cdb_tde_keystore_password: cdb-password
                    vcdb_tde_key_identifier: vcdb-identifier
                    appdata_source_params:
                      param: value
                    additional_mount_points:
                      - shared_path: /
                        mount_path: /work
                        environment_id: environment-123
                    appdata_config_params:
                      option: value
                    config_params:
                      processes: 150
                    privileged_os_user: user-1
                    postgres_port: 65536
                    config_settings_stg:
                      - property_name:
                        value: oYA@5GZTCxW*bO!8gqH*Xa_Z-xN.mZWu40u7xf0-
                        comment_property: true
                    vcdb_restart: true
                    mssql_failover_drive_letter: s
                tags:
                  - key: key1
                    value: configValue1
                make_current_account_owner: True
    AppDataDSourceBody:
      description: The parameters to link an AppData dSource.
      required: true
      content:
        application/json:
          schema:
            x-body-name: linkASEDSource
            $ref: "#/components/schemas/AppDataDSourceLinkSourceParameters"
          examples:
            appdata_dsource_minimum_request:
              description: The above request example is intended for a Postgres AppData linking
              summary: Minimal Request (Postgres)
              value:
                source_id: 1-APPDATA_STAGED_SOURCE_CONFIG-1
                group_id: 1-GROUP-1
                link_type: AppDataStaged
                staging_environment: 1-ENVIRONMENT-1
                staging_mount_base: /mnt/staging
                environment_user: 1-ENVIRONMENT_USER-1
                parameters:
                  postgresPort: 5432,
                sync_parameters:
                  resync: true
    MSSQLLinkDSourceBody:
      description: The parameters to link an MSSql dSource.
      required: true
      content:
        application/json:
          schema:
            x-body-name: linkMSSqlDSource
            $ref: "#/components/schemas/MSSQLDSourceLinkSourceParameters"
          examples:
            mssql_dsource_minimum_request:
              description: The above request example is intended for an MSSql Database linking without including optional properties
              summary: Minimal Request (Without Optionals)
              value:
                source_id: 1-SOURCE_CONFIG-1
                ppt_repository: MSSQL_INSTANCE-1
                ppt_host_user: HOST_USER-1
                mssql_user_environment_reference: HOST_USER-1
            mssql_dsource_full_request:
              description: The above request example is intended for an MSSql Database linking with all possible parameters.
              summary: Full Request
              value:
                name: DSOURCE-EXAMPLE-1
                source_id: 1-SOURCE_CONFIG-1
                group_id: 1-GROUP-1
                encryption_key: KEY-1
                sync_strategy: latest_backup
                mssql_backup_uuid: UUID-1
                compression_enabled: false
                availability_group_backup_policy: primary
                source_host_user: SOURCE_HOST_USER-1
                ppt_repository: PPT_REPOSITORY-1
                ppt_host_user: PPT_HOST_USER-1
                staging_pre_script: staging_pre_script
                staging_post_script: staging_post_script
                sync_strategy_managed_type: external
                mssql_user_environment_reference: ENVIRONMENT-USER-1
                mssql_user_domain_username: DOMAIN-USER-1
                mssql_user_domain_password: DOMAIN-PASSWORD-1
                mssql_user_domain_vault: DOMAIN-VAULT-1
                mssql_user_domain_hashicorp_vault_engine: kv
                mssql_user_domain_hashicorp_vault_secret_path: mssql-env
                mssql_user_domain_hashicorp_vault_username_key: username
                mssql_user_domain_hashicorp_vault_secret_key: secret
                mssql_user_domain_azure_vault_name: azure_vault
                mssql_user_domain_azure_vault_username_key: username
                mssql_user_domain_azure_vault_secret_key: secret
                mssql_user_domain_cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                mssql_database_username: db-user
                mssql_database_password: password
                delphix_managed_backup_compression_enabled: false
                delphix_managed_backup_policy: primary
                external_managed_validate_sync_mode: TRANSACTION_LOG
                external_managed_shared_backup_locations:
                  - shared_backup_location/location1
                  - shared_backup_location/location2
                external_netbackup_config_master_name: master_name-1
                external_netbackup_config_source_client_name: netbackup_config_source_client_name-1
                external_netbackup_config_params: netbackup_config_params-1
                external_netbackup_config_templates: external_netbackup_config_template-1
                external_commserve_host_name: commserve_host_name-1
                external_commvault_config_source_client_name: commvault_config_source_client_name-1
                external_commvault_config_staging_client_name: commvault_config_staging_client_name-1
                external_commvault_config_params: commvault_config_params-1
                external_commvault_config_templates: commvault_config_template-1
                tags:
                  - key: key-1
                    value: value-1
                ops_pre_sync:
                  - name: pre-sync-op1
                    command: echo 'pre-sync'
                    shell: ps
                    credentials_env_vars:
                      - base_var_name: base-var-1
                        password: password
                        vault: my-vault
                        hashicorp_vault_engine: kv
                        hashicorp_vault_secret_path: oracle-env
                        hashicorp_vault_username_key: username
                        hashicorp_vault_secret_key: secret
                        azure_vault_name: azure_vault
                        azure_vault_username_key: username
                        azure_vault_secret_key: secret
                        cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                ops_post_sync:
                  - name: post-sync-op
                    command: echo 'post-sync-op'
                    shell: ps
                    credentials_env_vars:
                      - base_var_name: base-var-1
                        password: password
                        vault: my-vault
                        hashicorp_vault_engine: kv
                        hashicorp_vault_secret_path: oracle-env
                        hashicorp_vault_username_key: username
                        hashicorp_vault_secret_key: secret
                        azure_vault_name: azure_vault
                        azure_vault_username_key: username
                        azure_vault_secret_key: secret
                        cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
    MSSQLLinkStagingPushDSourceBody:
      description: The parameters to link an MSSql dSource.
      required: true
      content:
        application/json:
          schema:
            x-body-name: linkMSSqlStagingPushDSource
            $ref: "#/components/schemas/MSSQLDSourceStagingPushLinkSourceParameters"
          examples:
            mssql_dsource_staging_push_minimum_request:
              description: The above request example is intended for an MSSql staging push Database linking without including optional properties
              summary: Minimal Request (Without Optionals)
              value:
                name: DSOURCE-1
                engine_id: 1
                ppt_repository: PPT_REPOSITORY-1
                ppt_host_user: PPT_HOST_USER-1
                staging_database_name: staging_database-1
            mssql_dsource_staging_push_full_request:
              description: The above request example is intended for an MSSql staging push Database linking with all optional properties
              summary: Full Request
              value:
                name: DSOURCE-1
                group_id: 1-GROUP-1
                description: MSSQL DSource description
                log_sync_enabled: false
                make_current_account_owner: true
                engine_id: 1
                encryption_key: KEY-1
                ppt_repository: PPT_REPOSITORY-1
                ppt_host_user: PPT_HOST_USER-1
                staging_pre_script: staging_pre_script
                staging_post_script: staging_post_script
                staging_database_name: staging_database-1
                tags:
                  - key: key-1
                    value: value-1
                ops_pre_sync:
                  - name: pre-sync-op
                    command: echo 'pre-sync'
                    shell: ps
                    credentials_env_vars:
                      - base_var_name: base-var-1
                        password: password
                        vault: my-vault
                        hashicorp_vault_engine: kv
                        hashicorp_vault_secret_path: oracle-env
                        hashicorp_vault_username_key: username
                        hashicorp_vault_secret_key: secret
                        azure_vault_name: azure_vault
                        azure_vault_username_key: username
                        azure_vault_secret_key: secret
                        cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                ops_post_sync:
                  - name: post-sync-op
                    command: echo 'post-sync-op'
                    shell: ps
                    credentials_env_vars:
                      - base_var_name: base-var-1
                        password: password
                        vault: my-vault
                        hashicorp_vault_engine: kv
                        hashicorp_vault_secret_path: oracle-env
                        hashicorp_vault_username_key: username
                        hashicorp_vault_secret_key: secret
                        azure_vault_name: azure_vault
                        azure_vault_username_key: username
                        azure_vault_secret_key: secret
                        cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test


    ASELinkDSourceBody:
      description: The parameters to link an ASE dSource.
      required: true
      content:
        application/json:
          schema:
            x-body-name: linkASEDSource
            $ref: "#/components/schemas/ASEDSourceLinkSourceParameters"
          examples:
            ase_dsource_minimum_request:
              description: The above request example is intended for an ASE Database without including optional properties
              summary: Minimal Request (Without Optionals)
              value:
                source_id: ASE_CONFIG-1
                db_user: db-user
                db_password: secret-password
                load_backup_path: /backup/path
            ase_dsource_full_request:
              description: The above request example is intended for an ASE Database linking with all possible parameters.
              summary: Full Request
              value:
                name: ASE-DSOURCE-NAME
                source_id: ASE_CONFIG-1
                group_id: GROUP-1
                description: This is a test description for ASE database
                log_sync_enabled: false
                external_file_path: /some/external/path
                make_current_account_owner: true
                mount_base: /mount/base
                load_backup_path: /backup/path
                backup_server_name: backup-server-name
                backup_host_user: USER-1
                backup_host: host.backup.com
                dump_credentials: secret
                source_host_user: source-user
                db_user: db-user
                db_password: secret-password
                db_vault: vault-name
                db_hashicorp_vault_engine: kv
                db_hashicorp_vault_secret_path: oracle-env
                db_hashicorp_vault_username_key: username
                db_hashicorp_vault_secret_key: secret
                db_azure_vault_name: azure_vault
                db_azure_vault_username_key: username
                db_azure_vault_secret_key: secret
                db_cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                staging_repository: ASE_INSTANCE-1
                staging_host_user: USER-2
                validated_sync_mode: ENABLED
                dump_history_file_enabled: false
                drop_and_recreate_devices: false
                sync_strategy: specific_backup
                ase_backup_files:
                  - backup/file/1
                  - backup/file/2
                tags:
                  - key: key-1
                    value: value-1
                ops_pre_sync:
                  - name: pre-sync-op1
                    command: echo 'pre-sync'
                    shell: bash
                    credentials_env_vars:
                      - base_var_name: base-var-1
                        password: password
                        vault: my-vault
                        hashicorp_vault_engine: kv
                        hashicorp_vault_secret_path: oracle-env
                        hashicorp_vault_username_key: username
                        hashicorp_vault_secret_key: secret
                        azure_vault_name: azure_vault
                        azure_vault_username_key: username
                        azure_vault_secret_key: secret
                        cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                ops_post_sync:
                  - name: post-sync-op
                    command: echo 'post-sync-op'
                    shell: bash
                    credentials_env_vars:
                      - base_var_name: base-var-1
                        password: password
                        vault: my-vault
                        hashicorp_vault_engine: kv
                        hashicorp_vault_secret_path: oracle-env
                        hashicorp_vault_username_key: username
                        hashicorp_vault_secret_key: secret
                        azure_vault_name: azure_vault
                        azure_vault_username_key: username
                        azure_vault_secret_key: secret
                        cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                pre_validated_sync:
                  - name: pre-validate-sync
                    command: echo 'pre-validate-sync'
                    shell: bash
                    credentials_env_vars:
                      - base_var_name: base-var
                        password: password
                        vault: my-vault
                        hashicorp_vault_engine: kv
                        hashicorp_vault_secret_path: oracle-env
                        hashicorp_vault_username_key: username
                        hashicorp_vault_secret_key: secret
                        azure_vault_name: azure_vault
                        azure_vault_username_key: username
                        azure_vault_secret_key: secret
                        cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                post_validated_sync:
                  - name: post-validate-sync
                    command: echo 'post-validate-sync'
                    shell: bash
                    credentials_env_vars:
                      - base_var_name: base-post-sync
                        password: password
                        vault: my-vault
                        hashicorp_vault_engine: kv
                        hashicorp_vault_secret_path: oracle-env
                        hashicorp_vault_username_key: username
                        hashicorp_vault_secret_key: secret
                        azure_vault_name: azure_vault
                        azure_vault_username_key: username
                        azure_vault_secret_key: secret
                        cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
    OracleLinkDSourceBody:
      description: The parameters to link an Oracle dSource.
      content:
        application/json:
          schema:
            x-body-name: linkOracleDSource
            $ref: "#/components/schemas/OracleDSourceLinkSourceParameters"
          examples:
            oracle_dsource_minimum_request:
              description: The above request example is intended for Oracle Database without including optional properties
              summary: Minimal Request (Without Optionals)
              value:
                source_id: 1-SOURCE_CONFIG-1
            oracle_single_tenant_dsource_request:
              description: |
                The above request example is intended for Oracle Database with all possible properties that can be set in request body.
              summary: Full Request
              value:
                name: DSOURCE-EXAMPLE-1
                source_id: 1-SOURCE_CONFIG-1
                group_id: 1-GROUP-1
                environment_user_id: USER-1
                description: Some description for dSource
                non_sys_username: non-sys-user (Single tenant only)
                non_sys_password: non-sys-password (Single tenant only)
                non_sys_vault: vault_name_or_reference (Single tenant only)
                non_sys_hashicorp_vault_engine: kv (Single tenant only)
                non_sys_hashicorp_vault_secret_path: oracle-env (Single tenant only)
                non_sys_hashicorp_vault_username_key: username (Single tenant only)
                non_sys_hashicorp_vault_secret_key: secret (Single tenant only)
                non_sys_azure_vault_name: azure_vault (Single tenant only)
                non_sys_azure_vault_username_key: username (Single tenant only)
                non_sys_azure_vault_secret_key: secret (Single tenant only)
                non_sys_cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test (Single tenant only)
                fallback_username: oracle-user
                fallback_password: oracle-password
                fallback_vault: my-vault
                fallback_hashicorp_vault_engine: kv
                fallback_hashicorp_vault_secret_path: oracle-env
                fallback_hashicorp_vault_username_key: username
                fallback_hashicorp_vault_secret_key: secret
                fallback_azure_vault_name: azure_vault
                fallback_azure_vault_username_key: username
                fallback_azure_vault_secret_key: secret
                fallback_cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                backup_level_enabled: true
                rman_channels: 2
                files_per_set: 5
                check_logical: false
                encrypted_linking_enabled: false
                compressed_linking_enabled: true
                bandwidth_limit: 0
                number_of_connections: 1
                diagnose_no_logging_faults: true
                pre_provisioning_enabled: false
                link_now: false
                force_full_backup: false
                double_sync: false
                skip_space_check: false
                do_not_resume: false
                files_for_full_backup:
                  - 0
                log_sync_mode: UNDEFINED
                log_sync_interval: 5
                log_sync_enabled: false
                external_file_path: /user/file/path
                make_current_account_owner: true
                tags:
                  - key: key-1
                    value: value-1
                ops_pre_sync:
                  - name: pre_sync_logs
                    command: echo 'pre_sync_logs'
                    shell: bash
                    credentials_env_vars:
                      - base_var_name: env_var_1
                        password: password
                        vault: my-vault
                        hashicorp_vault_engine: kv
                        hashicorp_vault_secret_path: oracle-env
                        hashicorp_vault_username_key: username
                        hashicorp_vault_secret_key: secret
                        azure_vault_name: azure_vault
                        azure_vault_username_key: username
                        azure_vault_secret_key: secret
                        cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                ops_pre_log_sync:
                  - name: pre_log_sync_logs
                    command: echo 'pre_log_sync_logs'
                    shell: bash
                    credentials_env_vars:
                      - base_var_name: env_var_1
                        password: password
                        vault: my-vault
                        hashicorp_vault_engine: kv
                        hashicorp_vault_secret_path: oracle-env
                        hashicorp_vault_username_key: username
                        hashicorp_vault_secret_key: secret
                        azure_vault_name: azure_vault
                        azure_vault_username_key: username
                        azure_vault_secret_key: secret
                        cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                ops_post_sync:
                  - name: post_sync_hook
                    command: echo 'post_sync_hook'
                    shell: bash
                    credentials_env_vars:
                      - base_var_name: env1
                        password: password
                        vault: my-vault
                        hashicorp_vault_engine: kv
                        hashicorp_vault_secret_path: oracle-env
                        hashicorp_vault_username_key: username
                        hashicorp_vault_secret_key: secret
                        azure_vault_name: azure_vault
                        azure_vault_username_key: username
                        azure_vault_secret_key: secret
                        cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
      required: true
    OracleLinkStagingPushDSourceBody:
      description: The parameters to link an Oracle dSource.
      content:
        application/json:
          schema:
            x-body-name: linkOracleStagingPushDSource
            $ref: "#/components/schemas/OracleStagingPushDSourceLinkSourceParameters"
          examples:
            oracle_dsource_staging_push_non_pdb_minimum_request:
              description: The above request example is intended for an Oracle staging push non PDB Database linking without including optional properties
              summary: Minimal Request Non PDB(Without Optionals)
              value:
                name: DSOURCE-1
                engine_id: 1
                container_type: NON_CDB
                environment_user_id: HOST_USER-1
                repository: ORACLE_REPO-1
                database_name: DB_NAME-1
                database_unique_name: DB_UN_NAME-1
                sid: SID-1
                mount_base: /mount1
            oracle_dsource_staging_push_non_pdb_full_request:
              description: The above request example is intended for a non pdb Oracle staging push Database linking with all optional properties
              summary: Full Request Non PDB
              value:
                name: DSOURCE-1
                engine_id: 1
                group_id: 1-GROUP-1
                description: Some description for dSource
                log_sync_enabled: false
                make_current_account_owner: true
                container_type: NON_CDB
                environment_user_id: HOST_USER-1
                repository: ORACLE_REPO-1
                database_name: DB_NAME-1
                database_unique_name: DB_UN_NAME-1
                sid: SID-1
                mount_base: /mount1
                custom_env_variables_pairs:
                  - var_name: env_var-1
                    var_value: env_value-1
                custom_env_variables_paths:
                  - /root/path1 propety1
                auto_staging_restart: false
                physical_standby: false
                validate_snapshot_in_readonly: false
                tags:
                  - key: key-1
                    value: value-1
                ops_pre_sync:
                  - name: pre_sync_logs
                    command: echo 'pre_sync_logs'
                    shell: bash
                    credentials_env_vars:
                      - base_var_name: env_var_1
                        password: password
                        vault: my-vault
                        hashicorp_vault_engine: kv
                        hashicorp_vault_secret_path: oracle-env
                        hashicorp_vault_username_key: username
                        hashicorp_vault_secret_key: secret
                        azure_vault_name: azure_vault
                        azure_vault_username_key: username
                        azure_vault_secret_key: secret
                        cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                ops_post_sync:
                  - name: post_sync_hook
                    command: echo 'post_sync_hook'
                    shell: bash
                    credentials_env_vars:
                      - base_var_name: env1
                        password: password
                        vault: my-vault
                        hashicorp_vault_engine: kv
                        hashicorp_vault_secret_path: oracle-env
                        hashicorp_vault_username_key: username
                        hashicorp_vault_secret_key: secret
                        azure_vault_name: azure_vault
                        azure_vault_username_key: username
                        azure_vault_secret_key: secret
                        cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
            oracle_dsource_staging_push_pdb_minimum_request:
              description: The above request example is intended for an Oracle staging push non PDB Database linking without including optional properties
              summary: Minimal Request PDB(Without Optionals)
              value:
                name: DSOURCE-1
                engine_id: 1
                database_name: DB_NAME-1
                staging_container_database_reference: CDB-1
            oracle_dsource_staging_push_pdb_full_request:
              description: The above request example is intended for a pdb Oracle staging push Database linking with all optional properties
              summary: Full Request PDB
              value:
                name: DSOURCE-1
                engine_id: 1
                group_id: 1-GROUP-1
                description: Some description for dSource
                log_sync_enabled: false
                make_current_account_owner: true
                database_name: PDB_NAME-1
                staging_container_database_reference: CDB_1
                custom_env_variables_pairs:
                    - var_name: env_var-1
                      var_value: env_value-1
                custom_env_variables_paths:
                  _ /root/path1 propety1
                auto_staging_restart: false
                tags:
                  - key: key-1
                    value: value-1
                ops_pre_sync:
                  - name: pre_sync_logs
                    command: echo 'pre_sync_logs'
                    shell: bash
                    credentials_env_vars:
                      - base_var_name: env_var_1
                        password: password
                        vault: my-vault
                        hashicorp_vault_engine: kv
                        hashicorp_vault_secret_path: oracle-env
                        hashicorp_vault_username_key: username
                        hashicorp_vault_secret_key: secret
                        azure_vault_name: azure_vault
                        azure_vault_username_key: username
                        azure_vault_secret_key: secret
                        cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                ops_post_sync:
                  - name: post_sync_hook
                    command: echo 'post_sync_hook'
                    shell: bash
                    credentials_env_vars:
                      - base_var_name: env1
                        password: password
                        vault: my-vault
                        hashicorp_vault_engine: kv
                        hashicorp_vault_secret_path: oracle-env
                        hashicorp_vault_username_key: username
                        hashicorp_vault_secret_key: secret
                        azure_vault_name: azure_vault
                        azure_vault_username_key: username
                        azure_vault_secret_key: secret
                        cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
      required: true
    UploadMaskingFile:
      x-internal: true
      description: The parameters to upload a file for masking.
      content:
        multipart/form-data:
          schema:
            x-body-name: masking_file
            $ref: '#/components/schemas/MaskingFileUploadParameters'
    ProvisionBySnapshot:
      description: The parameters to provision a VDB.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProvisionVDBBySnapshotParameters"
          examples:
            oracleminimum:
              description: |
                The above request example is intended for Oracle Database without including optional properties
              summary: Oracle - Without Optionals
              value:
                auto_select_repository: true
                source_data_id: dsource-name
                tags:
                  - key: key-1
                    value: value-1
                  - key: key-2
                    value: value-2
            oracle_single_tenant:
              description: |
                The above request example is intended for Oracle Single Tenant Database with all possible properties that can be set in request body.
              summary: Oracle - Single Tenant Request
              value:
                source_data_id: dsource-name
                engine_id: "1"
                target_group_id: group-Name
                name: vdb_to_be_created
                database_name: dbname_to_be_created
                os_username: os-user-x
                os_password: os-password-x
                environment_id: oracle-env-name
                environment_user_id: environment_user_name
                auto_select_repository: true
                cluster_node_ids: [ "ORACLE_CLUSTER_NODE-1" ]
                pre_refresh:
                  - name: pre_refresh_command
                    command: echo "testing pre-refresh"
                    shell: bash
                post_refresh:
                  - name: post_refresh_command
                    command: echo "testing post_refresh"
                    shell: bash
                pre_rollback:
                  - name: pre_rollback_command
                    command: echo "testing pre_rollback"
                    shell: bash
                post_rollback:
                  - name: post_rollback_command
                    command: echo "testing post_rollback"
                    shell: bash
                configure_clone:
                  - name: configure_clone_command
                    command: echo "testing configure_clone"
                    shell: bash
                pre_snapshot:
                  - name: pre_snapshot_command
                    command: echo "testing pre_snapshot"
                    shell: bash
                post_snapshot:
                  - name: post_snapshot_command
                    command: echo "testing post_snapshot"
                    shell: bash
                pre_start:
                  - name: pre_start_command
                    command: echo "testing pre_start"
                    shell: bash
                post_start:
                  - name: post_start_command
                    command: echo "testing post_start"
                    shell: bash
                pre_stop:
                  - name: pre_stop_command
                    command: echo "testing pre_stop"
                    shell: bash
                post_stop:
                  - name: post_stop_command
                    command: echo "testing post_stop"
                    shell: bash
                vdb_restart: true
                template_id: template-1
                auxiliary_template_id: aux-template-1
                file_mapping_rules: |-
                  /datafile/dbdhcp3/oradata/dbdhcp3:/data
                  /u03/app/ora11202/product/11.2.0/dbhome_1/dbs/dbv_R2V4.dbf:/data/dbv_R2V4.dbf
                oracle_instance_name: dbdhcp2
                unique_name: dbdhcp2
                mount_point: /var/mnt
                open_reset_logs: true
                snapshot_policy_id: test_snapshot_policy
                retention_policy_id: test_retention_policy
                online_log_size: 4
                online_log_groups: 2
                archive_log: true
                new_dbid: true
                custom_env_vars:
                  MY_ENV_VAR1: $ORACLE_HOME
                  MY_ENV_VAR2: $CRS_HOME/after
                custom_env_files:
                  - /export/home/env_file_1
                snapshot_id: 1-oracle-snapshot-id
                tags:
                  - key: key-1
                    value: value-1
                  - key: key-2
                    value: value-2
            oracle_multitenant_db_with_existing_cdb:
              description: |
                The above request example is intended for Oracle Multitenant Database with existing CDB.
              summary: Oracle - Multitenant with existing CDB
              value:
                source_data_id: dsource-name
                engine_id: "1"
                target_group_id: group-Name
                name: vdb_to_be_created
                database_name: dbname_to_be_created
                cdb_id: ORACLE_SINGLE_CONFIG-376
                cluster_node_ids: [ "ORACLE_CLUSTER_NODE-1" ]
                os_username: os-user-x
                os_password: os-password-x
                environment_user_id: environment_user_name
                pre_refresh:
                  - name: pre_refresh_command
                    command: echo "testing pre-refresh"
                    shell: bash
                post_refresh:
                  - name: post_refresh_command
                    command: echo "testing post_refresh"
                    shell: bash
                pre_rollback:
                  - name: pre_rollback_command
                    command: echo "testing pre_rollback"
                    shell: bash
                post_rollback:
                  - name: post_rollback_command
                    command: echo "testing post_rollback"
                    shell: bash
                configure_clone:
                  - name: configure_clone_command
                    command: echo "testing configure_clone"
                    shell: bash
                pre_snapshot:
                  - name: pre_snapshot_command
                    command: echo "testing pre_snapshot"
                    shell: bash
                post_snapshot:
                  - name: post_snapshot_command
                    command: echo "testing post_snapshot"
                    shell: bash
                pre_start:
                  - name: pre_start_command
                    command: echo "testing pre_start"
                    shell: bash
                post_start:
                  - name: post_start_command
                    command: echo "testing post_start"
                    shell: bash
                pre_stop:
                  - name: pre_stop_command
                    command: echo "testing pre_stop"
                    shell: bash
                post_stop:
                  - name: post_stop_command
                    command: echo "testing post_stop"
                    shell: bash
                vdb_restart: true
                file_mapping_rules: |-
                  /datafile/dbdhcp3/oradata/dbdhcp3:/data
                  /u03/app/ora11202/product/11.2.0/dbhome_1/dbs/dbv_R2V4.dbf:/data/dbv_R2V4.dbf
                mount_point: /var/mnt
                open_reset_logs: true
                snapshot_policy_id: test_snapshot_policy
                retention_policy_id: test_retention_policy
                online_log_size: 4
                online_log_groups: 2
                archive_log: true
                new_dbid: true
                custom_env_vars:
                  MY_ENV_VAR1: $ORACLE_HOME
                  MY_ENV_VAR2: $CRS_HOME/after
                custom_env_files:
                  - /export/home/env_file_1
                snapshot_id: 1-oracle-snapshot-id
                tags:
                  - key: key-1
                    value: value-1
                  - key: key-2
                    value: value-2
            oracle_multitenant_db_with_new_vcdb:
              description: |
                The above request example is intended for Oracle Multitenant Database with new vCDB.
              summary: Oracle - Multitenant with new vCDB
              value:
                source_data_id: dsource-name
                engine_id: "1"
                target_group_id: group-Name
                name: vdb_to_be_created
                database_name: dbname_to_be_created
                os_username: os-user-x
                os_password: os-password-x
                environment_id: oracle-env-name
                environment_user_id: environment_user_name
                auto_select_repository: true
                cluster_node_ids: [ "ORACLE_CLUSTER_NODE-1" ]
                pre_refresh:
                  - name: pre_refresh_command
                    command: echo "testing pre-refresh"
                    shell: bash
                post_refresh:
                  - name: post_refresh_command
                    command: echo "testing post_refresh"
                    shell: bash
                pre_rollback:
                  - name: pre_rollback_command
                    command: echo "testing pre_rollback"
                    shell: bash
                post_rollback:
                  - name: post_rollback_command
                    command: echo "testing post_rollback"
                    shell: bash
                configure_clone:
                  - name: configure_clone_command
                    command: echo "testing configure_clone"
                    shell: bash
                pre_snapshot:
                  - name: pre_snapshot_command
                    command: echo "testing pre_snapshot"
                    shell: bash
                post_snapshot:
                  - name: post_snapshot_command
                    command: echo "testing post_snapshot"
                    shell: bash
                pre_start:
                  - name: pre_start_command
                    command: echo "testing pre_start"
                    shell: bash
                post_start:
                  - name: post_start_command
                    command: echo "testing post_start"
                    shell: bash
                pre_stop:
                  - name: pre_stop_command
                    command: echo "testing pre_stop"
                    shell: bash
                post_stop:
                  - name: post_stop_command
                    command: echo "testing post_stop"
                    shell: bash
                vdb_restart: true
                template_id: template-123
                vcdb_name: VCCD_6QQ
                vcdb_database_name: VCCD_6QQ
                file_mapping_rules: |-
                  /datafile/dbdhcp3/oradata/dbdhcp3:/data
                  /u03/app/ora11202/product/11.2.0/dbhome_1/dbs/dbv_R2V4.dbf:/data/dbv_R2V4.dbf
                oracle_instance_name: dbdhcp2
                unique_name: dbdhcp2
                mount_point: /var/mnt
                open_reset_logs: true
                snapshot_policy_id: test_snapshot_policy
                retention_policy_id: test_retention_policy
                online_log_size: 4
                online_log_groups: 2
                archive_log: true
                new_dbid: true
                custom_env_vars:
                  MY_ENV_VAR1: $ORACLE_HOME
                  MY_ENV_VAR2: $CRS_HOME/after
                custom_env_files:
                  - /export/home/env_file_1
                snapshot_id: 1-oracle-snapshot-id
                tags:
                  - key: key-1
                    value: value-1
                  - key: key-2
                    value: value-2
            mssql:
              description: |
                The above request example is intended for MS-SQL Database
              summary:
                MS-SQL Database
              value:
                source_data_id: dsource-name
                engine_id: "1"
                target_group_id: group-Name
                name: vdb_to_be_created
                database_name: dbname_to_be_created
                environment_id: mssql-env-name
                environment_user_id: environment-user-123
                auto_select_repository: true
                pre_refresh:
                  - name: pre_refresh_command
                    command: echo "testing pre-refresh"
                    shell: ps
                post_refresh:
                  - name: post_refresh_command
                    command: echo "testing post_refresh"
                    shell: ps
                pre_rollback:
                  - name: pre_rollback_command
                    command: echo "testing pre_rollback"
                    shell: ps
                post_rollback:
                  - name: post_rollback_command
                    command: echo "testing post_rollback"
                    shell: ps
                configure_clone:
                  - name: configure_clone_command
                    command: echo "testing configure_clone"
                    shell: ps
                pre_snapshot:
                  - name: pre_snapshot_command
                    command: echo "testing pre_snapshot"
                    shell: ps
                post_snapshot:
                  - name: post_snapshot_command
                    command: echo "testing post_snapshot"
                    shell: ps
                pre_start:
                  - name: pre_start_command
                    command: echo "testing pre_start"
                    shell: ps
                post_start:
                  - name: post_start_command
                    command: echo "testing post_start"
                    shell: ps
                pre_stop:
                  - name: pre_stop_command
                    command: echo "testing pre_stop"
                    shell: ps
                post_stop:
                  - name: post_stop_command
                    command: echo "testing post_stop"
                    shell: ps
                vdb_restart: true
                snapshot_policy_id: test_snapshot_policy
                retention_policy_id: test_retention_policy
                recovery_model: FULL
                pre_script: C:\Program Files\Delphix\scripts\myscript.ps1
                post_script: C:\Program Files\Delphix\scripts\myscript.ps1
                cdc_on_provision: true
                snapshot_id: 1-mssql-snapshot-id-1
                tags:
                  - key: key-1
                    value: value-1
                  - key: key-2
                    value: value-2
            ase:
              description: |
                The above request example is intended for Sybase Database
              summary:
                ASE Database
              value:
                source_data_id: dsource-name
                engine_id: "1"
                target_group_id: group-Name
                name: vdb_to_be_created
                database_name: dbname_to_be_created
                truncate_log_on_checkpoint: true
                environment_id: ase_env_name
                environment_user_id: environment_user_name
                auto_select_repository: true
                pre_refresh:
                  - name: pre_refresh_command
                    command: echo "testing pre-refresh"
                    shell: bash
                post_refresh:
                  - name: post_refresh_command
                    command: echo "testing post_refresh"
                    shell: bash
                pre_rollback:
                  - name: pre_rollback_command
                    command: echo "testing pre_rollback"
                    shell: bash
                post_rollback:
                  - name: post_rollback_command
                    command: echo "testing post_rollback"
                    shell: bash
                configure_clone:
                  - name: configure_clone_command
                    command: echo "testing configure_clone"
                    shell: bash
                pre_snapshot:
                  - name: pre_snapshot_command
                    command: echo "testing pre_snapshot"
                    shell: bash
                post_snapshot:
                  - name: post_snapshot_command
                    command: echo "testing post_snapshot"
                    shell: bash
                pre_start:
                  - name: pre_start_command
                    command: echo "testing pre_start"
                    shell: bash
                post_start:
                  - name: post_start_command
                    command: echo "testing post_start"
                    shell: bash
                pre_stop:
                  - name: pre_stop_command
                    command: echo "testing pre_stop"
                    shell: bash
                post_stop:
                  - name: post_stop_command
                    command: echo "testing post_stop"
                    shell: bash
                vdb_restart: true
                mount_point: /var/mnt
                snapshot_policy_id: test_snapshot_policy
                retention_policy_id: test_retention_policy
                snapshot_id: snapshot-id
                tags:
                  - key: key-1
                    value: value-1
                  - key: key-2
                    value: value-2
      required: true
    DeleteScopeObjectTags:
      description: The parameters to delete scope objects tags
      content:
        application/json:
          schema:
            x-body-name: environment
            $ref: '#/components/schemas/DeleteScopeObjectTags'
          examples:
            delete_all_tags:
              description: Delete all object tags for given scope - No request body required
              summary: Delete all object tags
              value: {}
            delete_multiple_tags_by_key_value:
              description: Delete tags for given list of object tags with matching key and value
              summary: Delete multiple tags by key & value
              value:
                tags:
                  - key: key-1
                    value: value-1
                  - key: key-2
                    value: value-2
    DeleteObjects:
      description: The parameters to delete scope objects
      content:
        application/json:
          schema:
            x-body-name: deleteObjects
            $ref: '#/components/schemas/DeleteScopedObjectItem'
          examples:
            delete_all_objects:
              description: Delete all objects for given scope - No request body required
              summary: Delete all objects
              value: {}
            delete_multiple_objects_by_id_and_type:
              description: Delete objects for given list with matching object ID and type
              summary: Delete multiple objects by ID & type
              value:
                objects:
                  - object_type: VDB
                    object_id: 1-VDB-OBJECT-ID
                  - object_type: ACCOUNTS
                    object_id: '1'
    DeleteTags:
      description: The parameters to delete tags
      content:
        application/json:
          schema:
            x-body-name: environment
            $ref: '#/components/schemas/DeleteTag'
          examples:
            delete_all_tags:
              description: Delete all tags for given object - No request body required
              summary: Delete all tags
              value: {}
            delete_tags_by_key:
              description: Delete all tags for given object with matching key
              summary: Delete tags by key
              value:
                key: key-1
            delete_tags_by_key_value:
              description: Delete tag for given object with matching key and value
              summary: Delete a tag by key & value
              value:
                key: key-1
                value: value-1
            delete_multiple_tags_by_key_value:
              description: Delete tags for given list of tags with matching key and value
              summary: Delete multiple tags by key & value
              value:
                tags:
                  - key: key-1
                    value: value-1
                  - key: key-2
                    value: value-2
    CreateEnvironmentUserBody:
      description: The parameters to create an environment user.
      content:
        application/json:
          schema:
            x-body-name: environment
            $ref: '#/components/schemas/EnvironmentUserParams'
          examples:
            using_username_password:
              description: This example can be used for creating a user with username and password.
              summary: Using Username and Password
              value:
                username: username-1
                password: password-1
            using_hashicorp_vault:
              description: This example can be used for creating a user with HashiCorp vault.
              summary: Using HashiCorp Vault
              value:
                vault: "my-vault"
                vault_username: "my-vault-user"
                hashicorp_vault_engine: "kv"
                hashicorp_vault_secret_path: "oracle-env"
                hashicorp_vault_username_key: "username"
                hashicorp_vault_secret_key: "password"
            using_cyberark:
              description: This example can be used for creating a user with CyberArk vault.
              summary: Using CyberArk Vault
              value:
                vault: "my-vault"
                vault_username: "my-vault-user"
                cyberark_vault_query_string: "Safe=Test;Folder=Test;Object=Test"
            using_kerberos:
              description: This example can be used for creating a user with Kerberos Authentication.
              summary: Using Kerberos Authentication
              value:
                use_kerberos_authentication: true
            using_public_ssh:
              description: Allow the Delphix Engine to sign on to this host as this user, without specifying a password. Copy the key from engine interface and add it on a new line in the "~/.ssh/authorized_keys" file in the user's home directory on that host.
              summary: Using Username and Public Key
              value:
                use_engine_public_key: true
                username: "username"
    CreateAlgorithm:
      x-internal: true
      description: The parameters to create an algorithm.
      content:
        application/json:
          schema:
            x-body-name: algorithm
            $ref: '#/components/schemas/AlgorithmCreateParameters'
      required: true
    CreateAlgorithmRevision:
      x-internal: true
      description: The parameters to create an algorithm revision.
      content:
        application/json:
          schema:
            x-body-name: algorithm_revision
            $ref: '#/components/schemas/AlgorithmRevisionCreateParameters'
      required: true
    CreateBookmark:
      description: The parameters to create a bookmark.
      content:
        application/json:
          schema:
            x-body-name: bookmark
            $ref: '#/components/schemas/BookmarkCreateParameters'
      required: true
    CreateDatabaseTemplate:
      content:
        application/json:
          schema:
            x-body-name: database_template
            $ref: '#/components/schemas/DatabaseTemplateCreateParameters'
      description: The parameters to create a database template.
      required: true
    CreateReportingSchedule:
      description: The parameters to create a reporting schedule.
      content:
        application/json:
          schema:
            x-body-name: create_reporting_schedule_param
            $ref: "#/components/schemas/ReportingScheduleCreateParameters"
      required: true
    CreateEnvironment:
      description: The parameters to create an environment.
      content:
        application/json:
          schema:
            x-body-name: environment
            $ref: '#/components/schemas/EnvironmentCreateParameters'
          examples:
            unix_standalone:
              description: |
                The request example is intended for creating Unix standalone environments.
              summary: Unix - Standalone Environments
              value:
                name: oracle-environment
                engine_id: "1"
                os_name: UNIX
                hostname: db.host.com
                ssh_port: 22
                toolkit_path: /work
                username: username
                password: password
                vault: my-vault
                hashicorp_vault_engine: kv
                hashicorp_vault_secret_path: oracle-env
                hashicorp_vault_username_key: username
                hashicorp_vault_secret_key: password
                cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                use_kerberos_authentication: true
                use_engine_public_key: true
                nfs_addresses: [ "192.168.10.2" ]
                ase_db_username: user-123
                ase_db_password: test
                ase_db_vault: my-vault
                ase_db_hashicorp_vault_engine: kv
                ase_db_hashicorp_vault_secret_path: ase-env
                ase_db_hashicorp_vault_username_key: username
                ase_db_hashicorp_vault_secret_key: password
                ase_db_cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                ase_db_use_kerberos_authentication: true
                java_home: /Library/Java/JavaVirtualMachines/jdk/Contents/Home
                dsp_keystore_path: /tmp/keystore.keystore
                dsp_keystore_password: temp123
                dsp_keystore_alias: oracle-env
                dsp_truststore_path: /tmp/truststore.keystore
                dsp_truststore_password: truststore123
                description: Unix Oracle source host
                tags:
                  - key: key-1
                    value: value-1
                  - key: key-2
                    value: value-2
            windows_standalone_target:
              description: |
                The request example is intended for creating Windows standalone target environments.
              summary: Windows - Standalone Target Environments
              value:
                name: win-target
                engine_id: "1"
                os_name: WINDOWS
                hostname: db.host.com
                connector_port: 9100
                connector_authentication_key: secret
                username: username
                password: password
                vault: my-vault
                hashicorp_vault_engine: kv
                hashicorp_vault_secret_path: oracle-env
                hashicorp_vault_username_key: username
                hashicorp_vault_secret_key: password
                cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                java_home: /Library/Java/JavaVirtualMachines/jdk/Contents/Home
                dsp_keystore_path: /tmp/keystore.keystore
                dsp_keystore_password: temp123
                dsp_keystore_alias: target-env
                dsp_truststore_path: /tmp/truststore.keystore
                dsp_truststore_password: truststore123
                description: Windows MSSql target host
                tags:
                  - key: key-1
                    value: value-1
                  - key: key-2
                    value: value-2
            windows_standalone_source:
              description: |
                The request example is intended for creating Windows standalone source environments.
              summary: Windows - Standalone Source Environments
              value:
                name: win-source
                engine_id: "1"
                os_name: WINDOWS
                hostname: db.host.com
                staging_environment: 1-WINDOWS_HOST-1
                username: username
                password: password
                vault: my-vault
                hashicorp_vault_engine: kv
                hashicorp_vault_secret_path: oracle-env
                hashicorp_vault_username_key: username
                hashicorp_vault_secret_key: password
                cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                description: Windows MSSql source host
                tags:
                  - key: key-1
                    value: value-1
                  - key: key-2
                    value: value-2
            unix_cluster:
              description: |
                The request example is intended for creating Unix cluster environments.
              summary: Unix - Cluster Environments
              value:
                name: oracle-rac
                engine_id: "1"
                os_name: UNIX
                is_cluster: true
                cluster_home: /u01/app/19.0.0.0/grid
                hostname: db.host.com
                ssh_port: 22
                toolkit_path: /work
                username: username
                password: password
                vault: my-vault
                hashicorp_vault_engine: kv
                hashicorp_vault_secret_path: oracle-env
                hashicorp_vault_username_key: username
                hashicorp_vault_secret_key: password
                cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                use_kerberos_authentication: true
                use_engine_public_key: true
                nfs_addresses: [ "192.168.10.2" ]
                java_home: /Library/Java/JavaVirtualMachines/jdk/Contents/Home
                dsp_keystore_path: /tmp/keystore.keystore
                dsp_keystore_password: temp123
                dsp_keystore_alias: oracle-rac
                dsp_truststore_path: /tmp/truststore.keystore
                dsp_truststore_password: truststore123
                description: Unix Oracle cluster host
                tags:
                  - key: key-1
                    value: value-1
                  - key: key-2
                    value: value-2
            windows_cluster_source:
              description: |
                The request example is intended for creating Windows source cluster environments.
              summary: Windows - Source Cluster Environments
              value:
                name: win-cluster
                engine_id: "1"
                os_name: WINDOWS
                is_cluster: true
                hostname: db.host.com
                staging_environment: 1-WINDOWS_HOST-1
                username: username
                password: password
                vault: my-vault
                hashicorp_vault_engine: kv
                hashicorp_vault_secret_path: oracle-env
                hashicorp_vault_username_key: username
                hashicorp_vault_secret_key: password
                cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                is_target: false
                description: Windows MSSql source cluster environment
                tags:
                  - key: key-1
                    value: value-1
                  - key: key-2
                    value: value-2
            windows_cluster_target:
              description: |
                The request example is intended for creating Windows target cluster environments.
              summary: Windows - Target Cluster Environments
              value:
                name: win-cluster
                engine_id: "1"
                os_name: WINDOWS
                is_cluster: true
                hostname: db.host.com
                staging_environment: 1-WINDOWS_HOST-1
                username: username
                password: password
                vault: my-vault
                hashicorp_vault_engine: kv
                hashicorp_vault_secret_path: oracle-env
                hashicorp_vault_username_key: username
                hashicorp_vault_secret_key: password
                cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                is_target: true
                description: Windows MSSql target cluster environment
                tags:
                  - key: key-1
                    value: value-1
                  - key: key-2
                    value: value-2
      required: true
    SearchBody:
      x-skip-codegen-next-attr: true
      description: |
        A request body containing a filter expression. This enables searching
        for items matching arbitrarily complex conditions. The list of
        attributes which can be used in filter expressions is available
        in the x-filterable vendor extension.

        # Filter Expression Overview
        **Note: All keywords are case-insensitive**

        ## Comparison Operators
        | Operator | Description | Example |
        | --- | --- | --- |
        | CONTAINS | Substring or membership testing for string and list attributes respectively. | field3 CONTAINS 'foobar', field4 CONTAINS TRUE  |
        | IN | Tests if field is a member of a list literal. List can contain a maximum of 100 values | field2 IN ['Goku', 'Vegeta'] |
        | GE | Tests if a field is greater than or equal to a literal value | field1 GE 1.2e-2 |
        | GT | Tests if a field is greater than a literal value | field1 GT 1.2e-2 |
        | LE | Tests if a field is less than or equal to a literal value | field1 LE 9000 |
        | LT | Tests if a field is less than a literal value | field1 LT 9.02 |
        | NE | Tests if a field is not equal to a literal value | field1 NE 42 |
        | EQ | Tests if a field is equal to a literal value | field1 EQ 42 |

        ## Search Operator
        The SEARCH operator filters for items which have any filterable
        attribute that contains the input string as a substring, comparison
        is done case-insensitively. This is not restricted to attributes with
        string values. Specifically `SEARCH '12'` would match an item with an
        attribute with an integer value of `123`.

        ## Logical Operators
        Ordered by precedence.
        | Operator | Description | Example |
        | --- | --- | --- |
        | NOT | Logical NOT (Right associative) | NOT field1 LE 9000 |
        | AND | Logical AND (Left Associative) | field1 GT 9000 AND field2 EQ 'Goku' |
        | OR | Logical OR (Left Associative) | field1 GT 9000 OR field2 EQ 'Goku' |

        ## Grouping
        Parenthesis `()` can be used to override operator precedence.

        For example:
        NOT (field1 LT 1234 AND field2 CONTAINS 'foo')

        ## Literal Values
        | Literal      | Description | Examples |
        | --- | --- | --- |
        | Nil | Represents the absence of a value | nil, Nil, nIl, NIL |
        | Boolean | true/false boolean | true, false, True, False, TRUE, FALSE |
        | Number | Signed integer and floating point numbers. Also supports scientific notation. | 0, 1, -1, 1.2, 0.35, 1.2e-2, -1.2e+2 |
        | String | Single or double quoted | "foo", "bar", "foo bar", 'foo', 'bar', 'foo bar' |
        | Datetime | Formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) | 2018-04-27T18:39:26.397237+00:00 |
        | List | Comma-separated literals wrapped in square brackets | [0], [0, 1], ['foo', "bar"] |

        ## Limitations
        - A maximum of 8 unique identifiers may be used inside a filter expression.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SearchBody"
          examples:
            nested:
              description: |
                An example of a nested Object comparison testing that at least one repository has a
                version which is equal to 19.0.0.
              summary: Nested Object Comparison
              value:
                filter_expression: "repositories CONTAINS {version eq '19.0.0'}"
            relative:
              description: |
                An example of a relative comparison testing that field1 has a
                value which is less than 123.
              summary: Relative comparison
              value:
                filter_expression: "field1 LE 123"
            nil:
              description: |
                An example of using nil to test for the absence of a value for field2.
              summary:
                Absence of an attribute value
              value:
                filter_expression: "field2 EQ NIL"
            non-nil:
              description: |
                An example of using nil to test for the existence of a value for field2.
              summary:
                Existence of an attribute value
              value:
                filter_expression: "field2 NE NIL"
            contains:
              description: |
                An example of using the 'CONTAINS' operator to check if
                field2 contains the string 'foo'. If field2 is string valued
                then this is checking if 'foo' is a substring of field2. If
                field2 is a list of strings then this is checking if 'foo'
                is a member of the list.
              summary:
                Use of the CONTAINS operator
              value:
                filter_expression: "field2 CONTAINS 'foo'"
            in:
              description: |
                An example of using the 'IN' operator to check if field1
                is an element of a list literal.
              summary:
                Use of the IN operator
              value:
                filter_expression: "field1 IN [1, 2, 3]"
            search:
              description: |
                An example of using the 'SEARCH' operator to retrieve all elements
                for which 'foo' is a substring of a filterable attribute.
              summary:
                Use of the SEARCH operator
              value:
                filter_expression: "SEARCH 'foo'"
            parenthesis:
              description: |
                An example of parenthesis being used to group operators & override
                operator precedence.
              summary:
                Overriding operator precedence
              value:
                filter_expression: "field1 LT 1234 AND (field2 CONTAINS 'foo' OR field3 CONTAINS 'bar')"
    UpdateEnvironment:
      description: the parameters to update an environment
      content:
        application/json:
          schema:
            x-body-name: environment
            $ref: "#/components/schemas/EnvironmentUpdateParameters"
          examples:
            unix_standalone:
              description: |
                The request example is intended for updating Unix standalone environments.
              summary: Unix - Standalone Environments
              value:
                name: oracle-environment
                ase_db_username: user-123
                ase_db_password: test
                ase_db_vault: my-vault
                ase_db_hashicorp_vault_engine: kv
                ase_db_hashicorp_vault_secret_path: ase-env
                ase_db_hashicorp_vault_username_key: username
                ase_db_hashicorp_vault_secret_key: password
                ase_db_cyberark_vault_query_string: Safe=Test;Folder=Test;Object=Test
                ase_db_use_kerberos_authentication: true
                description: Unix Oracle source host
            windows_standalone_target:
              description: |
                The request example is intended for updating Windows standalone target environments.
              summary: Windows - Standalone Target Environments
              value:
                name: win-target
                description: Windows MSSql target host
            windows_standalone_source:
              description: |
                The request example is intended for updating Windows standalone source environments.
              summary: Windows - Standalone Source Environments
              value:
                name: win-source
                staging_environment: 1-WINDOWS_HOST-1
                description: Windows MSSql source host
            unix_cluster:
              description: |
                The request example is intended for updating Unix cluster environments.
              summary: Unix - Cluster Environments
              value:
                name: rac-environment
                cluster_home: /u01/app/19.0.0.0/grid
                cluster_node_address: db1.host.com
                description: Unix rac host
            windows_cluster:
              description: |
                The request example is intended for updating Windows cluster environments.
              summary: Windows - Cluster Environments
              value:
                name: mssql-cluster
                cluster_address: db-cluster.host.com
                cluster_node_address: db1.host.com
                staging_environment: 1-WINDOWS_HOST-1
                description: Windows mssql host
    UpdateHost:
      description: the parameters to update a host.
      content:
        application/json:
          schema:
            x-body-name: host
            $ref: "#/components/schemas/HostUpdateParameters"
          examples:
            unix_standalone:
              description: |
                The request example is intended for updating Unix standalone hosts.
              summary: Unix - Standalone Hosts
              value:
                hostname: host.company.co
                java_home: /Library/Java/JavaVirtualMachines/jdk/Contents/Home
                dsp_keystore_path: /tmp/keystore.keystore
                dsp_keystore_password: temp123
                dsp_keystore_alias: oracle-env
                dsp_truststore_path: /tmp/truststore.keystore
                dsp_truststore_password: truststore123
                oracle_jdbc_keystore_password: secret-pass
                oracle_tde_keystores_root_path: /keystore/root/path
                ssh_verification_strategy:
                  name: ACCEPT_ALWAYS
            windows_standalone_target:
              description: |
                The request example is intended for updating Windows hosts.
              summary: Windows - Standalone Hosts
              value:
                hostname: host.company.co
                connector_port: 9100
                java_home: c:\Program Files\Java
                dsp_keystore_path: c:\temp\keystore.keystore
                dsp_keystore_password: temp123
                dsp_keystore_alias: target-env
                dsp_truststore_path: c:\temp\truststore.keystore
                dsp_truststore_password: truststore123
                connector_authentication_key: secret
            unix_cluster:
              description: |
                The request example is intended for updating Unix cluster hosts.
              summary: Unix - Cluster Environments
              value:
                hostname: host.company.co
                ssh_port: 22
                toolkit_path: /work
                nfs_addresses: [ "192.168.10.2" ]
                java_home: /Library/Java/JavaVirtualMachines/jdk/Contents/Home
                dsp_keystore_path: /tmp/keystore.keystore
                dsp_keystore_password: temp123
                dsp_keystore_alias: oracle-env
                dsp_truststore_path: /tmp/truststore.keystore
                dsp_truststore_password: truststore123
                oracle_jdbc_keystore_password: secret-pass
                oracle_tde_keystores_root_path: /keystore/root/path
                ssh_verification_strategy:
                  name: ACCEPT_ALWAYS
      required: true
    CreatePostgresSource:
      description: The parameters to create a PostgreSQL source.
      content:
        application/json:
          schema:
            x-body-name: source
            $ref: '#/components/schemas/PostgresSourceCreateParameters'
          examples:
            Postgres:
              description: |
                The request example is intended for creating a PostgreSQL source.
              summary: PostgreSQL source create
              value:
                name: postgres-source
                repository_id: "APPDATA_REPOSITORY-10"
                engine_id: "1"
                environment_id: "UNIX_HOST_ENVIRONMENT-3"
      required: true
    UpdatePostgresSource:
      description: The parameters to update a PostgreSQL source
      content:
        application/json:
          schema:
            x-body-name: source
            $ref: "#/components/schemas/PostgresSourceUpdateParameters"
          examples:
            postgres:
              description: |
                The request example is intended for updating a PostgreSQL source.
              summary: PostgreSQL source update
              value:
                name: postgres-source-update


security:
  - ApiKeyAuth: [ ]