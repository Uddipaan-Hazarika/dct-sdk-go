/*
Delphix DCT API

Delphix DCT API

API version: 1.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// UpdateVDBGroupParameters Parameters to update a VDB group.
type UpdateVDBGroupParameters struct {
	// The name of the VDB group.
	Name *string `json:"name,omitempty"`
	VdbIds []string `json:"vdb_ids,omitempty"`
}

// NewUpdateVDBGroupParameters instantiates a new UpdateVDBGroupParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateVDBGroupParameters() *UpdateVDBGroupParameters {
	this := UpdateVDBGroupParameters{}
	return &this
}

// NewUpdateVDBGroupParametersWithDefaults instantiates a new UpdateVDBGroupParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateVDBGroupParametersWithDefaults() *UpdateVDBGroupParameters {
	this := UpdateVDBGroupParameters{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateVDBGroupParameters) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVDBGroupParameters) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateVDBGroupParameters) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateVDBGroupParameters) SetName(v string) {
	o.Name = &v
}

// GetVdbIds returns the VdbIds field value if set, zero value otherwise.
func (o *UpdateVDBGroupParameters) GetVdbIds() []string {
	if o == nil || o.VdbIds == nil {
		var ret []string
		return ret
	}
	return o.VdbIds
}

// GetVdbIdsOk returns a tuple with the VdbIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVDBGroupParameters) GetVdbIdsOk() ([]string, bool) {
	if o == nil || o.VdbIds == nil {
		return nil, false
	}
	return o.VdbIds, true
}

// HasVdbIds returns a boolean if a field has been set.
func (o *UpdateVDBGroupParameters) HasVdbIds() bool {
	if o != nil && o.VdbIds != nil {
		return true
	}

	return false
}

// SetVdbIds gets a reference to the given []string and assigns it to the VdbIds field.
func (o *UpdateVDBGroupParameters) SetVdbIds(v []string) {
	o.VdbIds = v
}

func (o UpdateVDBGroupParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.VdbIds != nil {
		toSerialize["vdb_ids"] = o.VdbIds
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateVDBGroupParameters struct {
	value *UpdateVDBGroupParameters
	isSet bool
}

func (v NullableUpdateVDBGroupParameters) Get() *UpdateVDBGroupParameters {
	return v.value
}

func (v *NullableUpdateVDBGroupParameters) Set(val *UpdateVDBGroupParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateVDBGroupParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateVDBGroupParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateVDBGroupParameters(val *UpdateVDBGroupParameters) *NullableUpdateVDBGroupParameters {
	return &NullableUpdateVDBGroupParameters{value: val, isSet: true}
}

func (v NullableUpdateVDBGroupParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateVDBGroupParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


