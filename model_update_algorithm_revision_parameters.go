/*
Delphix DCT API

Delphix DCT API

API version: 3.9.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the UpdateAlgorithmRevisionParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAlgorithmRevisionParameters{}

// UpdateAlgorithmRevisionParameters Parameters to update a masking algorithm revision.
type UpdateAlgorithmRevisionParameters struct {
	// The name of this algorithm revision.
	Name *string `json:"name,omitempty"`
	// A note of this algorithm revision.
	Note *string `json:"note,omitempty"`
}

// NewUpdateAlgorithmRevisionParameters instantiates a new UpdateAlgorithmRevisionParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAlgorithmRevisionParameters() *UpdateAlgorithmRevisionParameters {
	this := UpdateAlgorithmRevisionParameters{}
	return &this
}

// NewUpdateAlgorithmRevisionParametersWithDefaults instantiates a new UpdateAlgorithmRevisionParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAlgorithmRevisionParametersWithDefaults() *UpdateAlgorithmRevisionParameters {
	this := UpdateAlgorithmRevisionParameters{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateAlgorithmRevisionParameters) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAlgorithmRevisionParameters) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateAlgorithmRevisionParameters) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateAlgorithmRevisionParameters) SetName(v string) {
	o.Name = &v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *UpdateAlgorithmRevisionParameters) GetNote() string {
	if o == nil || IsNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAlgorithmRevisionParameters) GetNoteOk() (*string, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *UpdateAlgorithmRevisionParameters) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *UpdateAlgorithmRevisionParameters) SetNote(v string) {
	o.Note = &v
}

func (o UpdateAlgorithmRevisionParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAlgorithmRevisionParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	return toSerialize, nil
}

type NullableUpdateAlgorithmRevisionParameters struct {
	value *UpdateAlgorithmRevisionParameters
	isSet bool
}

func (v NullableUpdateAlgorithmRevisionParameters) Get() *UpdateAlgorithmRevisionParameters {
	return v.value
}

func (v *NullableUpdateAlgorithmRevisionParameters) Set(val *UpdateAlgorithmRevisionParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAlgorithmRevisionParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAlgorithmRevisionParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAlgorithmRevisionParameters(val *UpdateAlgorithmRevisionParameters) *NullableUpdateAlgorithmRevisionParameters {
	return &NullableUpdateAlgorithmRevisionParameters{value: val, isSet: true}
}

func (v NullableUpdateAlgorithmRevisionParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAlgorithmRevisionParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


