/*
Delphix DCT API

Delphix DCT API

API version: 3.5.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the AlgorithmCreateParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlgorithmCreateParameters{}

// AlgorithmCreateParameters Parameters to create a masking algorithm.
type AlgorithmCreateParameters struct {
	// The name of this Algorithm.
	Name string `json:"name"`
	// A description of this algorithm.
	Description *string `json:"description,omitempty"`
	// The id of the engine onto which this algorithm will be created.
	EngineId string `json:"engine_id"`
	// The configuration of this algorithm.
	Config map[string]interface{} `json:"config"`
	// Entity ID for the framework of this algorithm.
	FrameworkId int32 `json:"framework_id"`
}

// NewAlgorithmCreateParameters instantiates a new AlgorithmCreateParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlgorithmCreateParameters(name string, engineId string, config map[string]interface{}, frameworkId int32) *AlgorithmCreateParameters {
	this := AlgorithmCreateParameters{}
	this.Name = name
	this.EngineId = engineId
	this.Config = config
	this.FrameworkId = frameworkId
	return &this
}

// NewAlgorithmCreateParametersWithDefaults instantiates a new AlgorithmCreateParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlgorithmCreateParametersWithDefaults() *AlgorithmCreateParameters {
	this := AlgorithmCreateParameters{}
	return &this
}

// GetName returns the Name field value
func (o *AlgorithmCreateParameters) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AlgorithmCreateParameters) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AlgorithmCreateParameters) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AlgorithmCreateParameters) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlgorithmCreateParameters) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AlgorithmCreateParameters) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AlgorithmCreateParameters) SetDescription(v string) {
	o.Description = &v
}

// GetEngineId returns the EngineId field value
func (o *AlgorithmCreateParameters) GetEngineId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EngineId
}

// GetEngineIdOk returns a tuple with the EngineId field value
// and a boolean to check if the value has been set.
func (o *AlgorithmCreateParameters) GetEngineIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EngineId, true
}

// SetEngineId sets field value
func (o *AlgorithmCreateParameters) SetEngineId(v string) {
	o.EngineId = v
}

// GetConfig returns the Config field value
func (o *AlgorithmCreateParameters) GetConfig() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *AlgorithmCreateParameters) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Config, true
}

// SetConfig sets field value
func (o *AlgorithmCreateParameters) SetConfig(v map[string]interface{}) {
	o.Config = v
}

// GetFrameworkId returns the FrameworkId field value
func (o *AlgorithmCreateParameters) GetFrameworkId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FrameworkId
}

// GetFrameworkIdOk returns a tuple with the FrameworkId field value
// and a boolean to check if the value has been set.
func (o *AlgorithmCreateParameters) GetFrameworkIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FrameworkId, true
}

// SetFrameworkId sets field value
func (o *AlgorithmCreateParameters) SetFrameworkId(v int32) {
	o.FrameworkId = v
}

func (o AlgorithmCreateParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlgorithmCreateParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["engine_id"] = o.EngineId
	toSerialize["config"] = o.Config
	toSerialize["framework_id"] = o.FrameworkId
	return toSerialize, nil
}

type NullableAlgorithmCreateParameters struct {
	value *AlgorithmCreateParameters
	isSet bool
}

func (v NullableAlgorithmCreateParameters) Get() *AlgorithmCreateParameters {
	return v.value
}

func (v *NullableAlgorithmCreateParameters) Set(val *AlgorithmCreateParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableAlgorithmCreateParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableAlgorithmCreateParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlgorithmCreateParameters(val *AlgorithmCreateParameters) *NullableAlgorithmCreateParameters {
	return &NullableAlgorithmCreateParameters{value: val, isSet: true}
}

func (v NullableAlgorithmCreateParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlgorithmCreateParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


