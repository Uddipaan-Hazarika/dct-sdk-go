/*
Delphix DCT API

Delphix DCT API

API version: 3.9.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the ProvisionVDBByLocationParametersAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProvisionVDBByLocationParametersAllOf{}

// ProvisionVDBByLocationParametersAllOf struct for ProvisionVDBByLocationParametersAllOf
type ProvisionVDBByLocationParametersAllOf struct {
	// The ID of the Engine onto which to provision. If the source ID unambiguously identifies a source object, this parameter is unnecessary and ignored.
	EngineId *string `json:"engine_id,omitempty"`
	// The ID of the source object (dSource or VDB) to provision from. All other objects referenced by the parameters must live on the same engine as the source.
	SourceDataId *string `json:"source_data_id,omitempty"`
	// Whether the account provisioning this VDB must be configured as owner of the VDB.
	MakeCurrentAccountOwner *bool `json:"make_current_account_owner,omitempty"`
}

// NewProvisionVDBByLocationParametersAllOf instantiates a new ProvisionVDBByLocationParametersAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisionVDBByLocationParametersAllOf() *ProvisionVDBByLocationParametersAllOf {
	this := ProvisionVDBByLocationParametersAllOf{}
	var makeCurrentAccountOwner bool = true
	this.MakeCurrentAccountOwner = &makeCurrentAccountOwner
	return &this
}

// NewProvisionVDBByLocationParametersAllOfWithDefaults instantiates a new ProvisionVDBByLocationParametersAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisionVDBByLocationParametersAllOfWithDefaults() *ProvisionVDBByLocationParametersAllOf {
	this := ProvisionVDBByLocationParametersAllOf{}
	var makeCurrentAccountOwner bool = true
	this.MakeCurrentAccountOwner = &makeCurrentAccountOwner
	return &this
}

// GetEngineId returns the EngineId field value if set, zero value otherwise.
func (o *ProvisionVDBByLocationParametersAllOf) GetEngineId() string {
	if o == nil || IsNil(o.EngineId) {
		var ret string
		return ret
	}
	return *o.EngineId
}

// GetEngineIdOk returns a tuple with the EngineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionVDBByLocationParametersAllOf) GetEngineIdOk() (*string, bool) {
	if o == nil || IsNil(o.EngineId) {
		return nil, false
	}
	return o.EngineId, true
}

// HasEngineId returns a boolean if a field has been set.
func (o *ProvisionVDBByLocationParametersAllOf) HasEngineId() bool {
	if o != nil && !IsNil(o.EngineId) {
		return true
	}

	return false
}

// SetEngineId gets a reference to the given string and assigns it to the EngineId field.
func (o *ProvisionVDBByLocationParametersAllOf) SetEngineId(v string) {
	o.EngineId = &v
}

// GetSourceDataId returns the SourceDataId field value if set, zero value otherwise.
func (o *ProvisionVDBByLocationParametersAllOf) GetSourceDataId() string {
	if o == nil || IsNil(o.SourceDataId) {
		var ret string
		return ret
	}
	return *o.SourceDataId
}

// GetSourceDataIdOk returns a tuple with the SourceDataId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionVDBByLocationParametersAllOf) GetSourceDataIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceDataId) {
		return nil, false
	}
	return o.SourceDataId, true
}

// HasSourceDataId returns a boolean if a field has been set.
func (o *ProvisionVDBByLocationParametersAllOf) HasSourceDataId() bool {
	if o != nil && !IsNil(o.SourceDataId) {
		return true
	}

	return false
}

// SetSourceDataId gets a reference to the given string and assigns it to the SourceDataId field.
func (o *ProvisionVDBByLocationParametersAllOf) SetSourceDataId(v string) {
	o.SourceDataId = &v
}

// GetMakeCurrentAccountOwner returns the MakeCurrentAccountOwner field value if set, zero value otherwise.
func (o *ProvisionVDBByLocationParametersAllOf) GetMakeCurrentAccountOwner() bool {
	if o == nil || IsNil(o.MakeCurrentAccountOwner) {
		var ret bool
		return ret
	}
	return *o.MakeCurrentAccountOwner
}

// GetMakeCurrentAccountOwnerOk returns a tuple with the MakeCurrentAccountOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionVDBByLocationParametersAllOf) GetMakeCurrentAccountOwnerOk() (*bool, bool) {
	if o == nil || IsNil(o.MakeCurrentAccountOwner) {
		return nil, false
	}
	return o.MakeCurrentAccountOwner, true
}

// HasMakeCurrentAccountOwner returns a boolean if a field has been set.
func (o *ProvisionVDBByLocationParametersAllOf) HasMakeCurrentAccountOwner() bool {
	if o != nil && !IsNil(o.MakeCurrentAccountOwner) {
		return true
	}

	return false
}

// SetMakeCurrentAccountOwner gets a reference to the given bool and assigns it to the MakeCurrentAccountOwner field.
func (o *ProvisionVDBByLocationParametersAllOf) SetMakeCurrentAccountOwner(v bool) {
	o.MakeCurrentAccountOwner = &v
}

func (o ProvisionVDBByLocationParametersAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProvisionVDBByLocationParametersAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EngineId) {
		toSerialize["engine_id"] = o.EngineId
	}
	if !IsNil(o.SourceDataId) {
		toSerialize["source_data_id"] = o.SourceDataId
	}
	if !IsNil(o.MakeCurrentAccountOwner) {
		toSerialize["make_current_account_owner"] = o.MakeCurrentAccountOwner
	}
	return toSerialize, nil
}

type NullableProvisionVDBByLocationParametersAllOf struct {
	value *ProvisionVDBByLocationParametersAllOf
	isSet bool
}

func (v NullableProvisionVDBByLocationParametersAllOf) Get() *ProvisionVDBByLocationParametersAllOf {
	return v.value
}

func (v *NullableProvisionVDBByLocationParametersAllOf) Set(val *ProvisionVDBByLocationParametersAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisionVDBByLocationParametersAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisionVDBByLocationParametersAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisionVDBByLocationParametersAllOf(val *ProvisionVDBByLocationParametersAllOf) *NullableProvisionVDBByLocationParametersAllOf {
	return &NullableProvisionVDBByLocationParametersAllOf{value: val, isSet: true}
}

func (v NullableProvisionVDBByLocationParametersAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisionVDBByLocationParametersAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


