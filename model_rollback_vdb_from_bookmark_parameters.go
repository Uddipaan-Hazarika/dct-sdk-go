/*
Delphix DCT API

Delphix DCT API

API version: 3.5.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the RollbackVDBFromBookmarkParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RollbackVDBFromBookmarkParameters{}

// RollbackVDBFromBookmarkParameters struct for RollbackVDBFromBookmarkParameters
type RollbackVDBFromBookmarkParameters struct {
	// The ID of the bookmark from which to execute the operation. The bookmark must contain only one VDB.
	BookmarkId string `json:"bookmark_id"`
}

// NewRollbackVDBFromBookmarkParameters instantiates a new RollbackVDBFromBookmarkParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRollbackVDBFromBookmarkParameters(bookmarkId string) *RollbackVDBFromBookmarkParameters {
	this := RollbackVDBFromBookmarkParameters{}
	this.BookmarkId = bookmarkId
	return &this
}

// NewRollbackVDBFromBookmarkParametersWithDefaults instantiates a new RollbackVDBFromBookmarkParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRollbackVDBFromBookmarkParametersWithDefaults() *RollbackVDBFromBookmarkParameters {
	this := RollbackVDBFromBookmarkParameters{}
	return &this
}

// GetBookmarkId returns the BookmarkId field value
func (o *RollbackVDBFromBookmarkParameters) GetBookmarkId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BookmarkId
}

// GetBookmarkIdOk returns a tuple with the BookmarkId field value
// and a boolean to check if the value has been set.
func (o *RollbackVDBFromBookmarkParameters) GetBookmarkIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BookmarkId, true
}

// SetBookmarkId sets field value
func (o *RollbackVDBFromBookmarkParameters) SetBookmarkId(v string) {
	o.BookmarkId = v
}

func (o RollbackVDBFromBookmarkParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RollbackVDBFromBookmarkParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bookmark_id"] = o.BookmarkId
	return toSerialize, nil
}

type NullableRollbackVDBFromBookmarkParameters struct {
	value *RollbackVDBFromBookmarkParameters
	isSet bool
}

func (v NullableRollbackVDBFromBookmarkParameters) Get() *RollbackVDBFromBookmarkParameters {
	return v.value
}

func (v *NullableRollbackVDBFromBookmarkParameters) Set(val *RollbackVDBFromBookmarkParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableRollbackVDBFromBookmarkParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableRollbackVDBFromBookmarkParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRollbackVDBFromBookmarkParameters(val *RollbackVDBFromBookmarkParameters) *NullableRollbackVDBFromBookmarkParameters {
	return &NullableRollbackVDBFromBookmarkParameters{value: val, isSet: true}
}

func (v NullableRollbackVDBFromBookmarkParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRollbackVDBFromBookmarkParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


