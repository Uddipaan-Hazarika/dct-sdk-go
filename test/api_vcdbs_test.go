/*
Delphix DCT API

Testing VCDBsApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package delphix_dct_api

import (
	"context"
	"testing"

	openapiclient "github.com/delphix/dct-sdk-go/v21"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_delphix_dct_api_VCDBsApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test VCDBsApiService CreateVcdbTags", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var vcdbId string

		resp, httpRes, err := apiClient.VCDBsApi.CreateVcdbTags(context.Background(), vcdbId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VCDBsApiService DeleteVcdbTags", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var vcdbId string

		httpRes, err := apiClient.VCDBsApi.DeleteVcdbTags(context.Background(), vcdbId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VCDBsApiService GetTagsVcdb", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var vcdbId string

		resp, httpRes, err := apiClient.VCDBsApi.GetTagsVcdb(context.Background(), vcdbId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VCDBsApiService GetVcdbById", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var vcdbId string

		resp, httpRes, err := apiClient.VCDBsApi.GetVcdbById(context.Background(), vcdbId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VCDBsApiService GetVcdbs", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.VCDBsApi.GetVcdbs(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VCDBsApiService SearchVcdbs", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.VCDBsApi.SearchVcdbs(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
