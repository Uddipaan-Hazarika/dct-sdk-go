/*
Delphix DCT API

Delphix DCT API

API version: 3.1.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the ConnectivityCheckParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectivityCheckParameters{}

// ConnectivityCheckParameters Parameters to check connectivity between engine and remote host.
type ConnectivityCheckParameters struct {
	// The ID of the engine to check.
	EngineId string `json:"engine_id"`
	// The hostname of the remote host machine to check.
	Host string `json:"host"`
	// The port of the remote host machine to check.
	Port NullableInt32 `json:"port"`
	// The username of the remote host machine to check.
	Username *string `json:"username,omitempty"`
	// The password of the remote host machine to check.
	Password *string `json:"password,omitempty"`
}

// NewConnectivityCheckParameters instantiates a new ConnectivityCheckParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectivityCheckParameters(engineId string, host string, port NullableInt32) *ConnectivityCheckParameters {
	this := ConnectivityCheckParameters{}
	this.EngineId = engineId
	this.Host = host
	this.Port = port
	return &this
}

// NewConnectivityCheckParametersWithDefaults instantiates a new ConnectivityCheckParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectivityCheckParametersWithDefaults() *ConnectivityCheckParameters {
	this := ConnectivityCheckParameters{}
	return &this
}

// GetEngineId returns the EngineId field value
func (o *ConnectivityCheckParameters) GetEngineId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EngineId
}

// GetEngineIdOk returns a tuple with the EngineId field value
// and a boolean to check if the value has been set.
func (o *ConnectivityCheckParameters) GetEngineIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EngineId, true
}

// SetEngineId sets field value
func (o *ConnectivityCheckParameters) SetEngineId(v string) {
	o.EngineId = v
}

// GetHost returns the Host field value
func (o *ConnectivityCheckParameters) GetHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *ConnectivityCheckParameters) GetHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *ConnectivityCheckParameters) SetHost(v string) {
	o.Host = v
}

// GetPort returns the Port field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *ConnectivityCheckParameters) GetPort() int32 {
	if o == nil || o.Port.Get() == nil {
		var ret int32
		return ret
	}

	return *o.Port.Get()
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectivityCheckParameters) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Port.Get(), o.Port.IsSet()
}

// SetPort sets field value
func (o *ConnectivityCheckParameters) SetPort(v int32) {
	o.Port.Set(&v)
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ConnectivityCheckParameters) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectivityCheckParameters) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ConnectivityCheckParameters) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ConnectivityCheckParameters) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ConnectivityCheckParameters) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectivityCheckParameters) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ConnectivityCheckParameters) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ConnectivityCheckParameters) SetPassword(v string) {
	o.Password = &v
}

func (o ConnectivityCheckParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectivityCheckParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["engine_id"] = o.EngineId
	toSerialize["host"] = o.Host
	toSerialize["port"] = o.Port.Get()
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	return toSerialize, nil
}

type NullableConnectivityCheckParameters struct {
	value *ConnectivityCheckParameters
	isSet bool
}

func (v NullableConnectivityCheckParameters) Get() *ConnectivityCheckParameters {
	return v.value
}

func (v *NullableConnectivityCheckParameters) Set(val *ConnectivityCheckParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectivityCheckParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectivityCheckParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectivityCheckParameters(val *ConnectivityCheckParameters) *NullableConnectivityCheckParameters {
	return &NullableConnectivityCheckParameters{value: val, isSet: true}
}

func (v NullableConnectivityCheckParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectivityCheckParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


