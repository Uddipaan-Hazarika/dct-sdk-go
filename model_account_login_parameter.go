/*
Delphix DCT API

Delphix DCT API

API version: 3.5.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the AccountLoginParameter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountLoginParameter{}

// AccountLoginParameter struct for AccountLoginParameter
type AccountLoginParameter struct {
	// Username of the account that needs to login
	Username string `json:"username"`
	// Password of the account that needs to login.
	Password string `json:"password"`
}

// NewAccountLoginParameter instantiates a new AccountLoginParameter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountLoginParameter(username string, password string) *AccountLoginParameter {
	this := AccountLoginParameter{}
	this.Username = username
	this.Password = password
	return &this
}

// NewAccountLoginParameterWithDefaults instantiates a new AccountLoginParameter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountLoginParameterWithDefaults() *AccountLoginParameter {
	this := AccountLoginParameter{}
	return &this
}

// GetUsername returns the Username field value
func (o *AccountLoginParameter) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *AccountLoginParameter) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *AccountLoginParameter) SetUsername(v string) {
	o.Username = v
}

// GetPassword returns the Password field value
func (o *AccountLoginParameter) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *AccountLoginParameter) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *AccountLoginParameter) SetPassword(v string) {
	o.Password = v
}

func (o AccountLoginParameter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountLoginParameter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["username"] = o.Username
	toSerialize["password"] = o.Password
	return toSerialize, nil
}

type NullableAccountLoginParameter struct {
	value *AccountLoginParameter
	isSet bool
}

func (v NullableAccountLoginParameter) Get() *AccountLoginParameter {
	return v.value
}

func (v *NullableAccountLoginParameter) Set(val *AccountLoginParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountLoginParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountLoginParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountLoginParameter(val *AccountLoginParameter) *NullableAccountLoginParameter {
	return &NullableAccountLoginParameter{value: val, isSet: true}
}

func (v NullableAccountLoginParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountLoginParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


