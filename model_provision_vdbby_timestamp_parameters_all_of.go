/*
Delphix DCT API

Delphix DCT API

API version: 2.0.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// ProvisionVDBByTimestampParametersAllOf struct for ProvisionVDBByTimestampParametersAllOf
type ProvisionVDBByTimestampParametersAllOf struct {
	// The ID of the Engine onto which to provision. If the source ID unambiguously identifies a source object, this parameter is unnecessary and ignored.
	EngineId *int64 `json:"engine_id,omitempty"`
	// The ID of the source object (dSource or VDB) to provision from. All other objects referenced by the parameters must live on the same engine as the source.
	SourceDataId string `json:"source_data_id"`
}

// NewProvisionVDBByTimestampParametersAllOf instantiates a new ProvisionVDBByTimestampParametersAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisionVDBByTimestampParametersAllOf(sourceDataId string) *ProvisionVDBByTimestampParametersAllOf {
	this := ProvisionVDBByTimestampParametersAllOf{}
	this.SourceDataId = sourceDataId
	return &this
}

// NewProvisionVDBByTimestampParametersAllOfWithDefaults instantiates a new ProvisionVDBByTimestampParametersAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisionVDBByTimestampParametersAllOfWithDefaults() *ProvisionVDBByTimestampParametersAllOf {
	this := ProvisionVDBByTimestampParametersAllOf{}
	return &this
}

// GetEngineId returns the EngineId field value if set, zero value otherwise.
func (o *ProvisionVDBByTimestampParametersAllOf) GetEngineId() int64 {
	if o == nil || o.EngineId == nil {
		var ret int64
		return ret
	}
	return *o.EngineId
}

// GetEngineIdOk returns a tuple with the EngineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionVDBByTimestampParametersAllOf) GetEngineIdOk() (*int64, bool) {
	if o == nil || o.EngineId == nil {
		return nil, false
	}
	return o.EngineId, true
}

// HasEngineId returns a boolean if a field has been set.
func (o *ProvisionVDBByTimestampParametersAllOf) HasEngineId() bool {
	if o != nil && o.EngineId != nil {
		return true
	}

	return false
}

// SetEngineId gets a reference to the given int64 and assigns it to the EngineId field.
func (o *ProvisionVDBByTimestampParametersAllOf) SetEngineId(v int64) {
	o.EngineId = &v
}

// GetSourceDataId returns the SourceDataId field value
func (o *ProvisionVDBByTimestampParametersAllOf) GetSourceDataId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceDataId
}

// GetSourceDataIdOk returns a tuple with the SourceDataId field value
// and a boolean to check if the value has been set.
func (o *ProvisionVDBByTimestampParametersAllOf) GetSourceDataIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SourceDataId, true
}

// SetSourceDataId sets field value
func (o *ProvisionVDBByTimestampParametersAllOf) SetSourceDataId(v string) {
	o.SourceDataId = v
}

func (o ProvisionVDBByTimestampParametersAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EngineId != nil {
		toSerialize["engine_id"] = o.EngineId
	}
	if true {
		toSerialize["source_data_id"] = o.SourceDataId
	}
	return json.Marshal(toSerialize)
}

type NullableProvisionVDBByTimestampParametersAllOf struct {
	value *ProvisionVDBByTimestampParametersAllOf
	isSet bool
}

func (v NullableProvisionVDBByTimestampParametersAllOf) Get() *ProvisionVDBByTimestampParametersAllOf {
	return v.value
}

func (v *NullableProvisionVDBByTimestampParametersAllOf) Set(val *ProvisionVDBByTimestampParametersAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisionVDBByTimestampParametersAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisionVDBByTimestampParametersAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisionVDBByTimestampParametersAllOf(val *ProvisionVDBByTimestampParametersAllOf) *NullableProvisionVDBByTimestampParametersAllOf {
	return &NullableProvisionVDBByTimestampParametersAllOf{value: val, isSet: true}
}

func (v NullableProvisionVDBByTimestampParametersAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisionVDBByTimestampParametersAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


