/*
Delphix DCT API

Delphix DCT API

API version: 3.1.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
	"time"
)

// checks if the MaskingJob type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MaskingJob{}

// MaskingJob A masking job.
type MaskingJob struct {
	// The MaskingJob entity ID.
	Id *string `json:"id,omitempty"`
	// The name of this MaskingJob.
	Name *string `json:"name,omitempty"`
	Ruleset *MaskingRuleset `json:"ruleset,omitempty"`
	// Whether this is an on-the-fly masking job.
	IsOnTheFlyMasking *bool `json:"is_on_the_fly_masking,omitempty"`
	// The date this MaskingJob was created.
	CreationDate *time.Time `json:"creation_date,omitempty"`
	// The date this MaskingJob was last executed to completion.
	LastCompletedExecutionDate *time.Time `json:"last_completed_execution_date,omitempty"`
	// The status of this MaskingJob's last execution.
	LastExecutionStatus *string `json:"last_execution_status,omitempty"`
	// The username of the Connector used by the MaskingJob.
	ConnectorUsername NullableString `json:"connector_username,omitempty"`
	// The password of the Connector used by the MaskingJob.
	ConnectorPassword NullableString `json:"connector_password,omitempty"`
	// The username of the source Connector used by the on-the-fly MaskingJob.
	OnTheFlySourceConnectorUsername NullableString `json:"on_the_fly_source_connector_username,omitempty"`
	// The password of the source Connector used by the on-the-fly MaskingJob.
	OnTheFlySourceConnectorPassword NullableString `json:"on_the_fly_source_connector_password,omitempty"`
	Tags []Tag `json:"tags,omitempty"`
}

// NewMaskingJob instantiates a new MaskingJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMaskingJob() *MaskingJob {
	this := MaskingJob{}
	return &this
}

// NewMaskingJobWithDefaults instantiates a new MaskingJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMaskingJobWithDefaults() *MaskingJob {
	this := MaskingJob{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MaskingJob) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingJob) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MaskingJob) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MaskingJob) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MaskingJob) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingJob) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MaskingJob) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MaskingJob) SetName(v string) {
	o.Name = &v
}

// GetRuleset returns the Ruleset field value if set, zero value otherwise.
func (o *MaskingJob) GetRuleset() MaskingRuleset {
	if o == nil || IsNil(o.Ruleset) {
		var ret MaskingRuleset
		return ret
	}
	return *o.Ruleset
}

// GetRulesetOk returns a tuple with the Ruleset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingJob) GetRulesetOk() (*MaskingRuleset, bool) {
	if o == nil || IsNil(o.Ruleset) {
		return nil, false
	}
	return o.Ruleset, true
}

// HasRuleset returns a boolean if a field has been set.
func (o *MaskingJob) HasRuleset() bool {
	if o != nil && !IsNil(o.Ruleset) {
		return true
	}

	return false
}

// SetRuleset gets a reference to the given MaskingRuleset and assigns it to the Ruleset field.
func (o *MaskingJob) SetRuleset(v MaskingRuleset) {
	o.Ruleset = &v
}

// GetIsOnTheFlyMasking returns the IsOnTheFlyMasking field value if set, zero value otherwise.
func (o *MaskingJob) GetIsOnTheFlyMasking() bool {
	if o == nil || IsNil(o.IsOnTheFlyMasking) {
		var ret bool
		return ret
	}
	return *o.IsOnTheFlyMasking
}

// GetIsOnTheFlyMaskingOk returns a tuple with the IsOnTheFlyMasking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingJob) GetIsOnTheFlyMaskingOk() (*bool, bool) {
	if o == nil || IsNil(o.IsOnTheFlyMasking) {
		return nil, false
	}
	return o.IsOnTheFlyMasking, true
}

// HasIsOnTheFlyMasking returns a boolean if a field has been set.
func (o *MaskingJob) HasIsOnTheFlyMasking() bool {
	if o != nil && !IsNil(o.IsOnTheFlyMasking) {
		return true
	}

	return false
}

// SetIsOnTheFlyMasking gets a reference to the given bool and assigns it to the IsOnTheFlyMasking field.
func (o *MaskingJob) SetIsOnTheFlyMasking(v bool) {
	o.IsOnTheFlyMasking = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *MaskingJob) GetCreationDate() time.Time {
	if o == nil || IsNil(o.CreationDate) {
		var ret time.Time
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingJob) GetCreationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationDate) {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *MaskingJob) HasCreationDate() bool {
	if o != nil && !IsNil(o.CreationDate) {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given time.Time and assigns it to the CreationDate field.
func (o *MaskingJob) SetCreationDate(v time.Time) {
	o.CreationDate = &v
}

// GetLastCompletedExecutionDate returns the LastCompletedExecutionDate field value if set, zero value otherwise.
func (o *MaskingJob) GetLastCompletedExecutionDate() time.Time {
	if o == nil || IsNil(o.LastCompletedExecutionDate) {
		var ret time.Time
		return ret
	}
	return *o.LastCompletedExecutionDate
}

// GetLastCompletedExecutionDateOk returns a tuple with the LastCompletedExecutionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingJob) GetLastCompletedExecutionDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastCompletedExecutionDate) {
		return nil, false
	}
	return o.LastCompletedExecutionDate, true
}

// HasLastCompletedExecutionDate returns a boolean if a field has been set.
func (o *MaskingJob) HasLastCompletedExecutionDate() bool {
	if o != nil && !IsNil(o.LastCompletedExecutionDate) {
		return true
	}

	return false
}

// SetLastCompletedExecutionDate gets a reference to the given time.Time and assigns it to the LastCompletedExecutionDate field.
func (o *MaskingJob) SetLastCompletedExecutionDate(v time.Time) {
	o.LastCompletedExecutionDate = &v
}

// GetLastExecutionStatus returns the LastExecutionStatus field value if set, zero value otherwise.
func (o *MaskingJob) GetLastExecutionStatus() string {
	if o == nil || IsNil(o.LastExecutionStatus) {
		var ret string
		return ret
	}
	return *o.LastExecutionStatus
}

// GetLastExecutionStatusOk returns a tuple with the LastExecutionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingJob) GetLastExecutionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.LastExecutionStatus) {
		return nil, false
	}
	return o.LastExecutionStatus, true
}

// HasLastExecutionStatus returns a boolean if a field has been set.
func (o *MaskingJob) HasLastExecutionStatus() bool {
	if o != nil && !IsNil(o.LastExecutionStatus) {
		return true
	}

	return false
}

// SetLastExecutionStatus gets a reference to the given string and assigns it to the LastExecutionStatus field.
func (o *MaskingJob) SetLastExecutionStatus(v string) {
	o.LastExecutionStatus = &v
}

// GetConnectorUsername returns the ConnectorUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MaskingJob) GetConnectorUsername() string {
	if o == nil || IsNil(o.ConnectorUsername.Get()) {
		var ret string
		return ret
	}
	return *o.ConnectorUsername.Get()
}

// GetConnectorUsernameOk returns a tuple with the ConnectorUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MaskingJob) GetConnectorUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConnectorUsername.Get(), o.ConnectorUsername.IsSet()
}

// HasConnectorUsername returns a boolean if a field has been set.
func (o *MaskingJob) HasConnectorUsername() bool {
	if o != nil && o.ConnectorUsername.IsSet() {
		return true
	}

	return false
}

// SetConnectorUsername gets a reference to the given NullableString and assigns it to the ConnectorUsername field.
func (o *MaskingJob) SetConnectorUsername(v string) {
	o.ConnectorUsername.Set(&v)
}
// SetConnectorUsernameNil sets the value for ConnectorUsername to be an explicit nil
func (o *MaskingJob) SetConnectorUsernameNil() {
	o.ConnectorUsername.Set(nil)
}

// UnsetConnectorUsername ensures that no value is present for ConnectorUsername, not even an explicit nil
func (o *MaskingJob) UnsetConnectorUsername() {
	o.ConnectorUsername.Unset()
}

// GetConnectorPassword returns the ConnectorPassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MaskingJob) GetConnectorPassword() string {
	if o == nil || IsNil(o.ConnectorPassword.Get()) {
		var ret string
		return ret
	}
	return *o.ConnectorPassword.Get()
}

// GetConnectorPasswordOk returns a tuple with the ConnectorPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MaskingJob) GetConnectorPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConnectorPassword.Get(), o.ConnectorPassword.IsSet()
}

// HasConnectorPassword returns a boolean if a field has been set.
func (o *MaskingJob) HasConnectorPassword() bool {
	if o != nil && o.ConnectorPassword.IsSet() {
		return true
	}

	return false
}

// SetConnectorPassword gets a reference to the given NullableString and assigns it to the ConnectorPassword field.
func (o *MaskingJob) SetConnectorPassword(v string) {
	o.ConnectorPassword.Set(&v)
}
// SetConnectorPasswordNil sets the value for ConnectorPassword to be an explicit nil
func (o *MaskingJob) SetConnectorPasswordNil() {
	o.ConnectorPassword.Set(nil)
}

// UnsetConnectorPassword ensures that no value is present for ConnectorPassword, not even an explicit nil
func (o *MaskingJob) UnsetConnectorPassword() {
	o.ConnectorPassword.Unset()
}

// GetOnTheFlySourceConnectorUsername returns the OnTheFlySourceConnectorUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MaskingJob) GetOnTheFlySourceConnectorUsername() string {
	if o == nil || IsNil(o.OnTheFlySourceConnectorUsername.Get()) {
		var ret string
		return ret
	}
	return *o.OnTheFlySourceConnectorUsername.Get()
}

// GetOnTheFlySourceConnectorUsernameOk returns a tuple with the OnTheFlySourceConnectorUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MaskingJob) GetOnTheFlySourceConnectorUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OnTheFlySourceConnectorUsername.Get(), o.OnTheFlySourceConnectorUsername.IsSet()
}

// HasOnTheFlySourceConnectorUsername returns a boolean if a field has been set.
func (o *MaskingJob) HasOnTheFlySourceConnectorUsername() bool {
	if o != nil && o.OnTheFlySourceConnectorUsername.IsSet() {
		return true
	}

	return false
}

// SetOnTheFlySourceConnectorUsername gets a reference to the given NullableString and assigns it to the OnTheFlySourceConnectorUsername field.
func (o *MaskingJob) SetOnTheFlySourceConnectorUsername(v string) {
	o.OnTheFlySourceConnectorUsername.Set(&v)
}
// SetOnTheFlySourceConnectorUsernameNil sets the value for OnTheFlySourceConnectorUsername to be an explicit nil
func (o *MaskingJob) SetOnTheFlySourceConnectorUsernameNil() {
	o.OnTheFlySourceConnectorUsername.Set(nil)
}

// UnsetOnTheFlySourceConnectorUsername ensures that no value is present for OnTheFlySourceConnectorUsername, not even an explicit nil
func (o *MaskingJob) UnsetOnTheFlySourceConnectorUsername() {
	o.OnTheFlySourceConnectorUsername.Unset()
}

// GetOnTheFlySourceConnectorPassword returns the OnTheFlySourceConnectorPassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MaskingJob) GetOnTheFlySourceConnectorPassword() string {
	if o == nil || IsNil(o.OnTheFlySourceConnectorPassword.Get()) {
		var ret string
		return ret
	}
	return *o.OnTheFlySourceConnectorPassword.Get()
}

// GetOnTheFlySourceConnectorPasswordOk returns a tuple with the OnTheFlySourceConnectorPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MaskingJob) GetOnTheFlySourceConnectorPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OnTheFlySourceConnectorPassword.Get(), o.OnTheFlySourceConnectorPassword.IsSet()
}

// HasOnTheFlySourceConnectorPassword returns a boolean if a field has been set.
func (o *MaskingJob) HasOnTheFlySourceConnectorPassword() bool {
	if o != nil && o.OnTheFlySourceConnectorPassword.IsSet() {
		return true
	}

	return false
}

// SetOnTheFlySourceConnectorPassword gets a reference to the given NullableString and assigns it to the OnTheFlySourceConnectorPassword field.
func (o *MaskingJob) SetOnTheFlySourceConnectorPassword(v string) {
	o.OnTheFlySourceConnectorPassword.Set(&v)
}
// SetOnTheFlySourceConnectorPasswordNil sets the value for OnTheFlySourceConnectorPassword to be an explicit nil
func (o *MaskingJob) SetOnTheFlySourceConnectorPasswordNil() {
	o.OnTheFlySourceConnectorPassword.Set(nil)
}

// UnsetOnTheFlySourceConnectorPassword ensures that no value is present for OnTheFlySourceConnectorPassword, not even an explicit nil
func (o *MaskingJob) UnsetOnTheFlySourceConnectorPassword() {
	o.OnTheFlySourceConnectorPassword.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *MaskingJob) GetTags() []Tag {
	if o == nil || IsNil(o.Tags) {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaskingJob) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *MaskingJob) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *MaskingJob) SetTags(v []Tag) {
	o.Tags = v
}

func (o MaskingJob) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MaskingJob) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Ruleset) {
		toSerialize["ruleset"] = o.Ruleset
	}
	if !IsNil(o.IsOnTheFlyMasking) {
		toSerialize["is_on_the_fly_masking"] = o.IsOnTheFlyMasking
	}
	if !IsNil(o.CreationDate) {
		toSerialize["creation_date"] = o.CreationDate
	}
	if !IsNil(o.LastCompletedExecutionDate) {
		toSerialize["last_completed_execution_date"] = o.LastCompletedExecutionDate
	}
	if !IsNil(o.LastExecutionStatus) {
		toSerialize["last_execution_status"] = o.LastExecutionStatus
	}
	if o.ConnectorUsername.IsSet() {
		toSerialize["connector_username"] = o.ConnectorUsername.Get()
	}
	if o.ConnectorPassword.IsSet() {
		toSerialize["connector_password"] = o.ConnectorPassword.Get()
	}
	if o.OnTheFlySourceConnectorUsername.IsSet() {
		toSerialize["on_the_fly_source_connector_username"] = o.OnTheFlySourceConnectorUsername.Get()
	}
	if o.OnTheFlySourceConnectorPassword.IsSet() {
		toSerialize["on_the_fly_source_connector_password"] = o.OnTheFlySourceConnectorPassword.Get()
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableMaskingJob struct {
	value *MaskingJob
	isSet bool
}

func (v NullableMaskingJob) Get() *MaskingJob {
	return v.value
}

func (v *NullableMaskingJob) Set(val *MaskingJob) {
	v.value = val
	v.isSet = true
}

func (v NullableMaskingJob) IsSet() bool {
	return v.isSet
}

func (v *NullableMaskingJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaskingJob(val *MaskingJob) *NullableMaskingJob {
	return &NullableMaskingJob{value: val, isSet: true}
}

func (v NullableMaskingJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaskingJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


