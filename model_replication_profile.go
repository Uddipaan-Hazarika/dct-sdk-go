/*
Delphix DCT API

Delphix DCT API

API version: 3.9.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// checks if the ReplicationProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplicationProfile{}

// ReplicationProfile A set of rules that define what data is replicated from a source to a target.
type ReplicationProfile struct {
	// The ReplicationProfile ID.
	Id *string `json:"id,omitempty"`
	// The ReplicationProfile name.
	Name *string `json:"name,omitempty"`
	// The ReplicationProfile type.
	Type *string `json:"type,omitempty"`
	// The ID of the engine that the ReplicationProfile belongs to.
	EngineId *string `json:"engine_id,omitempty"`
	// Globally unique identifier for this ReplicationProfile.
	ReplicationTag *string `json:"replication_tag,omitempty"`
	// The objects that are replicated by this ReplicationProfile.
	ReplicationObjects []string `json:"replication_objects,omitempty"`
	// The tags that are applied to this ReplicationProfile.
	Tags []Tag `json:"tags,omitempty"`
	// Indicates whether tag replication from primary object to replica object is enable or disabled for this ReplicationProfile.
	EnableTagReplication *bool `json:"enable_tag_replication,omitempty"`
}

// NewReplicationProfile instantiates a new ReplicationProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicationProfile() *ReplicationProfile {
	this := ReplicationProfile{}
	return &this
}

// NewReplicationProfileWithDefaults instantiates a new ReplicationProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicationProfileWithDefaults() *ReplicationProfile {
	this := ReplicationProfile{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ReplicationProfile) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationProfile) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ReplicationProfile) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ReplicationProfile) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ReplicationProfile) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationProfile) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ReplicationProfile) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ReplicationProfile) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ReplicationProfile) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationProfile) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ReplicationProfile) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ReplicationProfile) SetType(v string) {
	o.Type = &v
}

// GetEngineId returns the EngineId field value if set, zero value otherwise.
func (o *ReplicationProfile) GetEngineId() string {
	if o == nil || IsNil(o.EngineId) {
		var ret string
		return ret
	}
	return *o.EngineId
}

// GetEngineIdOk returns a tuple with the EngineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationProfile) GetEngineIdOk() (*string, bool) {
	if o == nil || IsNil(o.EngineId) {
		return nil, false
	}
	return o.EngineId, true
}

// HasEngineId returns a boolean if a field has been set.
func (o *ReplicationProfile) HasEngineId() bool {
	if o != nil && !IsNil(o.EngineId) {
		return true
	}

	return false
}

// SetEngineId gets a reference to the given string and assigns it to the EngineId field.
func (o *ReplicationProfile) SetEngineId(v string) {
	o.EngineId = &v
}

// GetReplicationTag returns the ReplicationTag field value if set, zero value otherwise.
func (o *ReplicationProfile) GetReplicationTag() string {
	if o == nil || IsNil(o.ReplicationTag) {
		var ret string
		return ret
	}
	return *o.ReplicationTag
}

// GetReplicationTagOk returns a tuple with the ReplicationTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationProfile) GetReplicationTagOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicationTag) {
		return nil, false
	}
	return o.ReplicationTag, true
}

// HasReplicationTag returns a boolean if a field has been set.
func (o *ReplicationProfile) HasReplicationTag() bool {
	if o != nil && !IsNil(o.ReplicationTag) {
		return true
	}

	return false
}

// SetReplicationTag gets a reference to the given string and assigns it to the ReplicationTag field.
func (o *ReplicationProfile) SetReplicationTag(v string) {
	o.ReplicationTag = &v
}

// GetReplicationObjects returns the ReplicationObjects field value if set, zero value otherwise.
func (o *ReplicationProfile) GetReplicationObjects() []string {
	if o == nil || IsNil(o.ReplicationObjects) {
		var ret []string
		return ret
	}
	return o.ReplicationObjects
}

// GetReplicationObjectsOk returns a tuple with the ReplicationObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationProfile) GetReplicationObjectsOk() ([]string, bool) {
	if o == nil || IsNil(o.ReplicationObjects) {
		return nil, false
	}
	return o.ReplicationObjects, true
}

// HasReplicationObjects returns a boolean if a field has been set.
func (o *ReplicationProfile) HasReplicationObjects() bool {
	if o != nil && !IsNil(o.ReplicationObjects) {
		return true
	}

	return false
}

// SetReplicationObjects gets a reference to the given []string and assigns it to the ReplicationObjects field.
func (o *ReplicationProfile) SetReplicationObjects(v []string) {
	o.ReplicationObjects = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ReplicationProfile) GetTags() []Tag {
	if o == nil || IsNil(o.Tags) {
		var ret []Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationProfile) GetTagsOk() ([]Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ReplicationProfile) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Tag and assigns it to the Tags field.
func (o *ReplicationProfile) SetTags(v []Tag) {
	o.Tags = v
}

// GetEnableTagReplication returns the EnableTagReplication field value if set, zero value otherwise.
func (o *ReplicationProfile) GetEnableTagReplication() bool {
	if o == nil || IsNil(o.EnableTagReplication) {
		var ret bool
		return ret
	}
	return *o.EnableTagReplication
}

// GetEnableTagReplicationOk returns a tuple with the EnableTagReplication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationProfile) GetEnableTagReplicationOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableTagReplication) {
		return nil, false
	}
	return o.EnableTagReplication, true
}

// HasEnableTagReplication returns a boolean if a field has been set.
func (o *ReplicationProfile) HasEnableTagReplication() bool {
	if o != nil && !IsNil(o.EnableTagReplication) {
		return true
	}

	return false
}

// SetEnableTagReplication gets a reference to the given bool and assigns it to the EnableTagReplication field.
func (o *ReplicationProfile) SetEnableTagReplication(v bool) {
	o.EnableTagReplication = &v
}

func (o ReplicationProfile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplicationProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.EngineId) {
		toSerialize["engine_id"] = o.EngineId
	}
	if !IsNil(o.ReplicationTag) {
		toSerialize["replication_tag"] = o.ReplicationTag
	}
	if !IsNil(o.ReplicationObjects) {
		toSerialize["replication_objects"] = o.ReplicationObjects
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.EnableTagReplication) {
		toSerialize["enable_tag_replication"] = o.EnableTagReplication
	}
	return toSerialize, nil
}

type NullableReplicationProfile struct {
	value *ReplicationProfile
	isSet bool
}

func (v NullableReplicationProfile) Get() *ReplicationProfile {
	return v.value
}

func (v *NullableReplicationProfile) Set(val *ReplicationProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicationProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicationProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicationProfile(val *ReplicationProfile) *NullableReplicationProfile {
	return &NullableReplicationProfile{value: val, isSet: true}
}

func (v NullableReplicationProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicationProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


