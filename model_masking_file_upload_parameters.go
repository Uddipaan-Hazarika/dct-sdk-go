/*
Delphix DCT API

Delphix DCT API

API version: 3.5.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
	"os"
)

// checks if the MaskingFileUploadParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MaskingFileUploadParameters{}

// MaskingFileUploadParameters Parameters to upload a file to a masking engine.
type MaskingFileUploadParameters struct {
	// The id of the engine onto which the file will be uploaded.
	EngineId string `json:"engine_id"`
	// The file to upload.
	File *os.File `json:"file"`
}

// NewMaskingFileUploadParameters instantiates a new MaskingFileUploadParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMaskingFileUploadParameters(engineId string, file *os.File) *MaskingFileUploadParameters {
	this := MaskingFileUploadParameters{}
	this.EngineId = engineId
	this.File = file
	return &this
}

// NewMaskingFileUploadParametersWithDefaults instantiates a new MaskingFileUploadParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMaskingFileUploadParametersWithDefaults() *MaskingFileUploadParameters {
	this := MaskingFileUploadParameters{}
	return &this
}

// GetEngineId returns the EngineId field value
func (o *MaskingFileUploadParameters) GetEngineId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EngineId
}

// GetEngineIdOk returns a tuple with the EngineId field value
// and a boolean to check if the value has been set.
func (o *MaskingFileUploadParameters) GetEngineIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EngineId, true
}

// SetEngineId sets field value
func (o *MaskingFileUploadParameters) SetEngineId(v string) {
	o.EngineId = v
}

// GetFile returns the File field value
func (o *MaskingFileUploadParameters) GetFile() *os.File {
	if o == nil {
		var ret *os.File
		return ret
	}

	return o.File
}

// GetFileOk returns a tuple with the File field value
// and a boolean to check if the value has been set.
func (o *MaskingFileUploadParameters) GetFileOk() (**os.File, bool) {
	if o == nil {
		return nil, false
	}
	return &o.File, true
}

// SetFile sets field value
func (o *MaskingFileUploadParameters) SetFile(v *os.File) {
	o.File = v
}

func (o MaskingFileUploadParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MaskingFileUploadParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["engine_id"] = o.EngineId
	toSerialize["file"] = o.File
	return toSerialize, nil
}

type NullableMaskingFileUploadParameters struct {
	value *MaskingFileUploadParameters
	isSet bool
}

func (v NullableMaskingFileUploadParameters) Get() *MaskingFileUploadParameters {
	return v.value
}

func (v *NullableMaskingFileUploadParameters) Set(val *MaskingFileUploadParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableMaskingFileUploadParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableMaskingFileUploadParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaskingFileUploadParameters(val *MaskingFileUploadParameters) *NullableMaskingFileUploadParameters {
	return &NullableMaskingFileUploadParameters{value: val, isSet: true}
}

func (v NullableMaskingFileUploadParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaskingFileUploadParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


